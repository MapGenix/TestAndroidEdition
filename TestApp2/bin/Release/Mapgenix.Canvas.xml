<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mapgenix.Canvas</name>
    </assembly>
    <members>
        <member name="T:Mapgenix.Canvas.BaseBitmapTileCache">
            <summary>
            Base class for BitmapTileCache system which inherits from BaseTileCache class.
            </summary>
            <remarks>Tile cache is an efficient way to improve drawing performance especially in case of large data or remote server images.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseBitmapTileCache.#ctor(System.String,Mapgenix.Canvas.TileImageFormat,Mapgenix.Canvas.TileMatrix)">
            <summary>
            Constructor of the class.
            </summary>
            <param name="cacheId">Cache identifier.</param>
            <param name="imageFormat">Image Format showing.</param>
            <param name="tileMatrix">Tile matrix system for calculating tiles.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseBitmapTileCache.GetTile(Mapgenix.Shapes.RectangleShape)">
            <summary>
            Returns the BitmapTile based on the bounding box passed in.
            </summary>
            <param name="tileBoundingBox">The target bounding box for the tile to retrieve.</param>
            <returns>Returns a BitmapTile based on the bounding box passed in.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseBitmapTileCache.GetTile(System.Int64,System.Int64)">
            <summary>
            Returns the BitmapTile based on a row and a column.
            </summary>
            <param name="row">The target row for the tile to retrieve.</param>
            <param name="column">The target column for the tile to retrieve.</param>
            <returns>Returns a BitmapTile based on a row and a column passed in.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseBitmapTileCache.GetTiles(Mapgenix.Shapes.RectangleShape)">
            <summary>
            Returns a collection of BitmapTiles based on a bounding box.
            </summary>
            <param name="worldExtent">The target bounding box for the tile to retrieve.</param>
            <returns>Returns a collection of BitmapTiles based on a bounding box passed in.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseBitmapTileCache.GetTileCore(System.Int64,System.Int64)">
            <summary>
            Returns the BitmapTile based on a row and a column. 
            The concrete class inheriting from BaseTileCache needs to implement the logic to retrieve a BitmapTile tile based on a row and a column.
            </summary>
            <param name="row">The target row for the tile to retrieve.</param>
            <param name="column">The target column for the tile to retrieve.</param>
            <returns>Returns a BitmapTile based on a row and a column passed in.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseBitmapTileCache.GetHigherScaleTile(Mapgenix.Shapes.RectangleShape,System.Double)">
            <summary>
            Returns the higher scale (or higher zoom level) BitmapTile used for preview effects when Zooming in or out.
            </summary>
            <param name="tileBoundingBox">The target bounding box for the tile to retrieve.</param>
            <param name="tileScale">The current tile scale.</param>
            <returns>Returns the higher scale(or higher zoomLevel) bitmap tile.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseBitmapTileCache.GetHigherScaleTileCore(Mapgenix.Shapes.RectangleShape,System.Double)">
            <summary>
            Can be overriden by its sub classes as a virtual method.
            Returns the higher scale (or higher zoom level) BitmapTile used for preview effects when Zooming in or out.
            </summary>
            <param name="tileBoundingBox">The target bounding box for the tile to retrieve.</param>
            <param name="tileScale">The current tile scale.</param>
            <returns>Returns the higher scale(or higher zoomLevel) bitmap tile.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseBitmapTileCache.MergeBitmaps(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.BitmapTile},System.Double)">
            <summary>
            Merges the collection of bitmap tiles passed in into a larger bitmap tile.
            </summary>
            <param name="tilesToMerge">The collection of bitmap tiles to be merged.</param>
            <param name="scale">The target scale for resulting larger merged bitmap tile.</param>
            <returns>Returns a larger merged bitmap tile.</returns>
        </member>
        <member name="T:Mapgenix.Canvas.BaseMatrix">
            <summary>
            Base class for the Matrix encapsulating the tile caculation logics.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.#ctor">
            <summary>Default protected constructor.</summary>
            <returns>None</returns>
            <remarks>Matrix based on unprojected coordinate system.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.#ctor(System.String,System.Double,System.Double,Mapgenix.Shapes.RectangleShape,Mapgenix.Canvas.MatrixReferenceCorner)">
            <summary>Protected constructor.</summary>
            <param name="boundingBox">The bounding box of the Matrix.</param>
            <param name="cellHeight">The cell height(in world coordinates) of the Matrix.</param>
            <param name="cellWidth">The cell width(in world coordinates) of the Matrix.</param>
            <param name="id">The id of the Matrix.</param>
            <param name="referenceCorner">The reference corner of the Matrix.</param>
            <returns>None</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.#ctor(System.String,System.Double,System.Double,Mapgenix.Shapes.PointShape,Mapgenix.Canvas.MatrixReferenceCorner,System.Int64,System.Int64)">
            <summary>Protected constructor.</summary>
            <param name="cellHeight">The cell height(in world coordinates) of the Matrix.</param>
            <param name="cellWidth">The cell width(in world coordinates) of the Matrix.</param>
            <param name="id">The id of the Matrix.</param>
            <param name="referencePoint">The reference point of the Matrix.</param>
            <param name="referenceCorner">The reference corner of the Matrix.</param>
            <param name="columnCount">The column count of the Matrix.</param>
            <param name="rowCount">The row count of the Matrix.</param>
        </member>
        <member name="P:Mapgenix.Canvas.BaseMatrix.CellWidth">
            <summary>
            The cell width of the Matrix.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseMatrix.CellHeight">
            <summary>
            The cell height of the Matrix.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseMatrix.BoundingBox">
            <summary>
            Gets or sets the bounding box of the Matrix.
            </summary>
            <remarks>The bounding box of the Matrix is based on the 
            referencePoint, cellWidth, cellHeight and the rowCount and columnCount.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseMatrix.RowCount">
            <summary>
            Gets the row count of the Matrix.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseMatrix.ColumnCount">
            <summary>
            Gets the column count of the Matrix.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseMatrix.Id">
            <summary>
            Gets or sets the id of the Matrix.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.GetAllCells">
            <summary>Returns all the cells of the tile matrix.</summary>
            <returns>Returns a collection of TileMatrixCell.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.GetCell(System.Int64,System.Int64)">
            <summary>
            Gets a cell based on a row and a column.
            </summary>
            <param name="row">The row based on 1.</param>
            <param name="column">The row based on 1.</param>
            <returns>A cell based on a row and a column.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.GetCell(Mapgenix.Shapes.PointShape)">
            <summary>
            Gets a cell based on a point location.
            </summary>
            <param name="intersectingPoint">The point location.</param>
            <returns>A cell based on a point location.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.GetRowIndex(Mapgenix.Shapes.PointShape)">
            <summary>
            Gets a row index based on a point location.
            </summary>
            <param name="intersectingPoint">The point location.</param>
            <returns>A row index based on a point location.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.GetColumnIndex(Mapgenix.Shapes.PointShape)">
            <summary>
            Gets a column index based on a point location.
            </summary>
            <param name="intersectingPoint">The point location.</param>
            <returns>A column index based on a point location.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.GetIntersectingCells(Mapgenix.Shapes.RectangleShape)">
            <summary>Returns the intersecting cells of a TileMatrix.</summary>
            <param name="worldExtent">The extent to get the tiles from. </param>
            <returns>A collection of TileMatrixCell intersecting the extent passed in.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.GetContainedCells(Mapgenix.Shapes.RectangleShape)">
            <summary>Returns the contained cells by a TileMatrix.</summary>
            <param name="worldExtent">The extent to get the tiles from. </param>
            <returns>A collection of TileMatrixCell intersecting the extent passed in.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.GetIntersectingRowColumnRange(Mapgenix.Shapes.RectangleShape)">
            <summary>Returns a RowColumnRange of a TileMatrix based on an extent</summary>
            <param name="worldExtent">The extent to get tiles from. </param>
            <returns>A RowColumnRange of a TileMatrix based on an extent.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.GetContainedRowColumnRange(Mapgenix.Shapes.RectangleShape)">
            <summary>Returns a RowColumnRange of a TileMatrix contained by an extent.</summary>
            <param name="worldExtent">The extent to get the tiles from. </param>
            <returns>A RowColumnRange of a TileMatrix contained by an extent.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.SetMatrix(System.String,System.Double,System.Double,Mapgenix.Shapes.RectangleShape,Mapgenix.Canvas.MatrixReferenceCorner)">
            <summary>
            Sets the Matrix system.
            </summary>
            <param name="id">The id of the Matrix.</param>
            <param name="cellWidth">The cell width(in world coordinates) to set the Matrix.</param>
            <param name="cellHeight">The cell height(in world coordinates) to set the Matrix.</param>
            <param name="boundingBox">The boundingBox to set the Matrix.</param>
            <param name="referenceCorner">The reference corner to set the Matrix.</param>
            <remarks>Based on those parameters, the reference Point, rowCount, columnCount can be caculated.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.SetMatrix(System.String,System.Double,System.Double,Mapgenix.Shapes.PointShape,Mapgenix.Canvas.MatrixReferenceCorner,System.Int64,System.Int64)">
            <summary>
            Sets the Matrix system.
            </summary>
            <param name="id">The id of the Matrix.</param>
            <param name="cellWidth">The cell width(in world coordinates) to set the Matrix.</param>
            <param name="cellHeight">The cell height(in world coordinates) to set the Matrix.</param>
            <param name="referencePoint">The reference point to set the Matrix.</param>
            <param name="referenceCorner">The reference corner to set the Matrix.</param>
            <param name="rowCount">The row count to set the Matrix.</param>
            <param name="columnCount">The column count to set the Matrix.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseMatrix.SetMatrix(System.Double,System.Double)">
            <summary>
            Sets the Matrix system.
            </summary>
            <param name="cellWidth">The cell width(in world coordinates) to set the Matrix.</param>
            <param name="cellHeight">The cell height(in world coordinates) to set the Matrix.</param>
        </member>
        <member name="T:Mapgenix.Canvas.BaseNativeImageTileCache">
            <summary>
            Base class for the native tile cache system which inherits from BaseTileCache class.
            </summary>
            <remarks>The tile Cache system helps to improve the performance of
            map drawing, especially in case of large data or remote server images.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseNativeImageTileCache.#ctor(System.String,Mapgenix.Canvas.TileImageFormat,Mapgenix.Canvas.TileMatrix)">
            <summary>
            Constructor of the class.
            </summary>
            <param name="cacheId">Cache identifier</param>
            <param name="imageFormat">Image format.</param>
            <param name="tileMatrix">Tile matrix system used for calculating tiles.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseNativeImageTileCache.GetTile(Mapgenix.Shapes.RectangleShape)">
            <summary>
            Returns the NativeImageTile based on the bounding box passed in.
            </summary>
            <param name="tileBoundingBox">Target bounding box for the tile to retrieve.</param>
            <returns>NativeImageTile based on the bounding box passed in.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseNativeImageTileCache.GetTile(System.Int64,System.Int64)">
            <summary>
            Returns the NativeImageTile based on a row and a column.
            </summary>
            <param name="row">Target row for the tile to retrieve.</param>
            <param name="column">Target column for the tile to retrieve.</param>
            <returns>NativeImageTile based on a row and a column passed in.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseNativeImageTileCache.GetTiles(Mapgenix.Shapes.RectangleShape)">
            <summary>
            Returns a collection of NativeImageTile based on a  world extent.
            </summary>
            <param name="extent">Target world extent to retrieve the collection of NativeImageTile.</param>
            <returns>Collection of NativeImageTiles based on a world extent passed in.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseNativeImageTileCache.GetTileCore(System.Int64,System.Int64)">
            <summary>
            Abstract method returning the NativeImageTile based on a row and a column. 
            Each concrete TileCache needs to implement its logic to retrieve an image tile from a row and a column.
            </summary>
            <param name="row">Target row for the tile to retrieve.</param>
            <param name="column">Target column for the tile to retrieve.</param>
            <returns>NativeImageTile based on a row and a column passed in.</returns>
        </member>
        <member name="T:Mapgenix.Canvas.BaseTileCache">
            <summary>
            Base class for the tile cache system.
            </summary>
            <remarks>The tile cache system helps to improve the performance of
            map drawing, especially in case of large data or remote server images.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTileCache.#ctor(System.String,Mapgenix.Canvas.TileImageFormat,Mapgenix.Canvas.TileMatrix)">
            <summary>
            Constructor of the class.
            </summary>
            <param name="cacheId">Cache identifier.</param>
            <param name="imageFormat">Image format.</param>
            <param name="tileMatrix">Tile matrix system used for calculating tiles.</param>
        </member>
        <member name="P:Mapgenix.Canvas.BaseTileCache.TileMatrix">
            <summary>
            Gets or sets the TileMatrix used in calculation of tiles.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseTileCache.TileAccessMode">
            <summary>
            Gets or sets the Mode for the TileCache access of the tiles. The Default value is ReadAddDelete
            </summary>
            <remarks>In order to take affect, set the ReadOnly property to false.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseTileCache.NoDataTileImage">
            <summary>
            Returns a preset image when tile data is missing.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseTileCache.LoadingTileImage">
            <summary>
            Returns a preset image when a tile is loading.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseTileCache.ImageFormat">
            <summary>
            Gets or sets the tile image format.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseTileCache.JpegQuality">
            <summary>
            Gets or sets the Jpeg quality. This property only takes effect when setting 
            the ImageFormat to Jpeg.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseTileCache.CacheId">
            <summary>
            Gets or sets the id of the TileCache.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTileCache.SaveTile(Mapgenix.Canvas.BaseTile)">
            <summary>
            Saves the target tile passed in.
            </summary>
            <param name="tile">Target tile to be saved.</param>
            <remarks>This method does not take effect when ReadOnly is set to true.</remarks>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">When target tile is null, it throws an ArgumentNullException.</exception>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTileCache.SaveTiles(System.Drawing.Bitmap,Mapgenix.Shapes.RectangleShape)">
            <summary>
            Saves the bitmap based on an extent into tiles.
            </summary>
            <param name="bitmap">Target bitmap to be saved into tiles.</param>
            <param name="bitmapExtent">Target extent for the bitmap.</param>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">When the target bitmap is null, it throws an ArgumentNullException.</exception>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTileCache.DeleteTiles(Mapgenix.Shapes.RectangleShape)">
            <summary>
            Deletes the tiles based on a world extent.
            </summary>
            <param name="worldExtent">Target extent to delete all tiles that are inside.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTileCache.DeleteTile(Mapgenix.Canvas.BaseTile)">
            <summary>
            Deletes the target tile passed in.
            </summary>
            <param name="tile">Target tile to be deleted.</param>
            <remarks>This method does not take effect if ReadOnly is set to true.</remarks>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">When the target tile is null, it throws an ArgumentNullException.</exception>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTileCache.ClearCache">
            <summary>
            Clears all the tiles in the tile cache.
            </summary>
            <remarks>This method does not take effect if ReadOnly is set to true.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTileCache.ClearCacheCore">
            <summary>
            This abstract method clears all the tiles in the tile cache. The 
            sub BaseTileCache class must implement this method.
            </summary>
            <remarks>This method does not take effect if ReadOnly is set to true.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTileCache.SaveTileCore(Mapgenix.Canvas.BaseTile)">
            <summary>
            This abstract method saves the target tile passed in. The 
            sub BaseTileCache class must implement this method.
            </summary>
            <param name="tile">Target tile to be saved.</param>
            <remarks>This method does not take effect when ReadOnly is set to true.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTileCache.DeleteTileCore(Mapgenix.Canvas.BaseTile)">
            <summary>
            This abstract method deletes the target tile passed in. The
            sub BaseTileCache class must implement this method.
            </summary>
            <param name="tile">The target tile to be deleted.</param>
            <remarks>This method does not take effect if ReadOnly is set to true.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.BingMapsPictureFormat">
            <summary>
            Image formats for BingMaps
            </summary>
        </member>
        <member name="T:Mapgenix.Canvas.FeatureCache">
            <summary>
            FeatureCache is a cache system used in FeatureSource to improve fetching of features
            </summary>
            <remarks>
            The FeatureCache system uses bounding box (RectangleShapes) as a mechanism to cache the features.
            </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.FeatureCache.#ctor">
            <summary>
            Default constructor that creates a new instance of FeatureCache.
            </summary>
            <returns>None</returns>
            <remarks>
            The cache system for features is not used by default. to use set
            the <strong>IsActive</strong> property to true.
            </remarks>
        </member>
        <member name="P:Mapgenix.Canvas.FeatureCache.IsActive">
            <summary>Gets or sets the cache system to active or not.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.FeatureCache.GetFeatures(Mapgenix.Shapes.RectangleShape)">
            <summary>
            Returns a collection of Features in the feature cache system. The features returned
            are based on the BoundingBox and are retrieved from file system or DB system of a previous operation.
            </summary>
            <returns>
            Returns a collection of Features cached in the feature cache system.
            </returns>
            <remarks>
            This method is a concrete wrapper of the virtual method GetFeaturesCore. It
            returns whatever is returned by the GetBoundingBoxCore method. 
            </remarks>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If worldextent is null, it throws an ArgumentNullException.</exception>
        </member>
        <member name="M:Mapgenix.Canvas.FeatureCache.GetFeaturesCore(Mapgenix.Shapes.RectangleShape)">
            <summary>
            Returns a Collection of Features in the feature cache system. The features returned
            are based on the bounding box and are retrieve from the file system or DB system of a previous operation.
            </summary>
            <returns>
            Collection of Features cached into the feature cache system.
            </returns>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If worldextent is null, it throws an ArgumentNullException.</exception>
        </member>
        <member name="M:Mapgenix.Canvas.FeatureCache.Clear">
            <summary>
            Clears all of the cached items in this feature cache.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.FeatureCache.Add(Mapgenix.Shapes.RectangleShape,System.Collections.ObjectModel.Collection{Mapgenix.Shapes.Feature})">
            <summary>
            Adds a collection of Features to the feature cache system based on a world extent.
            </summary>
            <returns>
            None.
            </returns>
            <remarks>
            This method is the concrete wrapper of the virtual method AddCore. It
            will return what is returned by the AddCore method. 
            </remarks>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If WorldExtent is null, it throws an ArgumentNullException.</exception>
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">if RectangleShape is invalid for the WorldExtent, it throws an InvalidOperationException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If collection of features is null, it throws an ArgumentNullException.</exception>
        </member>
        <member name="M:Mapgenix.Canvas.FeatureCache.AddCore(Mapgenix.Shapes.RectangleShape,System.Collections.ObjectModel.Collection{Mapgenix.Shapes.Feature})">
            <summary>
            This method adds a collection of features to the feature cache system based on world extent.
            </summary>
            <returns>
            None.
            </returns>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If WorldExtent is null, it throws an ArgumentNullException.</exception>
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">if RectangleShape is invalid for the WorldExtent, it throws an InvalidOperationException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If collection of features is null, it throws an ArgumentNullException.</exception>
        </member>
        <member name="M:Mapgenix.Canvas.FeatureCache.Open">
            <summary>
            The default implementation is to do nothing.
            </summary>
            <returns>
            None.
            </returns>
            <remarks>
            This method is the concrete wrapper of the virtual method OpenCore. It
            will return whatever is returned by the OpenCore method. 
            </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.FeatureCache.OpenCore">
            <summary>
            The default implementation is to do nothing.
            </summary>
            <returns>
            None.
            </returns>
        </member>
        <member name="M:Mapgenix.Canvas.FeatureCache.Close">
            <summary>
            The default implementation is to do nothing.
            </summary>
            <returns>
            None.
            </returns>
            <remarks>
            This method is the concrete wrapper of the virtual method CloseCore. It
            will return whatever is returned by the CloseCore method. 
            </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.FeatureCache.CloseCore">
            <summary>
            The default implementation is to do nothing.
            </summary>
            <returns>
            None.
            </returns>
        </member>
        <member name="M:Mapgenix.Canvas.FeatureCache.IsExtentCached(Mapgenix.Shapes.RectangleShape)">
            <summary>
            Determines if the features within the world extent passed in is cached in the feature cache System.
            </summary>
            <param name="worldExtent">Target world extent used to determine if the features within it are cached or not.</param>
            <returns>True if the features within the specified world extent are cached. Otherwise, returns false.</returns>
        </member>
        <member name="T:Mapgenix.Canvas.FileBitmapTileCache">
            <summary>
            Concrete class inheriting from BaseBitmapTileCache.
            </summary>
            <remarks>Tile cache helps to improve map drawing in case of large data or remote server images.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.FileBitmapTileCache.#ctor">
            <summary>
            Default constructor.
            </summary>
            <remarks>CacheDirectory, CacheID, TileImageFormat and TileMatrix properties need to be set manually.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.FileBitmapTileCache.#ctor(System.String)">
            <summary>
            Overloaded constructor.
            </summary>
            <param name="cacheDirectory">Cache directory of the tile cache.</param>
            <remarks>Other properties are set with default values.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.FileBitmapTileCache.#ctor(System.String,System.String)">
            <summary>
            Overloaded constructor.
            </summary>
            <param name="cacheDirectory">Cache directory of the tile cache.</param>
            <param name="cacheId">Cache id of the tile cache.</param>
            <remarks>Other properties are set with default values.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.FileBitmapTileCache.#ctor(System.String,System.String,Mapgenix.Canvas.TileImageFormat,Mapgenix.Canvas.TileMatrix)">
            <summary>
            Overloaded constructor.
            </summary>
            <param name="cacheDirectory">Cache directory of the tile cache.</param>
            <param name="cacheId">Cache id of the tile cache.</param>
            <param name="imageFormat">Image format of the tile cache.</param>
            <param name="tileMatrix">Tile matrix of the tile cache.</param>
        </member>
        <member name="P:Mapgenix.Canvas.FileBitmapTileCache.CacheDirectory">
            <summary>
            Gets or sets the cache directory.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.FileBitmapTileCache.GetTileCore(System.Int64,System.Int64)">
            <summary>
            Returns the BitmapTile based on a row and a column. 
            </summary>
            <param name="row">Target row for the tile to retrieve.</param>
            <param name="column">Target column for the tile to fetch.</param>
            <returns>Returns the BitmapTile based on a row and a column.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.FileBitmapTileCache.SaveTileCore(Mapgenix.Canvas.BaseTile)">
            <summary>
            Saves the target tile passed in.
            </summary>
            <param name="tile">Target tile to be saved.</param>
        </member>
        <member name="M:Mapgenix.Canvas.FileBitmapTileCache.DeleteTileCore(Mapgenix.Canvas.BaseTile)">
            <summary>
            Deletes the target tile passed in.
            </summary>
            <param name="tile">Target tile to be deleted.</param>
            <remarks>Does not take effect if ReadOnly is set to true.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.FileBitmapTileCache.ClearCacheCore">
            <summary>
            Clears all the tiles in the tile cache.
            </summary>
            <remarks>Does not take effect if ReadOnly is set to true.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.FileBitmapTileCache.GetHigherScaleTileCore(Mapgenix.Shapes.RectangleShape,System.Double)">
            <summary>
            Overrides the logic of its base class BaseBitmapTileCache.
            Returns the higher scale BitmapTile used for drawing effects when zooming in or out.
            </summary>
            <param name="tileBoundingBox">Current tile bounding box.</param>
            <param name="tileScale">Current tile scale.</param>
            <returns>Returns the higher scale(higher zoomLevel) bitmap tile.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.FileBitmapTileCache.GetTileImageFileName(System.Int64,System.Int64)">
            <summary>
            Gets the name of the tile image file based on a row and a column.
            </summary>
        </member>
        <member name="T:Mapgenix.Canvas.FileNativeImageTileCache">
            <summary>
            Concrete class inheriting from BaseNativeImageTileCache.
            Tiles are saved in disk.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.FileNativeImageTileCache.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.FileNativeImageTileCache.#ctor(System.String,System.String,Mapgenix.Canvas.TileImageFormat,Mapgenix.Canvas.TileMatrix)">
            <summary>
            Overloaded constructor.
            </summary>
            <param name="cacheDirectory">Cache directory of the tile cache.</param>
            <param name="cacheId">Cache id of the tile cache.</param>
            <param name="imageFormat">Image format of the tile cahce.</param>
            <param name="tileMatrix">Tile matrix of the tile cache.</param>
        </member>
        <member name="P:Mapgenix.Canvas.FileNativeImageTileCache.CacheDirectory">
            <summary>
            Gets or sets the cache directory.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.FileNativeImageTileCache.GetTileCore(System.Int64,System.Int64)">
            <summary>
            Returns a NativeImageTile based on a row and a column. 
            </summary>
            <param name="row">Target row for the tile to retrieve.</param>
            <param name="column">Target column for the tile to retrieve.</param>
            <returns>A NativeImageTile based on a row and a column.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.FileNativeImageTileCache.SaveTileCore(Mapgenix.Canvas.BaseTile)">
            <summary>
            Saves the target tile.
            </summary>
            <param name="tile">Target tile to be saved.</param>
        </member>
        <member name="M:Mapgenix.Canvas.FileNativeImageTileCache.DeleteTileCore(Mapgenix.Canvas.BaseTile)">
            <summary>
            Deletes the target tile passed in.
            </summary>
            <param name="tile">Target tile to be deleted.</param>
            <remarks>Does not take effect if ReadOnly is set to true.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.FileNativeImageTileCache.ClearCacheCore">
            <summary>
            Clears all the tiles in the tile cache.
            </summary>
            <remarks>Does not take effect if ReadOnly is set to true.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.HEREMapsPictureFormat">
            <summary>Picture formats of HEREMaps Maps.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.InMemoryBitmapTileCache">
            <summary>
            Concrete class inheriting from BaseBitmapTileCache.
            Tiles are saved in memory.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.InMemoryBitmapTileCache.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.InMemoryBitmapTileCache.MaximumTilesCount">
            <summary>
            Gets or sets the maximum tiles count.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.InMemoryBitmapTileCache.CachedTilesByScale">
            <summary>
            Gets the cached tiles. Each item is a Dictionary with scale as key.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.InMemoryBitmapTileCache.GetTileCore(System.Int64,System.Int64)">
            <summary>
            Returns a BitmapTile based on row and a column. 
            </summary>
            <param name="row">Target row for the tile to retrieve.</param>
            <param name="column">Target column for the tile to retrieve.</param>
            <returns>Returns a BitmapTile based on a row and a column.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.InMemoryBitmapTileCache.SaveTileCore(Mapgenix.Canvas.BaseTile)">
            <summary>
            Saves the target tile passed in.
            </summary>
            <param name="tile">Target tile to be saved.</param>
            <remarks>Does not take effect if ReadOnly is set to true.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.InMemoryBitmapTileCache.DeleteTileCore(Mapgenix.Canvas.BaseTile)">
            <summary>
            Deletes the target tile passed in.
            </summary>
            <param name="tile">Target tile to be deleted.</param>
            <remarks>Does not take effect if ReadOnly is set to true.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.InMemoryBitmapTileCache.ClearCacheCore">
            <summary>
            Clears all the tiles in the tile cache.
            </summary>
            <remarks>Does not take effect if ReadOnly is set to true.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.InMemoryBitmapTileCache.GetHigherScaleTileCore(Mapgenix.Shapes.RectangleShape,System.Double)">
            <summary>
            Overrides the logic of its base class BaseBitmapTileCache.
            Returns the higher scale BitmapTile used for drawing effects when zooming in or out.
            </summary>
            <param name="tileBoundingBox">Current tile bounding box.</param>
            <param name="tileScale">Current tile scale.</param>
            <returns>The higher scale(higher zoomLevel) bitmap tile.</returns>
        </member>
        <member name="T:Mapgenix.Canvas.MatrixReferenceCorner">
            <summary>
            Reference corners for calculating the matrix.
            </summary>
        </member>
        <member name="T:Mapgenix.Canvas.OpenStreetMapLayerPictureFormat">
            <summary>
            Picture formats for OpenStreetMap.
            </summary>
        </member>
        <member name="T:Mapgenix.Canvas.RowColumnRange">
            <summary>
            Describes a range of tiles for a given extent.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.RowColumnRange.#ctor(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Contructor.
            </summary>
            <param name="minRowIndex">Min Row Index for the upper boundary.</param>
            <param name="maxRowIndex">Max Row Index for the lower boundary.</param>
            <param name="minColumnIndex">Min Column Index for the left boundary.</param>
            <param name="maxColumnIndex">Max Column Index for the right boundary.</param>
        </member>
        <member name="P:Mapgenix.Canvas.RowColumnRange.MinRowIndex">
            <summary>
            Gets or sets the Min Row Index for the upper boundary.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.RowColumnRange.MaxRowIndex">
            <summary>
            Gets or sets the Max Row Index for the lower boundary.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.RowColumnRange.MinColumnIndex">
            <summary>
            Gets or sets the Min Column Index for the left boundary.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.RowColumnRange.MaxColumnIndex">
            <summary>
            Gets or sets the Max Column Index for the right boundary.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.RowColumnRange.GetHashCode">
            <summary>Overrides the GetHashCode functionality.</summary>
            <remarks>None</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.RowColumnRange.op_Equality(Mapgenix.Canvas.RowColumnRange,Mapgenix.Canvas.RowColumnRange)">
            <summary>Overrides of the == functionality.</summary>
            <remarks>None</remarks>
            <param name="rowColumnRange1">First rowColumnRange to compare.</param>
            <param name="rowColumnRange2">Second rowColumnRange to compare.</param>
        </member>
        <member name="M:Mapgenix.Canvas.RowColumnRange.op_Inequality(Mapgenix.Canvas.RowColumnRange,Mapgenix.Canvas.RowColumnRange)">
            <summary>Overrides of the != functionality.</summary>
            <remarks>None</remarks>
            <param name="rowColumnRange1">First rowColumnRange to compare.</param>
            <param name="rowColumnRange2">Second rowColumnRange to compare.</param>
        </member>
        <member name="T:Mapgenix.Canvas.SessionFileBitmapTileCache">
            <summary>
            Inherits from FileBitmapTileCache.
            Tiles are marked as obsolete after calling ClearCache
            and are deleted in the background thread.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.SessionFileBitmapTileCache.#ctor(System.String)">
            <summary>
            Overloaded constructor.
            </summary>
            <param name="cacheDirectory">Directory of the tile cache.</param>
        </member>
        <member name="M:Mapgenix.Canvas.SessionFileBitmapTileCache.#ctor(System.String,System.String)">
            <summary>
            Overloaded constructor.
            </summary>
            <param name="cacheDirectory">Directory of the tile cache.</param>
            <param name="cacheId">Cache ID of the tile cache.</param>
        </member>
        <member name="M:Mapgenix.Canvas.SessionFileBitmapTileCache.#ctor(System.String,System.String,Mapgenix.Canvas.TileImageFormat,Mapgenix.Canvas.TileMatrix)">
            <summary>
            Overloaded constructor.
            </summary>
            <param name="cacheDirectory">Directory of the tile cache.</param>
            <param name="cacheId">Cache ID of the tile cache.</param>
            <param name="imageFormat">Image format of the tile cache.</param>
            <param name="tileMatrix">Tile matrix of the tile cache.</param>
        </member>
        <member name="M:Mapgenix.Canvas.SessionFileBitmapTileCache.ClearCacheCore">
            <summary>
            Creates a new cacheId for the SessionFileBitmapTileCache and marks
            the original one as obsolete. The original is deleted in a background thread.
            </summary>
            <remarks>Does not take effect if ReadOnly is set to true.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.TileAccessMode">
            <summary>Tile cache access mode.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.TileMatrix">
            <summary>
            Base class inheriting from BaseMatrix. describes the matrix system used for Tiling.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.TileMatrix.#ctor(System.Double)">
            <summary>Overloaded constructor.</summary>
            <returns>None</returns>
            <param name="scale">Target scale to set for the Matrix.</param>
        </member>
        <member name="M:Mapgenix.Canvas.TileMatrix.#ctor(System.Double,System.Int32,System.Int32,Mapgenix.Shapes.GeographyUnit)">
            <summary>Overloaded constructor.</summary>
            <returns>None</returns>
            <param name="scale">Target scale to set for the Matrix.</param>
            <param name="tileHeight">Tile height(in world coordinates) to set for the Matrix.</param>
            <param name="tileWidth">Tile width(in world coordinates) to set for the Matrix.</param>
            <param name="boundingBox">Bounding box to set for the Matrix.</param>
        </member>
        <member name="M:Mapgenix.Canvas.TileMatrix.#ctor(System.String,System.Double,System.Int32,System.Int32,Mapgenix.Shapes.GeographyUnit,Mapgenix.Shapes.RectangleShape)">
            <summary>Overloaded constructor.</summary>
            <returns>None</returns>
            <param name="id">Id to set the Matrix.</param>
            <param name="boundingBoxUnit">Bounding box Unit to set for the Matrix.</param>
            <param name="scale">Target scale to set for the Matrix.</param>
            <param name="tileHeight">Tile height(in world coordinates) to set for the Matrix.</param>
            <param name="tileWidth">Tile width(in world coordinates) to set for the Matrix.</param>
            <param name="boundingBox">Bounding box to set for the Matrix.</param>
        </member>
        <member name="M:Mapgenix.Canvas.TileMatrix.#ctor(System.String,System.Double,System.Int32,System.Int32,Mapgenix.Shapes.GeographyUnit,Mapgenix.Shapes.RectangleShape,Mapgenix.Canvas.MatrixReferenceCorner)">
            <summary>Overloaded constructor.</summary>
            <returns>None</returns>
            <param name="id">Id to set the Matrix.</param>
            <param name="boundingBoxUnit">Bounding box Unit to set for the Matrix.</param>
            <param name="scale">Target scale to set for the Matrix.</param>
            <param name="tileHeight">Tile height(in world coordinates) to set for the Matrix.</param>
            <param name="tileWidth">Tile width(in world coordinates) to set for the Matrix.</param>
            <param name="boundingBox">Bounding box to set for the Matrix.</param>
            <param name="referenceCorner">Reference corner to set for the Matrix.</param>
        </member>
        <member name="P:Mapgenix.Canvas.TileMatrix.Scale">
            <summary>
            Gets or sets the scale for the TileMatrix.
            </summary>
            <remarks> When setting a different scale, the parameters in TileMatrix are recalculated.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.TileMatrix.TileWidth">
            <summary>
            Gets or sets the tile width for the TileMatrix.
            </summary>
            <remarks> When setting a different tile width, the parameters in TileMatrix are recalculated.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.TileMatrix.TileHeight">
            <summary>
            Gets or sets the tile height for the TileMatrix.
            </summary>
            <remarks> When setting a different tile height, the parameters in TileMatrix are recalculated.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.TileMatrix.BoundingBoxUnit">
            <summary>
            Gets or sets the BoundingBoxUnit for the TileMatrix.
            </summary>
            <remarks> When setting a different BoundingBoxUnit, the parameters in TileMatrix are recalculated.
            The default boundingBox value depends on the BoundingBoxUnit.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.TileMatrix.GetResolutionFromScale(System.Double)">
            <summary>
            Gets resolution based on a scale.
            </summary>
            <param name="scale">Target scale to get resolution from.</param>
            <returns>A resolution based on the scale passed.</returns>
        </member>
        <member name="T:Mapgenix.Canvas.TileMatrixCell">
             <summary>
            Represents the TileMatrixCell used in the tile matrix system.
             </summary>
        </member>
        <member name="M:Mapgenix.Canvas.TileMatrixCell.#ctor(System.Int64,System.Int64,Mapgenix.Shapes.RectangleShape)">
            <summary>Constructor to create a TileMatrixCell.</summary>
            <remarks>None</remarks>
            <param name="row">Row number of the TileMatrixCell.</param>
            <param name="column">Column number of the TileMatrixCell.</param>
            <param name="boundingBox">Bounding box of the TileMatrixCell.</param>
        </member>
        <member name="P:Mapgenix.Canvas.TileMatrixCell.Row">
            <summary>
            Gets or sets the row number.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.TileMatrixCell.Column">
            <summary>
            Gets or sets the column number.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.TileMatrixCell.BoundingBox">
            <summary>
            Gets or sets the bounding box.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.TileMatrixCell.ToString">
            <summary>Override the ToString method.</summary>
            <remarks>None</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.TileMatrixCell.GetHashCode">
            <summary>Overrides the GetHashCode method.</summary>
            <remarks>None</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.TileMatrixCell.Equals(System.Object)">
            <summary>Overrides the Equals method.</summary>
            <remarks>None</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.TileMatrixCell.op_Equality(Mapgenix.Canvas.TileMatrixCell,Mapgenix.Canvas.TileMatrixCell)">
            <summary>Overrides the == operator.</summary>
            <remarks>None</remarks>
            <param name="cell1">First TileMatrixCell to compare.</param>
            <param name="cell2">Second TileMatrixCell to compare.</param>
        </member>
        <member name="M:Mapgenix.Canvas.TileMatrixCell.op_Inequality(Mapgenix.Canvas.TileMatrixCell,Mapgenix.Canvas.TileMatrixCell)">
            <summary>Overrides the != operator.</summary>
            <remarks>None</remarks>
            <param name="cell1">First TileMatrixCell to compare.</param>
            <param name="cell2">Second TileMatrixCell to compare.</param>
        </member>
        <member name="T:Mapgenix.Canvas.WmsPictureFormat">
            <summary>OGC Web Map Service picture format.</summary>
        </member>
        <!-- El comentario XML con formato incorrecto se ha omitido para el miembro "T:Mapgenix.Canvas.GdiPlusGeoCanvas" -->
        <member name="P:Mapgenix.Canvas.GdiPlusGeoCanvas.CompositingQuality">
            <summary>Gets or sets the quality level of composing.</summary>
            <remarks>
            	<para>Used for GDI+ drawing.<br/>
                <br/>
                Compositing is done during rendering when the source pixels are
                combined with the destination pixels to produce the resultant pixels. The quality
                of compositing directly relates to the visual quality of the output and is
                inversely proportional to the render time. The higher the quality, the slower the
                render time. This is because the higher the quality level, the more surrounding
                pixels need to be taken into account during the composite. The linear quality
                setting (AssumeLinear) compromises by providing better quality than the default
                quality at a slightly lower speed.</para>
            </remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GdiPlusGeoCanvas.SmoothingMode">
            <summary>Gets or sets the rendering quality.</summary>
            <remarks>
            	<para>Used for GDI+ drawing.<br/>
            		<br/>
            		<br/>
                The smoothing mode specifies whether lines, curves, and the edges of filled areas
                use smoothing (also called antialiasing). One exception is that path gradient
                brushes do not obey the smoothing mode. Areas filled using a PathGradientBrush are
                rendered the same way (aliased) regardless of the SmoothingMode property.</para>
            </remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GdiPlusGeoCanvas.HasKeyColor">
            <summary>Indicates if GdiPlusGeoCanvas has the KeyColor or not. </summary>
            <remarks>The default value is true.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GdiPlusGeoCanvas.TextRenderingHint">
            <summary>Gets or sets the rendering mode of the text in this canvas.</summary>
            <remarks>
            	<para>Used for GDI+ drawing.<br/>
            		<br/>
                The text rendering hint specifies whether text renders with antialiasing.</para>
            </remarks>
            <value>Rendering mode of the text in this canvas.</value>
        </member>
        <member name="P:Mapgenix.Canvas.GdiPlusGeoCanvas.InterpolationMode">
            <summary>Gets or sets the interpolation mode.</summary>
            <value>System.Drawing.Drawing2D.InterpolationMode.</value>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.DrawAreaCore(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF[]},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen, GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="screenPoints">AreaShape in well-known binary format.</param>
            <param name="outlinePen"> Outline GeoPen used to draw the AreaShape.</param>
            <param name="fillBrush"> Fill GeoBrush used to draw the AreaShape. </param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>        
            <param name="xOffset"> X offset in screen coordinates for the feature to be drawn.</param>
            <param name="yOffset"> Y offset in screen coordinates for the feature to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder used when drawing the area based feature.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.DrawLineCore(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single)">
            <summary>Draws a line based shape on the canvas.</summary>
            <remarks>
            	<para>Used to draw a line on the GeoCanvas using a specified GeoPen.</para>
            	<para>The DrawingLevel allows to specify the level to draw you will draw on when
                drawing multiple lines. For example for drawing a road.</para>
            </remarks>
            <param name="screenPoints">LineShape in well-known binary format.</param>
            <param name="linePen">GeoPen that will be used to draw the LineShape.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
            <param name="xOffset">X offset in screen coordinate for the feature to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinate for the feature to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.DrawEllipseCore(Mapgenix.Canvas.ScreenPointF,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse.
                You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="screenPoint">Center point in well-known binary format.</param>
            <param name="outlinePen">Outline GeoPen used to draw the point.</param>
            <param name="width">Width of the ellipse to be drawn.</param>
            <param name="height">Height of the ellipse to be drawn.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen or GeoBrush will draw on.</param>
            <param name="xOffset">X offset in screen coordinates for the ellipse to be drawn.</param>
            <param name="yOffset">Y offset in screen coodinates for the ellipse to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder for drawing the ellipse.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.DrawScreenImageWithoutScalingCore(Mapgenix.Canvas.GeoImage,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in screen coordinates is where the center of the image will be
                drawn.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates for the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to draw.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.DrawScreenImageCore(Mapgenix.Canvas.GeoImage,System.Single,System.Single,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an image based on screen coordinates on the canvas.</summary>
            <remarks>Drawing a scaled image is slower than at original size.</remarks>
            <param name="image">Image to draw.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="widthInScreen">Width of the image.</param>
            <param name="heightInScreen">Height of the image.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates of the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates of the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.DrawTextCore(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.GeoPen,System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>
            	<para>Draws text with brush and font.</para>
            </summary>
            <param name="text">Text to write on the map.</param>
            <param name="font">Font of the text.</param>
            <param name="fillBrush">Color fill of the text.</param>
            <param name="haloPen">Pen for halo effect on the text.</param>
            <param name="textPathInScreen">Path of the text to write on the map.</param>
            <param name="drawingLevel">Drawing level of the text</param>
            <param name="xOffset">X offset in world coordinates of the text.</param>
            <param name="yOffset">Y offset in world coordinates of the text.</param>
            <param name="rotateAngle">Rotation angle of the text.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.MeasureTextCore(System.String,Mapgenix.Canvas.GeoFont)">
            <summary>Returns the rectangle containing a text.</summary>
            <returns>A rectangle containing a text taking into account the font.</returns>
            <remarks>Typically used for labeling logic to determine the overlapping of labels.</remarks>
            <param name="text">Text to measure.</param>
            <param name="font">Font of the text to measure.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.BeginDrawing(System.Object,Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.GeographyUnit)">
            <summary>Begins the drawing on the canvas.</summary>
            <remarks>
            First method to call before doing any drawing on the canvas.
            Sets IsDrawing property to true. After finishing drawing,
            call EndDrawing to commit the changes to the image.
            </remarks>
            <param name="nativeImage">Image the canvas draws on.</param>
            <param name="worldExtent">World extent of the canvas.</param>
            <param name="drawingMapUnit">Map unit of the canvas.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.BeginDrawingCore(System.Object,Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.GeographyUnit)">
            <summary>Begins the drawing on the canvas.</summary>
            <remarks>
            First method to call before doing any drawing on the canvas.
            Sets IsDrawing property to true. After finishing drawing,
            call EndDrawing to commit the changes to the image.
            </remarks>
            <param name="nativeImage">Image the canvas draws on.</param>
            <param name="worldExtent">World extent of the canvas.</param>
            <param name="drawingMapUnit">Map unit of the canvas.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.EndDrawing">
            <summary>Ends drawing and commits the drawing on canvas.</summary>
            <remarks>Last method to call after finished drawing. Commits the
            changes to the image passed in BeginDrawing. Sets IsDrawing to false. 
            Finally puts the canvas into invalid state.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.FlushCore">
            <summary>Flushes drawing and commits the drawing on the canvas.</summary>
            <remarks>Method to call when drawing finished. It commits the
            image changes to the image passed in on BeginDrawing. Also it sets IsDrawing to false. Finally it sets GeoCanvas to invalid state, 
            not allowing further drawing.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.ToNativeImageCore(Mapgenix.Canvas.GeoImage)">
            <summary>Converts a GeoImage to a commonly-used object. For example, in GdiPlus the object is a Bitmap.</summary>
            <param name="image">Target geoImage to convert.</param>
            <returns>Object</returns>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.ToGeoImageCore(System.Object)">
            <summary>Converts an object to a GeoImage. For example, in GdiPlus  object is a Bitmap.</summary>
            <param name="nativeImage">Target object to convert.</param>
            <returns>GeoImage containing.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.GetStreamFromGeoImage(Mapgenix.Canvas.GeoImage)">
            <summary>Returns stream representing the GeoImage in TIFF format.</summary>
            <returns>Stream that represents the GeoImage in TIFF format.</returns>
            <remarks>Allows to get the stream out of a GeoImage. The stream is a
            memory stream and the bytes are in TIFF format. Can be saved in the desired format.</remarks>
            <param name="image">GeoImage to convert to a stream.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.FillBackground(Mapgenix.Canvas.GeoImage,Mapgenix.Canvas.BaseGeoBrush)">
            <summary>Fills the GeoImage with GeoBrush.</summary>
            <returns>None</returns>
            <remarks>Allows to fill a GeoImage with a GeoBrush. Useful for setting backgrounds.</remarks>
            <param name="image">GeoImage to set the background on.</param>
            <param name="brush">GeoBrush to fill the background with.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.ConvertGeoImageToMemoryStream(Mapgenix.Canvas.GeoImage)">
            <summary>Converts GeoImage to memory stream.</summary>
            <returns>Memory stream with the bytes formatted.</returns>
            <param name="image">GeoImage to convert to a memory stream.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.ConvertGeoImageToMemoryStream(Mapgenix.Canvas.GeoImage,System.Drawing.Imaging.ImageFormat)">
            <summary>Converts GeoImage to memory stream.</summary>
            <overloads>Saves the bytes to a memory stream in the format specified.</overloads>
            <returns>Memory stream with the bytes formatted according to the image format specified.</returns>
            <param name="image">GeoImage to convert to a memory stream.</param>
            <param name="imageFormat">Image format the stream to be in.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.CreateGeoImage(System.Int32,System.Int32)">
            <summary>Returns a GeoImage based height and width.</summary>
            <returns>Returns a GeoImage based on height and width.</returns>
            <remarks>Use this static member to create a GeoCanvas.</remarks>
            <param name="width">Width of the GeoImage.</param>
            <param name="height">Height of the GeoImage.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.GetCanvasWidthCore(System.Object)">
            <summary>Gets the canvas width of a native image object.</summary>
            <param name="nativeImage">Native image used to get the canvas width.</param>
            <returns>Canvas width.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.GetCanvasHeightCore(System.Object)">
            <summary>Gets the canvas height of a native image object.</summary>
            <param name="nativeImage">Native image will be used to get the canvas height.</param>
            <returns>Canvas height.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.DrawWorldImageWithoutScaling(System.Drawing.Bitmap,System.Double,System.Double,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in world coordinates is where the center of the image draws.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInWorld">X coordinate in world coordinates of the center point of the image to draw.</param>
            <param name="centerYInWorld">Y coordinate in world coordinates of the center point of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.DrawWorldImageWithoutScaling(System.Drawing.Bitmap,System.Double,System.Double,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in world coordinates is where the center of the image draws.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInWorld">X coordinate of the center point (in world coordinates) of the image to draw.</param>
            <param name="centerYInWorld">Y coordinate of the center point (in world coordinates) of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in world coordinates for the image to be drawn.</param>
            <param name="yOffset">Y offset in world coordinates for the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.DrawScreenImageWithoutScaling(System.Drawing.Bitmap,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in screen coordinates is where the center of the image will be
                drawn.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates for the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to draw.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GdiPlusGeoCanvas.DrawScreenImageWithoutScalingCore(System.Drawing.Bitmap,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in screen coordinates is where the center of the image will be
                drawn.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates for the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to draw.</param>
        </member>
        <member name="T:Mapgenix.Canvas.PageGeoCanvas">
             <summary>Canvas for the drawing of the layers to go from page coordinate system to screen coordinate system.
            Used by PrintLayer in DrawCore. </summary>
             <remarks>
             	<para>The first call is always BeginDrawing by passing in an image along with its world extent.</para>
             </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.BeginDrawing(Mapgenix.Canvas.BaseGeoCanvas,Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.GeographyUnit)">
            <summary>Begins the drawing on the canvas.</summary>
            <remarks>
            First method to call before doing any drawing on the canvas.
            Sets IsDrawing property to true. After finishing drawing,
            call EndDrawing to commit the changes to the image.
            </remarks>
            <param name="nativeImage">Image the canvas draws on.</param>
            <param name="worldExtent">World extent of the canvas.</param>
            <param name="drawingMapUnit">Map unit of the canvas.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.EndDrawing">
            <summary>Ends drawing and commits the drawing on canvas.</summary>
            <remarks>Last method to call after finished drawing. Commits the
            changes to the image passed in BeginDrawing. Sets IsDrawing to false. 
            Finally puts the canvas into invalid state.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.DrawAreaCore(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF[]},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen, GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="screenPoints">AreaShape in well-known binary format.</param>
            <param name="outlinePen"> Outline GeoPen used to draw the AreaShape.</param>
            <param name="fillBrush"> Fill GeoBrush used to draw the AreaShape. </param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>        
            <param name="xOffset"> X offset in screen coordinates for the feature to be drawn.</param>
            <param name="yOffset"> Y offset in screen coordinates for the feature to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder used when drawing the area based feature.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.DrawEllipseCore(Mapgenix.Canvas.ScreenPointF,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse. You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="screenPoint">Center point in well-known binary format.</param>
            <param name="outlinePen">Outline GeoPen used to draw the point.</param>
            <param name="width">Width of the ellipse to be drawn.</param>
            <param name="height">Height of the ellipse to be drawn.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen or GeoBrush will draw on.</param>
            <param name="xOffset">X offset in screen coordinates for the ellipse to be drawn.</param>
            <param name="yOffset">Y offset in screen coodinates for the ellipse to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder for drawing the ellipse.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.DrawLineCore(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single)">
            <summary>Draws a line based shape on the canvas.</summary>
            <remarks>
            	<para>Used to draw a line on the GeoCanvas using a specified GeoPen.</para>
            	<para>The DrawingLevel allows to specify the level to draw you will draw on when
                drawing multiple lines. For example for drawing a road.</para>
            </remarks>
            <param name="screenPoints">LineShape in well-known binary format.</param>
            <param name="linePen">GeoPen that will be used to draw the LineShape.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
            <param name="xOffset">X offset in screen coordinate for the feature to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinate for the feature to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.DrawScreenImageCore(Mapgenix.Canvas.GeoImage,System.Single,System.Single,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an image based on screen coordinates on the canvas.</summary>
            <remarks>Drawing a scaled image is slower than at original size.</remarks>
            <param name="image">Image to draw.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="widthInScreen">Width of the image.</param>
            <param name="heightInScreen">Height of the image.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates of the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates of the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.DrawScreenImageWithoutScalingCore(Mapgenix.Canvas.GeoImage,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in screen coordinates is where the center of the image will be
                drawn.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates for the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to draw.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.DrawTextCore(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.GeoPen,System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>
            	<para>Draws text with brush and font.</para>
            </summary>
            <param name="text">Text to write on the map.</param>
            <param name="font">Font of the text.</param>
            <param name="fillBrush">Color fill of the text.</param>
            <param name="haloPen">Pen for halo effect on the text.</param>
            <param name="textPathInScreen">Path of the text to write on the map.</param>
            <param name="drawingLevel">Drawing level of the text</param>
            <param name="xOffset">X offset in world coordinates of the text.</param>
            <param name="yOffset">Y offset in world coordinates of the text.</param>
            <param name="rotateAngle">Rotation angle of the text.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.MeasureTextCore(System.String,Mapgenix.Canvas.GeoFont)">
            <summary>Returns the rectangle containing a text.</summary>
            <returns>A rectangle containing a text taking into account the font.</returns>
            <remarks>Typically used for labeling logic to determine the overlapping of labels.</remarks>
            <param name="text">Text to measure.</param>
            <param name="font">Font of the text to measure.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.ToGeoImageCore(System.Object)">
            <summary>Converts an object to a GeoImage. For example, in GdiPlus  object is a Bitmap.</summary>
            <param name="nativeImage">Target object to convert.</param>
            <returns>GeoImage containing.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.ToNativeImageCore(Mapgenix.Canvas.GeoImage)">
            <summary>Converts an object to a GeoImage. For example, in GdiPlus  object is a Bitmap.</summary>
            <param name="nativeImage">Target object to convert.</param>
            <returns>GeoImage containing.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.FlushCore">
            <summary>Flushes drawing and commits the drawing on the canvas.</summary>
            <remarks>Method to call when drawing finished. It commits the
            image changes to the image passed in on BeginDrawing. Also it sets IsDrawing to false. Finally it sets GeoCanvas to invalid state, 
            not allowing further drawing.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.GetCanvasHeightCore(System.Object)">
            <summary>Gets the canvas height of a native image object.</summary>
            <param name="nativeImage">Native image will be used to get the canvas height.</param>
            <returns>Canvas height.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.GetCanvasWidthCore(System.Object)">
            <summary>Gets the canvas width of a native image object.</summary>
            <param name="nativeImage">Native image used to get the canvas width.</param>
            <returns>Canvas width.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PageGeoCanvas.GetStreamFromGeoImage(Mapgenix.Canvas.GeoImage)">
            <summary>Returns stream representing the GeoImage in TIFF format.</summary>
            <returns>Stream that represents the GeoImage in TIFF format.</returns>
            <remarks>Allows to get the stream out of a GeoImage. The stream is a
            memory stream and the bytes are in TIFF format. Can be saved in the desired format.</remarks>
            <param name="image">GeoImage to convert to a stream.</param>
        </member>
        <member name="T:Mapgenix.Canvas.PrinterGeoCanvas">
            <summary>Canvas for the drawing of the layers on printer page.</summary>
            <remarks>
            	<para>The first call is always BeginDrawing by passing in an image along with its world extent.</para>
            </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.BeginDrawing(System.Object,Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.GeographyUnit)">
            <summary>Begins the drawing on the canvas.</summary>
            <remarks>
            First method to call before doing any drawing on the canvas.
            Sets IsDrawing property to true. After finishing drawing,
            call EndDrawing to commit the changes to the image.
            </remarks>
            <param name="nativeImage">Image the canvas draws on.</param>
            <param name="worldExtent">World extent of the canvas.</param>
            <param name="drawingMapUnit">Map unit of the canvas.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.EndDrawing">
            <summary>Ends drawing and commits the drawing on canvas.</summary>
            <remarks>Last method to call after finished drawing. Commits the
            changes to the image passed in BeginDrawing. Sets IsDrawing to false. 
            Finally puts the canvas into invalid state.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.DrawAreaCore(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF[]},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen, GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="screenPoints">AreaShape in well-known binary format.</param>
            <param name="outlinePen"> Outline GeoPen used to draw the AreaShape.</param>
            <param name="fillBrush"> Fill GeoBrush used to draw the AreaShape. </param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>        
            <param name="xOffset"> X offset in screen coordinates for the feature to be drawn.</param>
            <param name="yOffset"> Y offset in screen coordinates for the feature to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder used when drawing the area based feature.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.DrawLineCore(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single)">
            <summary>Draws a line based shape on the canvas.</summary>
            <remarks>
            	<para>Used to draw a line on the GeoCanvas using a specified GeoPen.</para>
            	<para>The DrawingLevel allows to specify the level to draw you will draw on when
                drawing multiple lines. For example for drawing a road.</para>
            </remarks>
            <param name="screenPoints">LineShape in well-known binary format.</param>
            <param name="linePen">GeoPen that will be used to draw the LineShape.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
            <param name="xOffset">X offset in screen coordinate for the feature to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinate for the feature to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.DrawEllipseCore(Mapgenix.Canvas.ScreenPointF,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse. You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="screenPoint">Center point in well-known binary format.</param>
            <param name="outlinePen">Outline GeoPen used to draw the point.</param>
            <param name="width">Width of the ellipse to be drawn.</param>
            <param name="height">Height of the ellipse to be drawn.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen or GeoBrush will draw on.</param>
            <param name="xOffset">X offset in screen coordinates for the ellipse to be drawn.</param>
            <param name="yOffset">Y offset in screen coodinates for the ellipse to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder for drawing the ellipse.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.DrawScreenImageWithoutScalingCore(Mapgenix.Canvas.GeoImage,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in screen coordinates is where the center of the image will be
                drawn.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates for the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to draw.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.DrawScreenImageCore(Mapgenix.Canvas.GeoImage,System.Single,System.Single,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an image based on screen coordinates on the canvas.</summary>
            <remarks>Drawing a scaled image is slower than at original size.</remarks>
            <param name="image">Image to draw.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="widthInScreen">Width of the image.</param>
            <param name="heightInScreen">Height of the image.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates of the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates of the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.DrawTextCore(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.GeoPen,System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>
            	<para>Draws text with brush and font.</para>
            </summary>
            <param name="text">Text to write on the map.</param>
            <param name="font">Font of the text.</param>
            <param name="fillBrush">Color fill of the text.</param>
            <param name="haloPen">Pen for halo effect on the text.</param>
            <param name="textPathInScreen">Path of the text to write on the map.</param>
            <param name="drawingLevel">Drawing level of the text</param>
            <param name="xOffset">X offset in world coordinates of the text.</param>
            <param name="yOffset">Y offset in world coordinates of the text.</param>
            <param name="rotateAngle">Rotation angle of the text.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.MeasureTextCore(System.String,Mapgenix.Canvas.GeoFont)">
            <summary>Returns the rectangle containing a text.</summary>
            <returns>A rectangle containing a text taking into account the font.</returns>
            <remarks>Typically used for labeling logic to determine the overlapping of labels.</remarks>
            <param name="text">Text to measure.</param>
            <param name="font">Font of the text to measure.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.ToNativeImageCore(Mapgenix.Canvas.GeoImage)">
            <summary>Converts an object to a GeoImage.</summary>
            <param name="nativeImage">Target object to convert.</param>
            <returns>GeoImage containing.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.ToGeoImageCore(System.Object)">
            <summary>Converts an object to a GeoImage.</summary>
            <param name="nativeImage">Target object to convert.</param>
            <returns>GeoImage containing.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.GetCanvasWidthCore(System.Object)">
            <summary>Gets the canvas width of a native image object.</summary>
            <param name="nativeImage">Native image used to get the canvas width.</param>
            <returns>Canvas width.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.GetCanvasHeightCore(System.Object)">
            <summary>Gets the canvas height of a native image object.</summary>
            <param name="nativeImage">Native image will be used to get the canvas height.</param>
            <returns>Canvas height.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.GetStreamFromGeoImage(Mapgenix.Canvas.GeoImage)">
            <summary>Returns stream representing the GeoImage in TIFF format.</summary>
            <returns>Stream that represents the GeoImage in TIFF format.</returns>
            <remarks>Allows to get the stream out of a GeoImage. The stream is a
            memory stream and the bytes are in TIFF format. Can be saved in the desired format.</remarks>
            <param name="image">GeoImage to convert to a stream.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PrinterGeoCanvas.FlushCore">
            <summary>Flushes drawing and commits the drawing on the canvas.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.NativeImageTile">
            <summary>Represents a native image tile defined as scale, RectangleBox and a byte array.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.NativeImageTile.#ctor">
            <summary>Default constructor without passing any parameters. Properties needs to be set manually.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.NativeImageTile.#ctor(Mapgenix.Shapes.RectangleShape,System.Double)">
            <summary>Constructor for Tile passing a boundingBox and a scale.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.NativeImageTile.#ctor(System.Byte[],Mapgenix.Shapes.RectangleShape,System.Double)">
            <summary>Constructor for Tile passing an image bitmap array, a boundingBox and a scale.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.NativeImageTile.NativeImage">
            <summary>Gets and sets the byte array showing the image of the tile.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.Proj4Projection">
            <summary>Projection class using Proj4 projection library to project data from one coordinate system to another</summary>
            <remarks>Uses Proj4 to project data from one Srid to another. Proj4 is a well known established projection library supporting thousands of
            projections. It uses a special text format to feed in parameters about the from (Internal) and the To (External)
            projections. TIt has become a standard and many organizations have recognized it and
            provide their projection definition in this format. The latest EPSG (European Petroleum Survey Group) and SRID (Spatial Reference System
            Identifiers) list are supported.<br/><br/>
            The SRID for the popular WGS84 is 4326.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.#ctor">
            <summary>Default constructor of the class.</summary>
            <remarks>It is necessary to set the properties InternalProjectionParametersString and ExternalProjectionParametersString.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.#ctor(System.Int32,System.Int32)">
            <summary>Constructor of the class.</summary>
            <returns>None</returns>
            <remarks>Use this contructor if you know the SRID numbers</remarks>
            <param name="internalEpsgSrid">Srid of the internal projection.</param>
            <param name="externalEpsgSrid">Srid of the external projection.</param>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.#ctor(System.String,System.String)">
            <summary>Constructor of the class.</summary>
            <overloads>Pass in Proj4 text parameters for the From (Internal) and the To (External)
            projections. The parameter strings look like "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"</overloads>
            <returns>None</returns>
            <remarks>Use this constructor with exact projection strings.</remarks>
            <param name="internalProjectionParametersString">Proj4 projection string for the internal projection.</param>
            <param name="externalProjectionParametersString">Proj4 projection string for the external projection.</param>
        </member>
        <member name="P:Mapgenix.Canvas.Proj4Projection.DecimalDegreeBoundary">
            <summary>Returns the Boundary for decimal degrees values.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.Proj4Projection.InternalProjectionParametersString">
             <summary>Gets or sets the Proj4 text parameter for the From (internal) projection.</summary>
            <remarks>The string looks like "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs".</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.Proj4Projection.ExternalProjectionParametersString">
             <summary>Gets or sets the Proj4 text parameter for the To (external) projection.</summary>
            <remarks>The string looks like "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs".</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.Dispose">
            <summary>Dispose method for the class.</summary>
            <returns>None</returns>
            <remarks>Releases the handles of the Proj4 library. Use Close instead of Dispose unless the instance will not be used again.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.OpenCore">
            <summary>Opens the projection.</summary>
            <returns>None</returns>
            <remarks>
            As the core version of the Open method it is intended to be overridden in
            the sub versions of the class. When overriding the developer is responsible for getting the
            projection class ready for doing projections.<br/><br/>
            In this override the Proj4 methods are called to get ready.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.CloseCore">
            <summary>Closes the projection.</summary>
            <returns>None</returns>
            <remarks>As the core version of the Close method it is intended to be overridden
            in sub versions of the class. When overriding the developer is responsible for freeing any
            state that have been maintained and getting the class ready to serialization if necessary.<br/><br/>
            In this override the Proj4 methods are called and the handles and memory get released.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.ConvertToExternalProjectionCore(System.Double[],System.Double[])">
            <summary>Returns projected vertices based on the coordinates passed in.</summary>
            <returns>Projected vertices based on the coordinates passed in.</returns>
            <remarks>Returns a projected vertex based on the coordinates passed in. You need to override this method.</remarks>
            <param name="x">X values of the points to project.</param>
            <param name="y">Y values of the points to project.</param>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.ConvertToInternalProjectionCore(System.Double[],System.Double[])">
            <summary>Returns reprojected vertices based on the coordinates passed in.</summary>
            <returns>Reprojected vertices based on the coordinates passed in.</returns>
            <remarks>Returns a projected vertex to the internal projection based on the coordinates passed in. You need to override this method.</remarks>
            <param name="x">X values of the points to reproject.</param>
            <param name="y">Y values of the points to reproject.</param>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.GetEpsgParametersString(System.Int32)">
            <summary>Static methjod to get a projection text from EPSG(European Petroleum Survey Group).</summary>
            <param name="srid">Srid number to get the projection text from.</param>
            <returns>Text corresponding to the srid.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.GetEsriParametersString(System.Int32)">
            <summary>Static method to get a projection text for ESRI projection.</summary>
            <param name="srid">Srid number to get the projection ESRI text from.</param>
            <returns>The project text corresponding to the srid.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.GetWgs84ParametersString">
            <summary>Static method to get the Proj4 projection text for WGS84.</summary>
            <returns>Proj4 text corresponding to Wgs84.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.GetSphericalMercatorParametersString">
            <summary>Static method to get the Proj4 projection text for Spherical Mercator.</summary>
            <returns>Proj4 text corresponding to Spherical Mercator.</returns>
            <remarks>Popular map web services such as OpenStreetMaps, GoogleMaps, HEREMaps, BingMaps etc are in that projection.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.ConvertEpsgToPrj(System.Int32)">
            <summary>Static method to get the Prj string from an Epsg number.</summary>
            <param name="srid">Epsg number.</param>
            <returns>Prj string from an Epsg number.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.ConvertProj4ToPrj(System.String)">
            <summary>Static method to get the Prj string from a Proj4 string.</summary>
            <param name="srid">Proj4 string</param>
            <returns>Prj string from a Proj4 string.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.ConvertPrjToProj4(System.String)">
            <summary>Static method to get the Proj4 string from a Prj string.</summary>
            <param name="srid">Prj string</param>
            <returns>Proj4 string from a Prj string.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.GetInternalGeographyUnitCore">
            <summary>Returns the geographic unit of the internal projection.</summary>
            <returns>geographic unit of the internal projection.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.Proj4Projection.GetExternalGeographyUnitCore">
            <summary>Returns the geographic unit of the external projection.</summary>
            <returns>geographic unit of the external projection.</returns>
        </member>
        <member name="T:Mapgenix.Canvas.BaseProjection">
            <summary>Represents a cartographic projection to apply to BaseFeatureSource.</summary>
            <remarks>Sub projection classes are used on a BaseFeatureSource. Used to project coordinates from one projection to another and the other way around.
            Immplementation in both ways is necessary.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseProjection.IsOpen">
            <summary>Gets the state of the projection (whether it is opened).</summary>
            <remarks>Reflects whether the projection is opened or closed. It is set in the
            concrete methods Open and Close, so if the sub class overrides Open and Close methods, it is not necessary to set this property.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseProjection.CanReproject">
            <summary>Indicates whether this projection should be used.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.CloneDeep">
            <summary>Creates a copy of Projection using the deep clone technique.</summary>
            <returns>Cloned Projection.</returns>
            <remarks>Deep cloning copies the cloned object and all the objects within it.
            </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.CloneDeepCore">
            <summary>Creates a copy of Projection using the deep clone technique.</summary>
            <returns>Cloned Projection.</returns>
            <remarks>Deep cloning copies the cloned object and all the objects within it.
            </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.Open">
            <summary>Opens the projection and gets it ready to use.</summary>
            <remarks>Opens the projection and gets it ready to use.<br/><br/>
            As a concrete public method that wraps a Core method, events and other logic to pre- or post-process data returned by the Core version
            of the method can be added in the future.</remarks>
            <returns>None</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.OpenCore">
            <returns>None</returns>
            <remarks>Core version of the Open method. To be overridden in an
            inherited version of the class. When overriding, getting the
            projection classes state ready for doing projections is necessary.</remarks>
            <summary>Opens the projection and gets it ready to use.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.Close">
            <summary>Closes the projection and gets it ready for serialization if necessary.</summary>
            <returns>None</returns>
            <remarks> As a concrete public method that wraps a Core method, events and other logic to pre- or post-process data returned by the Core version
            of the method can be added in the future.</remarks>
            <returns>None</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.CloseCore">
            <summary>Closes the projection and gets it ready for serialization if necessary.</summary>
            <returns>None</returns>
            <remarks>
            Being the core version of the Close method, it is intended to be overridden in sub class. When overriding, it is necessary to free any
            state that are maintained and getting the class ready for serialization.
            Note that the object may be opened again, so to make sure it can open and close multiple times without any unintended effects.</remarks>
        </member>
        <!-- El comentario XML con formato incorrecto se ha omitido para el miembro "M:Mapgenix.Canvas.BaseProjection.ConvertToExternalProjection(System.Double,System.Double)" -->
        <!-- El comentario XML con formato incorrecto se ha omitido para el miembro "M:Mapgenix.Canvas.BaseProjection.ConvertToExternalProjection(Mapgenix.Shapes.BaseShape)" -->
        <!-- El comentario XML con formato incorrecto se ha omitido para el miembro "M:Mapgenix.Canvas.BaseProjection.ConvertToExternalProjection(Mapgenix.Shapes.Feature)" -->
        <member name="M:Mapgenix.Canvas.BaseProjection.ConvertToExternalProjection(Mapgenix.Shapes.RectangleShape)">
            <summary>Returns a projected rectangle based on a rectangle.</summary>
            <overloads>This overload takes in a rectangle to project.</overloads>
            <returns>Projected rectangle based on a rectangle passed in.</returns>
            <param name="rectangleShape">Rectangle to project.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.ConvertToExternalProjectionCore(System.Double[],System.Double[])">
            <summary>Returns projected vertices based on the coordinates passed in.</summary>
            <returns>Projected vertices based on the coordinates passed in.</returns>
            <remarks>Returns a projected vertex based on the coordinates passed in. You need to override this method.</remarks>
            <param name="x">X values of the points to project.</param>
            <param name="y">Y values of the points to project.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.ConvertToInternalProjection(System.Double,System.Double)">
            <summary>Returns a reprojected vertex based on the coordinates passed in.</summary>
            <returns>Reprojected vertex based on the coordinates passed in. </returns>
            <remarks>Returns a reprojected vertex according to the internal projection.<br/><br/>
            As being a concrete public method that wraps a Core method, Mapgenix reserves the right
            to add events or other logic returned by the Core version of the method. That way, our framework stays open on our end, 
            but also allow developers to extend our logic. If you have questions about this,
            please contact our support team to help on extending the framework.
            </remarks>
            <overloads>Reprojects a set of coordinates passed in as X and Y.</overloads>
            <param name="x">X value of the point to be reprojected.</param>
            <param name="y">Y value of the point to be reprojected.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.ConvertToInternalProjection(Mapgenix.Shapes.BaseShape)">
            <summary>Returns a reprojected BaseShape based on the BaseShape passed in.</summary>
            <returns>Reprojected BaseShape based on the BaseShape passed in.</returns>
            <remarks>Returns a reprojected BaseShape according to the internal projection.<br/><br/>
            As being a concrete public method that wraps a Core method, Mapgenix reserves the right
            to add events or other logic returned by the Core version of the method. That way, our framework stays open on our end, 
            but also allow developers to extend our logic. If you have questions about this,
            please contact our support team to help on extending the framework.
            </remarks>
            <param name="baseShape">BaseShape to be reprojected.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.ConvertToInternalProjection(Mapgenix.Shapes.Feature)">
            <summary>Returns a reprojected Feature based on the Feature passed in.</summary>
            <returns>Reprojected Feature based on the Feature passed in.</returns>
            <remarks>Returns a reprojected Feature according to the internal projection.<br/><br/>
            Actually, the BaseShape of the Feature is reprojected.
            As being a concrete public method that wraps a Core method, Mapgenix reserves the right
            to add events or other logic returned by the Core version of the method. That way, our framework stays open on our end, 
            but also allow developers to extend our logic. If you have questions about this,
            please contact our support team to help on extending the framework.
            </remarks>
            <param name="feature">Feature to be reprojected.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.ConvertToInternalProjection(Mapgenix.Shapes.RectangleShape)">
            <overloads>Takes in a rectangle to reproject.</overloads>
            <summary>Returns a reprojected rectangle based on the rectangle passed in.</summary>
            <returns>Reprojected rectangle based on the rectangle passed in.</returns>
            <remarks>Reprojects to the internal projection.</remarks>
            <param name="rectangleShape">Rectangle to reproject.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.ConvertToInternalProjectionCore(System.Double[],System.Double[])">
            <summary>Returns reprojected vertices based on the coordinates passed in.</summary>
            <returns>Reprojected vertices based on the coordinates passed in.</returns>
            <remarks>Returns a projected vertex to the internal projection based on the coordinates passed in. You need to override this method.</remarks>
            <param name="x">X values of the points to reproject.</param>
            <param name="y">Y values of the points to reproject.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.GetInternalGeographyUnit">
            <summary>Returns the geographic unit of the internal projection.</summary>
            <returns>geographic unit of the internal projection.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.GetInternalGeographyUnitCore">
            <summary>Returns the geographic unit of the internal projection.</summary>
            <returns>geographic unit of the internal projection.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.GetExternalGeographyUnit">
            <summary>Returns the geographic unit of the external projection.</summary>
            <returns>geographic unit of the external projection.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseProjection.GetExternalGeographyUnitCore">
            <summary>Returns the geographic unit of the external projection.</summary>
            <returns>geographic unit of the external projection.</returns>
        </member>
        <member name="T:Mapgenix.Canvas.RotationProjection">
            <summary>Projection class to apply rotation to a FeatureSource based layer.</summary>
            <remarks>Usefull for directional maps such as driving maps with a rotation according to a vehicle heading.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.RotationProjection.#ctor">
            <summary>Constructor of the class.</summary>
            <remarks>Default constructor. Sets the angle to 0 (North).</remarks>
            <returns>None</returns>
        </member>
        <member name="M:Mapgenix.Canvas.RotationProjection.#ctor(System.Double)">
            <summary>Constructor of the class.</summary>
            <remarks>Angle to change the rotation of the layer.</remarks>
            <returns>None</returns>
            <param name="angle">Angle to rotate the map to.</param>
        </member>
        <member name="M:Mapgenix.Canvas.RotationProjection.#ctor(Mapgenix.Shapes.GeographyUnit)">
            <summary>Constructor of the class.</summary>
            <returns>None</returns>
            <param name="sourceUnit">Geography unit of the layer</param>
        </member>
        <member name="M:Mapgenix.Canvas.RotationProjection.#ctor(System.Double,Mapgenix.Shapes.GeographyUnit)">
            <summary>Constructor of the class.</summary>
            <returns>None</returns>
            <param name="angle">Angle to rotate the layer to.</param>
            <param name="sourceUnit">Geography unit of the layer</param>
        </member>
        <member name="P:Mapgenix.Canvas.RotationProjection.Angle">
            <summary>Gets or sets the angle of rotation of the layer.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.RotationProjection.SourceUnit">
            <summary>Gets or sets the unit of the layer.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.RotationProjection.GetUpdatedExtent(Mapgenix.Shapes.RectangleShape)">
            <summary>Returns an adjusted extend based on the angle of rotation.</summary>
            <returns>Adjusted extend based on the angle of rotation.</returns>
            <remarks>It is important to update the current extent every time the angle of the
            projection is changed.</remarks>
            <param name="worldExtent">Extent of the map before the rotation.</param>
        </member>
        <member name="M:Mapgenix.Canvas.RotationProjection.ConvertToExternalProjectionCore(System.Double[],System.Double[])">
            <summary>Returns projected vertices based on the coordinates passed in.</summary>
            <returns>Projected vertices based on the coordinates passed in.</returns>
            <remarks>Returns a projected vertex based on the coordinates passed in. You need to override this method.</remarks>
            <param name="x">X values of the points to project.</param>
            <param name="y">Y values of the points to project.</param>
        </member>
        <member name="M:Mapgenix.Canvas.RotationProjection.ConvertToInternalProjectionCore(System.Double[],System.Double[])">
            <summary>Returns reprojected vertices based on the coordinates passed in.</summary>
            <returns>Reprojected vertices based on the coordinates passed in.</returns>
            <remarks>Returns a projected vertex to the internal projection based on the coordinates passed in. You need to override this method.</remarks>
            <param name="x">X values of the points to reproject.</param>
            <param name="y">Y values of the points to reproject.</param>
        </member>
        <member name="M:Mapgenix.Canvas.RotationProjection.GetInternalGeographyUnitCore">
            <summary>Returns the geographic unit of the internal projection.</summary>
            <returns>geographic unit of the internal projection.</returns>
        </member>
        <member name="T:Mapgenix.Canvas.AreaStyle">
            <summary>Style to draw area based features</summary>
            <remarks>To draw area features. Fill brush to draw the interior. Outline pen to draw the border.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.AreaStyle.#ctor">
            <summary>Constructor of the class.</summary>
            <returns>None</returns>
            <remarks>Properties for the fill brush and outline pen need to be set manually.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.AreaStyle.#ctor(Mapgenix.Canvas.GeoSolidBrush)">
            <summary>Constructor of the class.</summary>
            <overloads>Fill brush without an outline.</overloads>
            <returns>None</returns>
            <remarks>The area does not have an outline.</remarks>
            <param name="fillSolidBrush">Solid brush to fill the area with.</param>
        </member>
        <member name="M:Mapgenix.Canvas.AreaStyle.#ctor(Mapgenix.Canvas.GeoPen)">
            <summary>Constructor of the class.</summary>
            <remarks>The area has an outline but no fill.</remarks>
            <overloads>Outline pen without a filled-in area.</overloads>
            <returns>None</returns>
            <param name="outlinePen">Outline pen to outline the area.</param>
        </member>
        <member name="M:Mapgenix.Canvas.AreaStyle.#ctor(Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.GeoSolidBrush)">
            <summary>Constructor of the class.</summary>
            <overloads>Outline pen with a filled-in area.</overloads>
            <returns>None</returns>
            <remarks>Fill brush and an outline pen.</remarks>
            <param name="outlinePen">Outline pen to outline the area.</param>
            <param name="fillSolidBrush">Solid brush to fill the area with.</param>
        </member>
        <member name="M:Mapgenix.Canvas.AreaStyle.#ctor(Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.GeoSolidBrush,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Constructor of the class.</summary>
            <overloads>Outline pen with a filled-in area. To specify pen or brush to draw first.</overloads>
            <returns>None</returns>
            <param name="outlinePen">Outline pen to outline the area.</param>
            <param name="fillSolidBrush">Solid brush to fill the area with.</param>
            <param name="penBrushDrawingOrder">Outline pen or the fill brush is drawn first.</param>
        </member>
        <member name="P:Mapgenix.Canvas.AreaStyle.XOffsetInPixel">
            <summary>Gets and sets the X offset in pixel unit for the features to draw.</summary>
            <value>X offset in pixel unit for the features to draw.</value>
            <remarks>Combining with a Y offset, it allows effects such as drop shadows.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.AreaStyle.YOffsetInPixel">
            <summary>Gets and sets the Y offset in pixel unit for the features to draw.</summary>
            <value>Y offset in pixel unit for the features to draw.</value>
            <remarks>Combining with a X offset, it allows effects such as drop shadows.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.AreaStyle.FillSolidBrush">
            <summary>Gets and sets the solid brush to fill in the area features.</summary>
            <value>Solid brush to use to fill in the area features.</value>
            <remarks>The default solid brush is transparent.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.AreaStyle.CustomAreaStyles">
            <summary>Returns a collection of area styles to stack multiple area styles on top of each other.</summary>
            <value>Collection of area styles.</value>
            <remarks>Use these stacks to create drop shadow effects, multiple colored outlines, etc.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.AreaStyle.OutlinePen">
            <summary>Gets and sets the outline pen to outline the features.</summary>
            <value>Gets the outline pen to outline the features.</value>
            <remarks>The default outline pen color is transparent.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.AreaStyle.PenBrushDrawingOrder">
            <summary>Gets and sets the pen and brush drawing order.</summary>
            <value>Pen and brush drawing order.</value>
            <remarks>Controls whether the outline pen or the fill brush draws first. By default fill brush draws first.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.AreaStyle.DrawingLevel">
            <summary>Gets and sets the drawing level of the style.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.AreaStyle.DrawCore(System.Collections.Generic.IEnumerable{Mapgenix.Shapes.Feature},Mapgenix.Canvas.BaseGeoCanvas,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Draws the features on the canvas passed in.</summary>
            <remarks>Called from the concrete public method Draw. 
            When overriding this method, consider each feature and its column data values.If column data for a
            feature is needed, be sure to override GetRequiredColumnNamesCore and add the columns to the collection.</remarks>
            <returns>None</returns>
            <param name="features">Features to draw on the canvas.</param>
            <param name="canvas">Canvas to draw the features on.</param>
            <param name="labelsInThisLayer">Labels to draw in the current layer only.</param>
            <param name="labelsInAllLayers">Labels to drawn in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.AreaStyle.DrawSampleCore(Mapgenix.Canvas.BaseGeoCanvas,Mapgenix.Canvas.DrawingRectangleF)">
            <summary>Draws a sample feature on the canvas passed in.</summary>
            <remarks>Virtual method called from the concrete public method Draw. Can be used to
            display a legend or other sample area.</remarks>
            <returns>None</returns>
            <param name="canvas">Canvas to draw the features on.</param>
        </member>
        <member name="T:Mapgenix.Canvas.AreaStyleCustom">
            <summary>Represents the custom drawing options for area styles.</summary>
            <remarks>Allows to set the FillCustomBrush to use custom brushes to achieve effects such as linear gradients and bitmap fills.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.AreaStyleCustom.FillCustomBrush">
            <summary>Gets and sets a custom fill brush.</summary>
            <value>Custom fill brush.</value>
            <remarks>Allows to use custom brushes to achieve effects such as linear gradients and bitmap fills.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.AreaStyleCustom.CloneDeep">
            <summary>Creates a copy of AreaStyleAdvanced class using the deep clone technique.</summary>
            <returns>Cloned AreaStyleAdvanced.</returns>
            <remarks>Deep cloning copies the cloned object and all the objects within it.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.BitmapTile">
            <summary>
            NativeImageTile defined as scale, RectangleBox
            and a byte array.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.BitmapTile.#ctor">
            <summary>Default constructor without passing any parameters. Properties need to be set manually.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.BitmapTile.#ctor(Mapgenix.Shapes.RectangleShape,System.Double)">
            <summary>Constructor for Tile passing a boundingBox and a scale.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.BitmapTile.#ctor(System.Drawing.Bitmap,Mapgenix.Shapes.RectangleShape,System.Double)">
            <summary>Constructor for Tile passing an image bitmap, a boundingBox and a scale.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.BitmapTile.Bitmap">
            <summary>Gets and sets the Bitmap showing the tile image.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.BitmapTile.Dispose">
            <summary>Releases and resets unmanaged resources.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.BaseTile">
            <summary>
            	<para>Abstract class for tile. Tile is used as a rectangle image saved in Memory or Hard disk to improve drawing performance.</para>
            	<para></para>
            	<para>The Tile cache system is the pilar of the drawing technique for many mapping solutions such as OpenStreetMaps, GoogleMaps, HEREMaps,
            	BingsMaps, etc.</para>
            </summary>
            <remarks>Abstract BaseTile is the lowest level class in the Tile hierarchy. Directly
            inherited from Tile are BitmapTile, NativeImageTile. The methods and
            properties on BaseTile are the lowest common denominator for the inherited Tiles.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTile.#ctor">
            <summary>Default constructor of BaseTile.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTile.#ctor(Mapgenix.Shapes.RectangleShape,System.Double)">
            <summary>Passing a boundingBox and a scale.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseTile.Scale">
            <summary>The scale describing the Tile.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseTile.BoundingBox">
            <summary>The Bounding box describing the Tile.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTile.CloneDeep">
            <summary>To deep clone a BaseTile object.</summary>
            <returns>Cloned BaseTile object.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseTile.CloneDeepCore">
            <summary>To deep clone a BaseTile object.</summary>
            <returns>Cloned BaseTile object.</returns>
        </member>
        <member name="T:Mapgenix.Canvas.DrawingQuality">
            <summary>Types of drawing quality for the GeoCanvas.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingQuality.Default">
            <summary>Default drawing quality, balanced between speed and quality.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingQuality.HighQuality">
            <summary>High quality drawing quality (lower speed).</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingQuality.HighSpeed">
            <summary>Low quality drawing quality (higher speed).</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingQuality.CanvasSettings">
            <summary>Based on the canvas setting.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.ExtentHelper">
            <summary>Static class exposing methods dealing with map extents.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.GetDrawingExtent(Mapgenix.Shapes.RectangleShape,System.Single,System.Single)">
            <summary>Returns an adjusted extent based on the ratio screen width / screen height.</summary>
            <returns>Adjusted extent based on the ratio screen width / screen height.</returns>
            <param name="worldExtent">Map extent to adjust.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.CenterAt(Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.PointShape,System.Single,System.Single)">
            <summary>Centers the rectangle based on a center point adjusting the rectangle's width / height ratio based on the map width / height ratio.</summary>
            <returns>Adjusted extent centered on a point.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Current map extent to center.</param>
            <param name="worldPoint">World point to center the map on.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.CenterAt(Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.Feature,System.Single,System.Single)">
            <summary>Centers the rectangle based on a center point of a feature adjusting the rectangle's width / height ratio based on the map width / height ratio.</summary>
            <returns>Adjusted extent centered on a point.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Current map extent to center.</param>
            <param name="centerFeature">Feature to center the map on.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.CenterAt(Mapgenix.Shapes.RectangleShape,System.Single,System.Single,System.Single,System.Single)">
            <summary>Returns an adjusted map extent centered on a point in screen coordinates.</summary>
            <returns>Adjusted extent centered on a point in screen coordinates.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Current map extent to center.</param>
            <param name="screenX">X in screen coordinates to center on.</param>
            <param name="screenY">Y in screen coordinates to center on.</param>
            <param name="screenWidth">Width in screen coordinates.</param>
            <param name="screenHeight">Height in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.GetScreenDistanceBetweenTwoWorldPoints(Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.PointShape,Mapgenix.Shapes.PointShape,System.Single,System.Single)">
            <summary>Returns the distance in screen coordinates between two world points.</summary>
            <returns>Distance in screen coordinates between two world points.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent.</param>
            <param name="worldPoint1">First point in world coordinate to meassure from.</param>
            <param name="worldPoint2">Second point in world coordinate to measure to.</param>
            <param name="screenWidth">Width in screen coordinates.</param>
            <param name="screenHeight">Height in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.GetScreenDistanceBetweenTwoWorldPoints(Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.Feature,Mapgenix.Shapes.Feature,System.Single,System.Single)">
            <summary>Returns the distance in screen coordinates between two features.</summary>
            <returns>Distance in screen coordinates between two features.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent.</param>
            <param name="worldPointFeature1">First feature to meassure from.</param>
            <param name="worldPointFeature2">Second feature to measure to.</param>
            <param name="screenWidth">Width in screen coordinates.</param>
            <param name="screenHeight">Height in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.GetWorldDistanceBetweenTwoScreenPoints(Mapgenix.Shapes.RectangleShape,Mapgenix.Canvas.ScreenPointF,Mapgenix.Canvas.ScreenPointF,System.Single,System.Single,Mapgenix.Shapes.GeographyUnit,Mapgenix.Shapes.DistanceUnit)">
            <summary>Returns the distance in world units between two screen points on the map.</summary>
            <returns>Distance in world units between two screen points on the map.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent.</param>
            <param name="screenPoint1">First screen point to measure from.</param>
            <param name="screenPoint2">Second screen point to measure to.</param>
            <param name="screenWidth">Width of the screen.</param>
            <param name="screenHeight">Height of the screen.</param>
            <param name="worldExtentUnit">Geographic unit of the world extent is in.</param>
            <param name="distanceUnit">Distance unit to get the result distance in.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.GetWorldDistanceBetweenTwoScreenPoints(Mapgenix.Shapes.RectangleShape,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Mapgenix.Shapes.GeographyUnit,Mapgenix.Shapes.DistanceUnit)">
            <summary>Returns the distance in world units between two screen points.</summary>
            <param name="worldExtent">Map extent.</param>
            <param name="screenPoint1X">X of the screen point to measure from.</param>
            <param name="screenPoint1Y">Y of the screen point to measure from.</param>
            <param name="screenPoint2X">X of the screen point to measure to.</param>
            <param name="screenPoint2Y">Y of the screen point to measure to.</param>
            <param name="screenWidth">Width of the screen.</param>
            <param name="screenHeight">Height of the screen.</param>
            <param name="worldExtentUnit">Geography unit of the world extent you passed in.</param>
            <param name="distanceUnit">Distance unit for the result distance.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.GetScale(Mapgenix.Shapes.RectangleShape,System.Single,Mapgenix.Shapes.GeographyUnit)">
            <summary>Returns the scale of a map extent.</summary>
            <returns>Scale of a map extent.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="worldExtentUnit">Unit of the map extent.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.GetScale(Mapgenix.Shapes.RectangleShape,System.Single,Mapgenix.Shapes.GeographyUnit,System.Single)">
            <summary>Returns the current scale.</summary>
            <returns>Current scale.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="worldExtentUnit">Unit of the map extent.</param>
            <param name="dpi">Dpi (Dot per inch).</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.GetBoundingBoxOfItems(System.Collections.Generic.IEnumerable{Mapgenix.Shapes.BaseShape})">
            <summary>Gets the BoundingBox of a group of BaseShapes.</summary>
            <param name="shapes">The BaseShapes to get the BoundingBox for.</param>
            <returns>BoundingBox containing the shapes passed in.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.GetBoundingBoxOfItems(System.Collections.Generic.IEnumerable{Mapgenix.Shapes.Feature})">
            <summary>Gets the BoundingBox of a group of features.</summary>
            <param name="shapes">The features to get the BoundingBox for.</param>
            <returns>BoundingBox containing the features passed in.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomIn(Mapgenix.Shapes.RectangleShape,System.Int32)">
            <summary>Returns an extent zoomed in by the percentage passed in.</summary>
            <returns>extent zoomed in by the percentage passed in.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent to zoom to.</param>
            <param name="percentage">Percentage by which to zoom in.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomIntoCenter(Mapgenix.Shapes.RectangleShape,System.Int32,Mapgenix.Shapes.PointShape,System.Single,System.Single)">
            <summary>Returns an extent centered and zoomed in.</summary>
            <returns>Extent centered and zoomed in.</returns>
            <param name="worldExtent">Map extent to centered and zoom to.</param>
            <param name="percentage">Percentage by which to zoom in.</param>
            <param name="worldPoint">Point in world coordinate to center the extent on.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomIntoCenter(Mapgenix.Shapes.RectangleShape,System.Int32,Mapgenix.Shapes.Feature,System.Single,System.Single)">
            <summary>Returns an extent centered and zoomed in.</summary>
            <returns>Extent centered and zoomed in.</returns>
            <param name="worldExtent">Map extent to centered and zoom to.</param>
            <param name="percentage">Percentage by which to zoom in.</param>
            <param name="centerFeature">Feature to center the extent on.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomIntoCenter(Mapgenix.Shapes.RectangleShape,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>Returns an extent centered and zoomed in.</summary>
            <returns>Extent centered and zoomed in.</returns>
            <param name="worldExtent">Map extent to center and zoom to.</param>
            <param name="percentage">Percentage by which to zoom in.</param>
            <param name="screenX">X in screen coordinate to center on.</param>
            <param name="screenY">Y in screen coordinate to center on.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomOut(Mapgenix.Shapes.RectangleShape,System.Int32)">
            <summary>Returns extent zoomed out by a percentage.</summary>
            <returns>Extent zoomed out by a percentage.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent to zoom out to.</param>
            <param name="percentage">Percentage by which to zoom out.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomOutToCenter(Mapgenix.Shapes.RectangleShape,System.Int32,Mapgenix.Shapes.PointShape,System.Single,System.Single)">
            <summary>Returns an extent centered and zoomed out.</summary>
            <returns>Extent centered and zoomed out.</returns>
            <param name="worldExtent">Map extent to center and zoom out to.</param>
            <param name="percentage">Percentage by which to zoom out.</param>
            <param name="worldPoint">Point in world coordinates to center the extent on.</param>
            <param name="screenWidth">Map width in screen coordinates.</param>
            <param name="screenHeight">Map height in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomOutToCenter(Mapgenix.Shapes.RectangleShape,System.Int32,Mapgenix.Shapes.Feature,System.Single,System.Single)">
            <summary>Returns map extent centered and zoomed out.</summary>
            <returns>map extent centered and zoomed out.</returns>
            <param name="worldExtent">Map extent to center and zoom out to.</param>
            <param name="percentage">Percentage by which to zoom out.</param>
            <param name="centerFeature">Feature to center the extent on.</param>
            <param name="screenWidth">Map width in screen coordinates.</param>
            <param name="screenHeight">Map height in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomOutToCenter(Mapgenix.Shapes.RectangleShape,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>Returns a map extent centered and zoomed out.</summary>
            <returns>Map extent centered and zoomed out.</returns>
            <param name="worldExtent">Map extent to center and zoom out to.</param>
            <param name="percentage">Percentage by which to zoom out.</param>
            <param name="screenX">X in screen coordinate to center on.</param>
            <param name="screenY">Y in screen coordinate to center on.</param>
            <param name="screenWidth">Map width in screen coordinates.</param>
            <param name="screenHeight">Map height in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.Pan(Mapgenix.Shapes.RectangleShape,Mapgenix.Canvas.PanDirection,System.Int32)">
            <summary>Returns a panned extent.</summary>
            <overloads>Passes in a direction and a percentage by which to pan.</overloads>
            <returns>Panned extent.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent to pan.</param>
            <param name="direction">Direction in which to pan.</param>
            <param name="percentage">Percentage by which to pan.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.Pan(Mapgenix.Shapes.RectangleShape,System.Single,System.Int32)">
            <summary>Returns a panned extent.</summary>
            <overloads>Passes in an angle and a percentage by which to pan.</overloads>
            <returns>Panned extent.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent to pan.</param>
            <param name="degree">Degree by which to pan.</param>
            <param name="percentage">Percentage by which to pan.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ToScreenCoordinate(Mapgenix.Shapes.RectangleShape,System.Double,System.Double,System.Single,System.Single)">
            <summary>Returns screen coordinates from world coordinates.</summary>
            <returns>Screen coordinates from world coordinates.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent in world coordinates.</param>
            <param name="worldX">X in world coordinates to convert to screen points.</param>
            <param name="worldY">Y in world coordinates to convert to screen points.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ToScreenCoordinate(Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.RectangleShape,System.Single,System.Single)">
            <summary>Returns rectangle in screen coordinates from rectangle in world coordinates.</summary>
            <returns>Rectangle in screen coordinates from rectangle in world coordinates.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent in world coordinates.</param>
            <param name="targetExtent">Rectangle in world coordinates to convert to screen coordinates.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ToScreenCoordinate(Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.PointShape,System.Single,System.Single)">
            <summary>Returns screen coordinates from world coordinates.</summary>
            <returns>Screen coordinates from world coordinates.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent in world coordinates.</param>
            <param name="worldPoint">Point in world coordinates to convert to screen coordinates.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ToScreenCoordinate(Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.Feature,System.Single,System.Single)">
            <summary>Returns the center of a feature in screen coordinates from world coordinates.</summary>
            <returns>Center of a feature in screen coordinates from world coordinates.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent.</param>
            <param name="worldPointFeature">Feature which center to convert to a screen point.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ToWorldCoordinate(Mapgenix.Shapes.RectangleShape,System.Single,System.Single,System.Single,System.Single)">
            <summary>Returns point in world coordinates from screen coordinates.</summary>
            <returns>Point in world coordinates from screen coordinates.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent.</param>
            <param name="screenX">X in screen coordinates of the point to convert to world coordinates.</param>
            <param name="screenY">Y in screen coordinates of the point to convert to world coordinates.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ToWorldCoordinate(Mapgenix.Shapes.RectangleShape,Mapgenix.Canvas.ScreenPointF,System.Single,System.Single)">
            <summary>Returns point in world coordinates from screen coordinates.</summary>
            <returns>Point in world coordinates from screen coordinates.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent.</param>
            <param name="screenPoint">Point in screen coordinates to convert to a world point.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.SnapToZoomLevel(Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.GeographyUnit,System.Single,System.Single,Mapgenix.Canvas.ZoomLevelSet)">
            <summary>Returns an extent snapped to a zoom level in the zoom level set passed in.</summary>
            <returns>Extent snapped to a zoom level in the zoom level set passed in.</returns>
            <remarks>None</remarks>
            <param name="worldExtent">Map extent to snap.</param>
            <param name="worldExtentUnit">Geographic unit of the map extent.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
            <param name="zoomLevelSet">Set of zoom levels to snap to.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomToScale(System.Double,Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.GeographyUnit,System.Single,System.Single)">
            <summary>Returns a extent zoomed based on a scale.</summary>
            <returns>Extent zoomed based on a scale.</returns>
            <remarks>None</remarks>
            <param name="targetScale">Scale to zoom into.</param>
            <param name="worldExtent">Map extent to zoom into.</param>
            <param name="worldExtentUnit">Geography unit of the world extent.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomToScale(System.Double,Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.GeographyUnit,System.Single,System.Single,Mapgenix.Canvas.ScreenPointF)">
            <summary>Returns a extent that has been zoomed into based on a scale.</summary>
            <returns>Extent zoomed based on a scale.</returns>
            <remarks>None</remarks>
            <param name="targetScale">Scale to zoom into.</param>
            <param name="worldExtent">World extent to zoom into.</param>
            <param name="worldExtentUnit">Geography unit of the map extent.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
            <param name="offsetScreenPoint">Offset Point in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomIntoOffsetPoint(Mapgenix.Shapes.RectangleShape,System.Single,System.Single,Mapgenix.Canvas.ScreenPointF,System.Int32)">
            <summary>Returns a map extent zoomed in and keeping offsetScreenPoint constant.</summary>
            <returns>Map extent zoomed in and keeping offsetScreenPoint constant.</returns>
            <param name="worldExtent">Map extent to zoom in to and center to.</param>
            <param name="percentage">Percentage by which to zoom in.</param>
            <param name="offsetScreenPoint">Point in screen coordinates to keep constant.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ZoomOutToOffsetPoint(Mapgenix.Shapes.RectangleShape,System.Single,System.Single,Mapgenix.Canvas.ScreenPointF,System.Int32)">
            <summary>Returns a map extent zoomed out and keeping offsetScreenPoint constant.</summary>
            <returns>Map extent zoomed out and keeping offsetScreenPoint constant.</returns>
            <param name="worldExtent">Map extent to zoom out to and center to.</param>
            <param name="percentage">Percentage by which to zoom in.</param>
            <param name="offsetScreenPoint">Point in screen coordinates to keep constant.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="screenHeight">Height of the map in screen coordinates.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ExtentHelper.ResizeExtent(Mapgenix.Shapes.RectangleShape,System.Single,System.Single,System.Single,Mapgenix.Shapes.GeographyUnit,Mapgenix.Canvas.MapResizeMode)">
            <summary>Returns a resized RectangleShape.</summary>
            <param name="sourceExtent">Rectangle to resize.</param>
            <param name="sourceScreenWidth">Width of the map in screen coordinate</param>
            <param name="targetScreenWidth">The width of the target map in screen coordinate</param>
            <param name="targetScreenHeight">The height of the target map in screen coordinate</param>
            <param name="mapUnit">Geography unit of the map</param>
            <param name="resizeType">Resize type.</param>
            <returns>Resized rectangle.</returns>
        </member>
        <member name="T:Mapgenix.Canvas.BaseGeoBrush">
            <summary>Brush to fill the interiors of polygon based features.</summary>
            <remarks>
            	<para>Abstract base class. Cannot be instantiated. To create a GeoBrush object, use sub classes such as GeoSolidBrush.</para>
            </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoBrush.#ctor">
            <summary>Constructor of BaseGeoBrush</summary>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoBrush.Id">
            <summary>
            Id of BaseGeoBrush. Used as a key for cached brushes.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoBrush.CloneDeep">
            <summary>Creates a copy of BaseGeoBrush using the deep clone technique.</summary>
            <returns>Cloned BaseGeoBrush.</returns>
            <remarks>Deep cloning copies the cloned object as well as all the objects within it.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoBrush.CloneDeepCore">
            <summary>Creates a copy of BaseGeoBrush using the deep clone technique. By default serialization is used.</summary>
            <returns>A cloned GeoBrush.</returns>
            <remarks>Deep cloning copies the cloned object as well as all the objects within it.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.BaseGeoCanvas">
            <summary>Abstract class for canvas. Inherited classes are used for different drawing systems, such as GDI+ or WPF.</summary>
            <remarks>
            	<para>For implementing different drawing systems, such as GDI+,
                GDI, or WPF. It can also be used for PDF, Printing systems etc.
                The first call is always BeginDrawing by passing
                in an image along with its world extent.</para>
            </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.#ctor">
            <summary>Default constructor.</summary>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.CurrentScale">
            <summary>
            Gets the current scale in the canvas.
            </summary>
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">If IsDrawing mode is set to false, it throws an InvalidOperationException.</exception>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.DrawingQuality">
            <summary>
            Gets the drawing quality.
            </summary>
            <remarks>
            The DrawingQuality determines if anti-aliasing methods or other techniques are used when drawing shapes.
            </remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.MapUnit">
            <summary>Gets the MapUnit passed in on the BeginDrawingAPI in the GeoCanvas.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.Width">
            <summary>Gets the width of the canvas.</summary>
            <remarks>
            Gets the width of the canvas image that was passed in on BeginDrawing method.
            </remarks>
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">If IsDrawing mode is false, it throws an InvalidOperationException.</exception>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.Height">
            <summary>Gets the height of the canvas.</summary>
            <remarks>
            Gets the height of the canvas image that was passed in on BeginDrawing method.
            </remarks>
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">If IsDrawing mode is false, it throws an InvalidOperationException.</exception>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.CurrentWorldExtent">
            <summary>
            Gets the adjusted current extent based on how BeginDrawing method was called.
            </summary>
            <remarks>
            The extent that gets passed in on BeginDrawing is adjusted for the width and
            height of the physical media being drawn on. For example if the current extent is wider
            than taller than the bitmap being drawn on, the current extent needs to be
            adjusted to ensure the entire original extent is represented. 
            </remarks>
            <returns>
            Gets the adjusted current extent based on how BeginDrawing method was called.
            </returns>
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">If IsDrawing mode is false, it throws an InvalidOperationException.</exception>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.HasKeyColor">
            <summary>
            Indicates if GeoCanvas has KeyColor or not. 
            </summary>
            <remarks>The default value is false.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.KeyColor">
            <summary>
            Gets or sets a value representing a key color. If HasKeyColor property is false, it throws exception when using KeyColors.
            </summary>
            <remarks>Makes this color transparent when drawing image.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.KeyColors">
            <summary>
            Gets a collection of key colors. If HasKeyColor property is false, it throws exception when you use KeyColors.
            </summary>
            <remarks>Makes these colors transparent when drawing image.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.NativeImage">
            <summary>
            Gets the native image from the BeginDrawing function.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.IsDrawing">
            <summary>Gets the drawing status of the GeoCanvas.</summary>
            <remarks>
            This property is set to true when BeginDrawing method is called.
            It is set to false after EndDrawing method is called.
            </remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseGeoCanvas.Dpi">
            <summary>
            The DPI value. Is only valid when HasDpi is set to true.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.Clear(Mapgenix.Canvas.BaseGeoBrush)">
            <summary>Clears the current canvas using the color specified.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.ClearCore(Mapgenix.Canvas.BaseGeoBrush)">
            <summary>Clears the current canvas using the color specified.</summary>
            <remarks>
            	<para>Use this method to clear the GeoCanvas.</para>
            	<para>This method is designed to be overridden by the sub class.</para>
            </remarks>
            <param name="fillBrush">Brush used to clear the canvas.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawArea(Mapgenix.Shapes.Feature,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">If IsDrawing mode is false, throws an InvalidOperationException.</exception>
            <exception cref="T:System.ArgumentException" caption="ArgumentException">if well-known binary is invalid in the areaShapeWkb parameter, throws an ArgumentException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If areaShapeWkb is null, throws an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If outlinePen is null, throws an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">If drawingLevel is not defined in the enumeration, throws a ArgumentOutOfRangeException.</exception>
            <param name="feature">Area based feature.</param>
            <param name="outlinePen">
            Outline GeoPen used to draw the area.
            </param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawArea(Mapgenix.Shapes.BaseAreaShape,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">If IsDrawing mode is false, throws an InvalidOperationException.</exception>
            <exception cref="T:System.ArgumentException" caption="ArgumentException">if well-known binary is invalid in the areaShapeWkb parameter, throws an ArgumentException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If areaShapeWkb is null, throws an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If outlinePen is null, throws an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">If drawingLevel is not defined in the enumeration, throws a ArgumentOutOfRangeException.</exception>
            <param name="feature">Area based shape.</param>
            <param name="outlinePen">
            Outline GeoPen used to draw the area.
            </param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawArea(Mapgenix.Shapes.Feature,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="feature">Area based feature.</param>
            <param name="fillBrush">
            Fill GeoBrush used to draw the area.
            </param>
            <param name="drawingLevel">DrawingLevel the GeoBrush draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawArea(Mapgenix.Shapes.BaseAreaShape,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="shape">Area based shape.</param>
            <param name="fillBrush">
            Fill GeoBrush used to draw the area.
            </param>
            <param name="drawingLevel">DrawingLevel the GeoBrush draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawArea(Mapgenix.Shapes.Feature,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen, GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="feature">Area based feature.</param>
            <param name="outlinePen"> Outline GeoPen used to draw the area. </param>
            <param name="fillBrush"> Fill GeoBrush used to draw the area. </param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawArea(Mapgenix.Shapes.BaseAreaShape,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen, GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="shape">Area shape to be drawn.</param>
            <param name="outlinePen">Outline pen used to draw the AreaShape.</param>
            <param name="fillBrush"> Fill Brush that will be used to draw the AreaShape. </param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawArea(Mapgenix.Shapes.Feature,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen, GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
            <param name="xOffset"> X offset in screen coordinates for the feature that draws.</param>
            <param name="yOffset"> Y offset in screen coordinates for the feature that draws.</param>
            <param name="penBrushDrawingOrder">PenBrushingDrawingOrder used when drawing the area based feature.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawArea(Mapgenix.Shapes.BaseAreaShape,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen, GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="feature">Area based feature to be drawn.</param>
            <param name="outlinePen"> Outline GeoPen used to draw the AreaShape. </param>
            <param name="fillBrush">Fill GeoBrush used to draw the AreaShape. </param>
            <param name="drawingLevel">DrawingLevel that the GeoPen will draw on.</param>
            <param name="xOffset"> X offset in screeen coordinates for the feature that will be drawn.</param>
            <param name="yOffset"> Y offset in screen coordinates for the feature that will be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushingDrawingOrder used when drawing area based feature.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawArea(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF[]},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen, GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="screenPoints">AreaShape in well-known binary format.</param>
            <param name="outlinePen">Outline GeoPen used to draw the AreaShape.</param>
            <param name="fillBrush"> Fill GeoBrush used to draw the AreaShape. </param>
            <param name="drawingLevel">DrawingLevel that the GeoPe draws on.</param>        
            <param name="xOffset"> X offset in screen coordinates for the feature to be drawn.</param>
            <param name="yOffset"> Y offset in screen coordinates for the feature to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder used when drawing the area based feature.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawAreaCore(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF[]},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen, GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="screenPoints">AreaShape in well-known binary format.</param>
            <param name="outlinePen"> Outline GeoPen used to draw the AreaShape.</param>
            <param name="fillBrush"> Fill GeoBrush used to draw the AreaShape. </param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>        
            <param name="xOffset"> X offset in screen coordinates for the feature to be drawn.</param>
            <param name="yOffset"> Y offset in screen coordinates for the feature to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder used when drawing the area based feature.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawLine(Mapgenix.Shapes.Feature,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws a line based feature on the canvas.</summary>
            <remarks>
            	<para>Used to draw a line on the GeoCanvas using a specified GeoPen.</para>
            	<para>The DrawingLevel allows to specify the level to draw you will draw on when
                drawing multiple lines. For example for drawing a road.</para>
            </remarks>
            <param name="feature">Line based feature.</param>
            <param name="linePen">GeoPen used to draw the line based feature.</param>
            <param name="drawingLevel">DrawingLeve the GeoPen draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawLine(Mapgenix.Shapes.BaseLineShape,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws a line based shape on the canvas.</summary>
            <remarks>
            	<para>Used to draw a line on the GeoCanvas using a specified GeoPen.</para>
            	<para>The DrawingLevel allows to specify the level to draw you will draw on when
                drawing multiple lines. For example for drawing a road.</para>
            </remarks>
            <param name="shape">Line shape to be drawn by GeoCanvas.</param>
            <param name="linePen">GeoPen used to draw the line.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawLine(Mapgenix.Shapes.Feature,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single)">
            <summary>Draws a line based feature on the canvas.</summary>
            <remarks>
            	<para>Used to draw a line on the GeoCanvas using a specified GeoPen.</para>
            	<para>The DrawingLevel allows to specify the level to draw you will draw on when
                drawing multiple lines. For example for drawing a road.</para>
            </remarks>
            <param name="feature">Line feature to be drawn by GeoCanvas.</param>
            <param name="linePen">GeoPen used to draw the line.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the feature to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates for the feature to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawLine(Mapgenix.Shapes.BaseLineShape,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single)">
            <summary>Draws a line based shape on the canvas.</summary>
            <remarks>
            	<para>Used to draw a line on the GeoCanvas using a specified GeoPen.</para>
            	<para>The DrawingLevel allows to specify the level to draw you will draw on when
                drawing multiple lines. For example for drawing a road.</para>
            </remarks>
            <param name="shape">Line shape to be drawn by GeoCanvas.</param>
            <param name="linePen">GeoPen used to draw the line.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the feature to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates for the feature to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawLine(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single)">
            <summary>Draws a line based shape on the canvas.</summary>
            <remarks>
            	<para>Used to draw a line on the GeoCanvas using a specified GeoPen.</para>
            	<para>The DrawingLevel allows to specify the level to draw you will draw on when
                drawing multiple lines. For example for drawing a road.</para>
            </remarks>
            <param name="screenPoints">LineShape in well-known binary format.</param>
            <param name="linePen"> GeoPen used to draw the LineShape.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the feature to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates for the feature to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawLineCore(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single)">
            <summary>Draws a line based shape on the canvas.</summary>
            <remarks>
            	<para>Used to draw a line on the GeoCanvas using a specified GeoPen.</para>
            	<para>The DrawingLevel allows to specify the level to draw you will draw on when
                drawing multiple lines. For example for drawing a road.</para>
            </remarks>
            <param name="screenPoints">LineShape in well-known binary format.</param>
            <param name="linePen">GeoPen that will be used to draw the LineShape.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
            <param name="xOffset">X offset in screen coordinate for the feature to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinate for the feature to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawEllipse(Mapgenix.Shapes.Feature,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse.
                You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="feature">Center of the feature for the center of the ellipse.</param>
            <param name="width">Width of the ellipse to draw.</param>
            <param name="height">Height of the ellipse to draw.</param>
            <param name="outlinePen">Outline GeoPen used to draw the ellipse. </param>
            <param name="drawingLevel">DrawingLevel the GeoPen will draw on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawEllipse(Mapgenix.Shapes.BasePoint,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse.
                You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="shape">Center of the shape for the center of the ellipse..</param>
            <param name="width">Width of the ellipse to draw.</param>
            <param name="height">Height of the ellipse to draw.</param>
            <param name="outlinePen">Outline GeoPen used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawEllipse(Mapgenix.Shapes.Feature,System.Single,System.Single,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse.
                You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="centerPointFeature">Center point feature.</param>
            <param name="width">Width of the ellipse to be drawn.</param>
            <param name="height">Height of the ellipse to be drawn.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoBrush draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawEllipse(Mapgenix.Shapes.BasePoint,System.Single,System.Single,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse.
                You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="shape">Center point shape.</param>
            <param name="width">Width of the ellipse to draw.</param>
            <param name="height">Height of the ellipse to draw.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoBrush draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawEllipse(Mapgenix.Shapes.Feature,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse.
                You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="feature">Center point feature.</param>
            <param name="width">Width of the ellipse to be drawn.</param>
            <param name="height">Height of the ellipse to be drawn.</param>
            <param name="outlinePen">Outline GeoPen used to draw the point.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen or GeoBrush draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawEllipse(Mapgenix.Shapes.BasePoint,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse.
                You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="shape">Center point shape.</param>
            <param name="width">Width of the ellipse to be drawn.</param>
            <param name="height">Height of the ellipse to be drawn.</param>
            <param name="outlinePen">Outline GeoPen used to draw the point.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen or GeoBrush draws on. </param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawEllipse(Mapgenix.Shapes.Feature,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse.
                You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="feature">Center point feature.</param>
            <param name="width">Width of the ellipse to be drawn.</param>
            <param name="height">Height of the ellipse to be drawn.</param>
            <param name="outlinePen">Outline GeoPen used to draw the point.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen or GeoBrush will draw on.</param>
            <param name="xOffset">X offset in world coordinates for the ellipse to be drawn.</param>
            <param name="yOffset">Y offset in world coordinates for the ellipse to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder for drawing the ellipse.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawEllipse(Mapgenix.Shapes.BasePoint,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse.
                You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="shape">Center point shape.</param>
            <param name="width">Width of the ellipse to be drawn.</param>
            <param name="height">Height of the ellipse to be drawn.</param>
            <param name="outlinePen">Outline GeoPen used to draw the point.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen or GeoBrush draws on.</param>
            <param name="xOffset">X offset in world coordinates for the ellipse to be drawn.</param>
            <param name="yOffset">Y offset in world coordinates for the ellipse to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder for drawing the ellipse.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawEllipse(Mapgenix.Canvas.ScreenPointF,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse.
                You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="screenPoint">Center point in screen coordinates.</param>
            <param name="width">Width of the ellipse to be drawn.</param>
            <param name="height">Height of the ellipse to be drawn.</param>
            <param name="outlinePen">Outline GeoPen used to draw the point.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen or GeoBrush draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the ellipse to draw.</param>
            <param name="yOffset">Y offset in screen coordinates for the ellipse to draw.</param>
            <param name="penBrushDrawingOrder"> </param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawEllipseCore(Mapgenix.Canvas.ScreenPointF,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse.
                You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="screenPoint">Center point in well-known binary format.</param>
            <param name="outlinePen">Outline GeoPen used to draw the point.</param>
            <param name="width">Width of the ellipse to be drawn.</param>
            <param name="height">Height of the ellipse to be drawn.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen or GeoBrush will draw on.</param>
            <param name="xOffset">X offset in screen coordinates for the ellipse to be drawn.</param>
            <param name="yOffset">Y offset in screen coodinates for the ellipse to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder for drawing the ellipse.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawWorldImageWithoutScaling(Mapgenix.Canvas.GeoImage,System.Double,System.Double,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in world coordinates is where the center of the image draws.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInWorld">X coordinate in world coordinates of the center point of the image to draw.</param>
            <param name="centerYInWorld">Y coordinate in world coordinates of the center point of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawWorldImageWithoutScaling(Mapgenix.Canvas.GeoImage,System.Double,System.Double,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in world coordinates is where the center of the image draws.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInWorld">X coordinate of the center point (in world coordinates) of the image to draw.</param>
            <param name="centerYInWorld">Y coordinate of the center point (in world coordinates) of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in world coordinates for the image to be drawn.</param>
            <param name="yOffset">Y offset in world coordinates for the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawScreenImageWithoutScaling(Mapgenix.Canvas.GeoImage,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in screen coordinates is where the center of the image will be
                drawn.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates for the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to draw.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawScreenImageWithoutScalingCore(Mapgenix.Canvas.GeoImage,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in screen coordinates is where the center of the image will be
                drawn.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates for the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to draw.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawWorldImage(Mapgenix.Canvas.GeoImage,System.Double,System.Double,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel)">
            <summary>Draws a scaled image on the canvas.</summary>
            <remarks>Drawing an image scaled is slower than drawing it unscaled.</remarks>
            <param name="image">Image to draw.</param>
            <param name="centerXInWorld">X coordinate of the center point of the image to draw.</param>
            <param name="centerYInWorld">Y coordinate of the center point of the image to draw.</param>
            <param name="widthInScreen">Width of the image to draw.</param>
            <param name="heightInScreen">Height of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawWorldImage(Mapgenix.Canvas.GeoImage,System.Double,System.Double,System.Double,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws a scaled image on the canvas.</summary>
            <remarks>Drawing an image scaled is slower than drawing it unscaled.</remarks>
            <param name="image">Image to draw.</param>
            <param name="centerXInWorld">X coordinate of the center point of the image to draw.</param>
            <param name="centerYInWorld">Y coordinate of the center point of the image to draw.</param>
            <param name="imageScale">Scale of the image from original size. Width and height are readjusted.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawWorldImage(Mapgenix.Canvas.GeoImage,System.Double,System.Double,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws a scaled image on the canvas.</summary>
            <remarks>Drawing an image scaled is slower than drawing it unscaled.</remarks>
            <param name="image">The image you want to draw.</param>
            <param name="centerXInWorld">X coordinate of the center point of the image.</param>
            <param name="centerYInWorld">Y coordinate of the center point of the image.</param>
            <param name="widthInScreen">Width of the image to draw.</param>
            <param name="heightInScreen">Height of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates of the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates of the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawScreenImage(Mapgenix.Canvas.GeoImage,System.Single,System.Single,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an image based on screen coordinates on the canvas.</summary>
            <remarks>Drawing a scaled image is slower than at original size.</remarks>
            <param name="image">Image to draw.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="widthInScreen">Width of the image.</param>
            <param name="heightInScreen">Height of the image.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates of the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates of the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawScreenImageCore(Mapgenix.Canvas.GeoImage,System.Single,System.Single,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an image based on screen coordinates on the canvas.</summary>
            <remarks>Drawing a scaled image is slower than at original size.</remarks>
            <param name="image">Image to draw.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="widthInScreen">Width of the image.</param>
            <param name="heightInScreen">Height of the image.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates of the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates of the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawTextWithScreenCoordinate(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.BaseGeoBrush,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel)">
            <summary>
            	<para>Draws text based on brush and font.</para>
            </summary>
            <overloads>Specifies location of text in screen coordinates.</overloads>
            <remarks>
            	<para>Draws text on the GeoCanvas at specific screen coordinates. Usefull for legends, titles, etc.</para>
            	<para>DrawingLevel allows to specify the drawing level with multiple text items. For example, for drop shadow using offsets.</para>
            </remarks>
            <param name="text">This parameter specifies the text you wish to draw.</param>
            <param name="font">This parameter represents the font you wish to use to draw the text.</param>
            <param name="fillBrush"> Color fill of the text.</param>
            <param name="upperLeftXInScreen">Upper left horizontal point in screen coordinates from where to start drawing the text. </param>
            <param name="upperLeftYInScreen">Upper left vertical point in screen coordinates from where to start drawing the text.</param>
            <param name="drawingLevel">Drawing level for the text.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawTextWithScreenCoordinate(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.GeoPen,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel)">
            <summary>
            	<para>Draws text based on brush and font.</para>
            </summary>
            <overloads>Specifies location of text in screen coordinates.</overloads>
            <remarks>
            	<para>Draws text on the GeoCanvas at specific screen coordinates. Usefull for legends, titles, etc.</para>
            	<para>DrawingLevel allows to specify the drawing level with multiple text items. For example, for drop shadow using offsets.</para>
            </remarks>
            <param name="text">This parameter specifies the text you wish to draw.</param>
            <param name="font">This parameter represents the font you wish to use to draw the text.</param>
            <param name="fillBrush"> Color fill of the text.</param>
            <param name="haloPen"> Halo of the text.</param>
            <param name="upperLeftXInScreen">Upper left horizontal point in screen coordinates from where to start drawing the text. </param>
            <param name="upperLeftYInScreen">Upper left vertical point in screen coordinates from where to start drawing the text.</param>
            <param name="drawingLevel">Drawing level for the text.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawTextWithWorldCoordinate(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.BaseGeoBrush,System.Double,System.Double,Mapgenix.Canvas.DrawingLevel)">
            <summary>
            	<para>Draws text with brush and font using world coordinates.</para>
            </summary>
            <overloads>Specifies the location in world coordinates.</overloads>
            <remarks>
            	<para>Draws text on the GeoCanvas at specific screen coordinates.</para>
            	<para>The DrawingLevel allows to specify the drawing level with multiple text items. For example for drop shadow using offsets.</para>
            </remarks>
            <param name="text">Text to write on the map.</param>
            <param name="font">Font of the text.</param>
            <param name="fillBrush">Color fill of the text.</param>
            <param name="upperLeftXInWorld">Upper left horizontal point in world coordinates from where to start drawing the text. </param>
            <param name="upperLeftYInWorld">Upper left horizontal point in world coordinates from where to start drawing the text.</param>
            <param name="drawingLevel">Drawing level of the text. Higher.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawTextWithWorldCoordinate(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.GeoPen,System.Double,System.Double,Mapgenix.Canvas.DrawingLevel)">
            <summary>
            	<para>Draws text with brush and font using world coordinates.</para>
            </summary>
            <overloads>Specifies the location in world coordinates.</overloads>
            <remarks>
            	<para>Draws text on the GeoCanvas at specific screen coordinates.</para>
            	<para>The DrawingLevel allows to specify the drawing level with multiple text items. For example for drop shadow using offsets.</para>
            </remarks>
            <param name="text">Text to write on the map.</param>
            <param name="font">Font of the text.</param>
            <param name="fillBrush">Color fill of the text.</param>
            <param name="haloPen">Halo of the text.</param>
            <param name="upperLeftXInWorld">Upper left horizontal point in world coordinates from where to start drawing the text. </param>
            <param name="upperLeftYInWorld">Upper left horizontal point in world coordinates from where to start drawing the text.</param>
            <param name="drawingLevel">Drawing level of the text. Higher.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawText(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.BaseGeoBrush,System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.DrawingLevel)">
            <summary>
            	<para>Draws text with brush and font.</para>
            </summary>
            <param name="text">Text to write on the map.</param>
            <param name="font">Font of the text.</param>
            <param name="fillBrush">Color fill of the text.</param>
            <param name="textPathInScreen">Path of the text to write on the map.</param>
            <param name="drawingLevel">Drawing level of the text.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawText(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.GeoPen,System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>
            	<para>Draws text with brush and font.</para>
            </summary>
            <param name="text">Text to write on the map.</param>
            <param name="font">Font of the text.</param>
            <param name="fillBrush">Color fill of the text.</param>
            <param name="haloPen">Pen for halo effect on the text.</param>
            <param name="textPathInScreen">Path of the text to write on the map.</param>
            <param name="drawingLevel">Drawing level of the text</param>
            <param name="xOffset">X offset in world coordinates of the text.</param>
            <param name="yOffset">Y offset in world coordinates of the text.</param>
            <param name="rotateAngle">Rotation angle of the text.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.DrawTextCore(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.GeoPen,System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>
            	<para>Draws text with brush and font.</para>
            </summary>
            <param name="text">Text to write on the map.</param>
            <param name="font">Font of the text.</param>
            <param name="fillBrush">Color fill of the text.</param>
            <param name="haloPen">Pen for halo effect on the text.</param>
            <param name="textPathInScreen">Path of the text to write on the map.</param>
            <param name="drawingLevel">Drawing level of the text</param>
            <param name="xOffset">X offset in world coordinates of the text.</param>
            <param name="yOffset">Y offset in world coordinates of the text.</param>
            <param name="rotateAngle">Rotation angle of the text.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.MeasureText(System.String,Mapgenix.Canvas.GeoFont)">
            <summary>Returns the rectangle containing a text.</summary>
            <returns>A rectangle containing a text taking into account the font.</returns>
            <remarks>Typically used for labeling logic to determine the overlapping of labels.</remarks>
            <param name="text">Text to measure.</param>
            <param name="font">Font of the text to measure.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.MeasureTextCore(System.String,Mapgenix.Canvas.GeoFont)">
            <summary>Returns the rectangle containing a text.</summary>
            <returns>A rectangle containing a text taking into account the font.</returns>
            <remarks>Typically used for labeling logic to determine the overlapping of labels.</remarks>
            <param name="text">Text to measure.</param>
            <param name="font">Font of the text to measure.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.ToNativeImage(Mapgenix.Canvas.GeoImage)">
            <summary>Converts a GeoImage to a commonly-used object. For example, in GdiPlus the object is a Bitmap.</summary>
            <remarks>BaseClass method to be implemented in the sub-concrete classes.</remarks>
            <param name="image">Target geoImage to convert.</param>
            <returns>Object</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.ToNativeImageCore(Mapgenix.Canvas.GeoImage)">
            <summary>Converts a GeoImage to a commonly-used object. For example, in GdiPlus the object is a Bitmap.</summary>
            <remarks>BaseClass method to be implemented in sub-concrete classes.</remarks>
            <param name="image">Target geoImage to convert.</param>
            <returns>Object</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.ToGeoImage(System.Object)">
            <summary>Converts an object to a GeoImage. For example, in GdiPlus  object is a Bitmap.</summary>
            <remarks>BaseClass method to be implemented in sub-concrete classes.
            </remarks>
            <param name="nativeImage">Target object to convert.</param>
            <returns>GeoImage containing.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.ToGeoImageCore(System.Object)">
            <summary>Converts an object to a GeoImage. For example, in GdiPlus  object is a Bitmap.</summary>
            <remarks>BaseClass method to be implemented in the sub-concrete classes.
            </remarks>
            <param name="nativeImage">Target object to convert.</param>
            <returns>GeoImage containing.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.GetCanvasWidth(System.Object)">
            <summary>Gets canvas width of the native image object.</summary>
            <remarks>BaseClass method to be implemented in sub-concrete classes.</remarks>
            <param name="nativeImage">Native image to get the width.</param>
            <returns>Canvas width.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.GetCanvasWidthCore(System.Object)">
            <summary>Gets the canvas width of the passed-in native image object.</summary>
            <remarks>BaseClass method to be implemented in sub-concrete classes.</remarks>
            <param name="nativeImage">Native image used to get the width.</param>
            <returns>Canvas width.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.GetCanvasHeight(System.Object)">
            <summary>Gets the canvas height of native image object.</summary>
            <remarks>BaseClass method to be implemented in sub-concrete classes.</remarks>
            <param name="nativeImage">Native image used to get the height.</param>
            <returns>Canvas height.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.GetCanvasHeightCore(System.Object)">
            <summary>Gets the canvas height of native image object.</summary>
            <remarks>BaseClass method to be implemented in sub-concrete classes.</remarks>
            <param name="nativeImage">Native image used to get the height.</param>
            <returns>Canvas height.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.GetStreamFromGeoImage(Mapgenix.Canvas.GeoImage)">
            <summary>Returns stream representing the GeoImage in TIFF format.</summary>
            <returns>Stream that represents the GeoImage in TIFF format.</returns>
            <remarks>Allows to get the stream out of a GeoImage. The stream is a
            memory stream and the bytes are in TIFF format. Can be saved in the desired format.</remarks>
            <param name="image">GeoImage to convert to a stream.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.Flush">
            <summary>Flushes drawing and commits the drawing on the canvas.</summary>
            <remarks>Method called when drawing finished. It commits the
            image changes to the image passed in on BeginDrawing. Also it sets IsDrawing to false. Finally it sets GeoCanvas to invalid state, 
            not allowing further drawing.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.FlushCore">
            <summary>Flushes drawing and commits the drawing on the canvas.</summary>
            <remarks>Method to call when drawing finished. It commits the
            image changes to the image passed in on BeginDrawing. Also it sets IsDrawing to false. Finally it sets GeoCanvas to invalid state, 
            not allowing further drawing.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseGeoCanvas.OnDrawingProgressChanged(Mapgenix.Utils.ProgressEventArgs)">
            <summary>Raised when drawing progress is changed.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.DrawingFontStyles">
            <summary>Types of font style for drawing text.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingFontStyles.Regular">
            <summary>Standard text.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingFontStyles.Bold">
            <summary>Bold text.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingFontStyles.Italic">
            <summary>Italic text.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingFontStyles.Underline">
            <summary>Underlined text.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingFontStyles.Strikeout">
            <summary>Strikeout text.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.DrawingLevel">
            <summary>Drawing levels used in GeoCanvas.</summary>
            <remarks>Used to control the drawing level. 
            Items drawn on the first level are drawn below the items drawn on the second level etc. Label drawing is the very last level to draw.</remarks>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLevel.LevelOne">
            <summary>First drawing level.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLevel.LevelTwo">
            <summary>Second drawing level.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLevel.LevelThree">
            <summary>Third drawing level.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLevel.LevelFour">
            <summary>Fourth drawing level.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLevel.LabelLevel">
            <summary>Label drawing level</summary>
        </member>
        <member name="T:Mapgenix.Canvas.DrawingLineCap">
            <summary>Cap styles for the end of lines.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineCap.Round">
            <summary>Round line cap.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineCap.AnchorMask">
            <summary>Mask used to check whether a line cap is an anchor cap.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineCap.ArrowAnchor">
            <summary>Arrow-shaped anchor cap.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineCap.Custom">
            <summary>Custom line cap.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineCap.DiamondAnchor">
            <summary>Diamond anchor cap.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineCap.Flat">
            <summary>Flat line cap.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineCap.NoAnchor">
            <summary>No anchor.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineCap.RoundAnchor">
            <summary>Round anchor cap.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineCap.Square">
            <summary>Square line cap.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineCap.SquareAnchor">
            <summary>Square anchor line cap.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineCap.Triangle">
            <summary>Triangular line cap.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.DrawingLineJoin">
            <summary>Types to join consecutive line or curve segments.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineJoin.Bevel">
            <summary>Beveled join producing a diagonal corner.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineJoin.Miter">
            <summary>Mitered join producing a sharp corner or a clipped corner,
            depending on whether the length of the miter exceeds the miter limit.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineJoin.MiterClipped">
            <summary>Mitered clipped join producing a sharp corner or a beveled corner,
            depending on whether the length of the miter exceeds the miter limit.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.DrawingLineJoin.Round">
            <summary>Circular join producing a smooth, circular arc between the lines.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.DrawingRectangleF">
            <summary>Represents the drawing of a rectangle in screen coordinates.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.DrawingRectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Constructor</summary>
            <param name="centerX">Center horizontal value of the rectangle.</param>
            <param name="centerY">Center vertical value of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
        </member>
        <member name="P:Mapgenix.Canvas.DrawingRectangleF.CenterX">
            <summary>Center in X value (horizontal) of the rectangle.</summary>
            <value>Center in X value (horizontal)of the rectangle.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.DrawingRectangleF.CenterY">
            <summary>Center in Y value (vertical) of the rectangle.</summary>
            <value>Center in Y value (vertical)of the rectangle.</value>
        </member>
        <member name="P:Mapgenix.Canvas.DrawingRectangleF.Width">
            <summary>Width of the rectangle.</summary>
            <value>Width of the rectangle.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.DrawingRectangleF.Height">
            <summary>Height of the rectangle.</summary>
            <value>Height of the rectangle.</value>
            <remarks>None</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.DrawingRectangleF.op_Equality(Mapgenix.Canvas.DrawingRectangleF,Mapgenix.Canvas.DrawingRectangleF)">
            <summary>Overrides of the == operator.</summary>
            <remarks>None</remarks>
            <param name="rectangleF1">First DrawingRectangleF to compare.</param>
            <param name="rectangleF2">Second DrawingRectangleF to compare.</param>
        </member>
        <member name="M:Mapgenix.Canvas.DrawingRectangleF.op_Inequality(Mapgenix.Canvas.DrawingRectangleF,Mapgenix.Canvas.DrawingRectangleF)">
            <summary>Overrides of the != operator.</summary>
            <remarks>None</remarks>
            <param name="rectangleF1">First DrawingRectangleF to compare.</param>
            <param name="rectangleF2">Second DrawingRectangleF to compare.</param>
        </member>
        <member name="M:Mapgenix.Canvas.DrawingRectangleF.Equals(System.Object)">
            <summary>Overrides of the Equals method.</summary>
            <remarks>None</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.DrawingRectangleF.GetHashCode">
            <summary>Overrides of GetHashCode method.</summary>
            <remarks>None</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.GeoColor">
            <summary>Represents a color for drawing on a BaseGeoCanvas.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Constructor to create a new color.</summary>
            <overloads>Red, green, and blue values from 0 to 255.</overloads>
            <remarks>None</remarks>
            <param name="red">Red value of the color (from 0 to 255).</param>
            <param name="green">Green value of the color (from 0 to 255).</param>
            <param name="blue">Blue value of the color (from 0 to 255).</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Constructor to create a new color.</summary>
            <overloads>Red, green, and blue values from 0 to 255.</overloads>
            <remarks>None</remarks>
            <param name="alpha">Alpha or transparency value of the color (from 0 to 255). 0 is totally transparent. 255 is totally opaque</param>
            <param name="red">Red value of the color (from 0 to 255).</param>
            <param name="green">Green value of the color (from 0 to 255).</param>
            <param name="blue">Blue value of the color (from 0 to 255).</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.#ctor(System.Int32,Mapgenix.Canvas.GeoColor)">
            <overloads>Creates a transparent version of a color.</overloads>
            <summary>Creates a color.</summary>
            <returns>None</returns>
            <remarks>Use this overload to create a transparent version of a color. </remarks>
            <param name="alpha">Alpha or transparency value from 0 to 255. 0 is totally transparent. 255 is totally opaque</param>
            <param name="color">This parameter specifies the base color.</param>
        </member>
        <member name="P:Mapgenix.Canvas.GeoColor.IsTransparent">
            <summary>Checks if GeoColor is totally transparent (alpha value = 0).
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoColor.AlphaComponent">
            <summary>Gets alpha value of the GeoColor.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoColor.RedComponent">
            <summary>Gets red value of the GeoColor.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoColor.GreenComponent">
            <summary>Gets green value of the GeoColor.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoColor.BlueComponent">
            <summary>Gets blue value of the GeoColor.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoColor.Hue">
            <summary>Gets the hue value of the GeoColor.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoColor.Saturation">
            <summary>Gets the saturation value of the GeoColor.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoColor.Luminance">
            <summary>Gets the luminance value of the GeoColor.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoColor.StandardColors">
            <summary>Returns a list of commonly-used predefined colors.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.GetColorsInHueFamily(Mapgenix.Canvas.GeoColor,System.Int32)">
            <summary>Returns a collection of GeoColors based on a hue of a color.</summary>
            <remarks>To get a number of colors with the same hue. For example, all the reds such as light red, dark red, pastel red etc.</remarks>
            <returns>Collection of GeoColors based on the same hue.</returns>
            <param name="baseColor">Color to base the hue from.</param>
            <param name="numbersOfColors">Number of colors to return.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.GetColorsInQualityFamily(Mapgenix.Canvas.GeoColor,System.Int32)">
            <summary>Returns a collection of GeoColors based on the quality (luminosity and saturation) of a reference color.</summary>
            <returns>Collection of GeoColors based on the quality (luminosity and saturation) of a reference color. </returns>
            <remarks>Useful to get different colors with the same quality. 
            For example, with a dark red as reference color, it gets dark blue, dark green, etc.</remarks>
            <param name="baseColor">Color to base the quality from.</param>
            <param name="numberOfColors">Number of colors to return.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.GetColorsInQualityFamily(Mapgenix.Canvas.GeoColor,Mapgenix.Canvas.GeoColor,System.Int32,Mapgenix.Canvas.ColorWheelDirection)">
            <summary>Returns a collection of GeoColors based on the quality (luminosity and saturation) of two reference colors.</summary>
            <returns>Collection of GeoColors based on the quality (luminosity and saturation) of two reference colors. </returns>
            <remarks>Useful to get different colors with the same quality. 
            For example, with a dark red as reference color, it gets dark blue, dark green, etc.</remarks>
            <param name="fromColor">First color to base the quality from.</param>
            <param name="toColor">Second color to base the quality from.</param>
            <param name="numberOfColors">Number of colors to return.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Returns a GeoColor based on the Alpha, Red, Green, and Blue values.</summary>
            <returns>GeoColor based on the Alpha, Red, Green, and Blue values.</returns>
            <remarks>None</remarks>
            <param name="alpha">Alpha, or transparent value of the color.</param>
            <param name="red">Red value of the color.</param>
            <param name="green">Green value of the color.</param>
            <param name="blue">Blue value of the color.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.FromArgb(System.Int32,Mapgenix.Canvas.GeoColor)">
            <summary>Returns a transparent version of another color.</summary>
            <returns>Transparent version of another color.</returns>
            <param name="alpha">Transparent value for the color from 0 to 255. 
            0 = fully transparent. 255 = fully opaque.</param>
            <param name="baseColor">Color to apply the transparency to.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.FromAhsl(System.Int32,System.Single,System.Single,System.Single)">
            <summary>Returns a GeoColor based on the Alpha, Hue, Saturation, and Luminosity values.</summary>
            <remarks>None</remarks>
            <param name="alpha">Alpha, or transparent, value of the color.</param>
            <param name="hue">Hue value of the color.</param>
            <param name="saturation">Saturation value of the color.</param>
            <param name="luminance">Luminance value of the color.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.FromOle(System.Int32)">
            <summary>Returns a GeoColor from an OLE color.</summary>
            <returns>GeoColor from an OLE color.</returns>
            <remarks>None</remarks>
            <param name="oleColor">OLE color to convert to GeoColor.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.FromHtml(System.String)">
            <summary>Returns a GeoColor from an HTML color (either in hexadecimal or a named color).</summary>
            <returns>GeoColor from an HTML color (either in hexadecimal or a named color).</returns>
            <remarks>None</remarks>
            <param name="htmlColor">HTML color to convert to GeoColor.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.GetRandomGeoColor(System.Int32,Mapgenix.Canvas.RandomColorType)">
            <summary>Creates a random <strong>GeoColor</strong> structure</summary>
            <overloads>Creates a <strong>GeoColor</strong> structure with random color</overloads>
            <returns>A <strong>GeoColor</strong> structure.</returns>
            <param name="alpha"><para>The alpha component. Valid values are 0 to 255.</para></param>
            <param name="colorType">A <strong>ColorType</strong> defining the type of color.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.FromWin32(System.Int32)">
            <summary>Returns a GeoColor from a Win32 color.</summary>
            <returns>GeoColor from a Win32 color.</returns>
            <remarks>None</remarks>
            <param name="win32Color">Win32 color to convert to GeoColor.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.ToOle(Mapgenix.Canvas.GeoColor)">
            <summary>Returns an OLE color from a GeoColor.</summary>
            <remarks>None</remarks>
            <returns>OLE color from a GeoColor.</returns>
            <param name="color">GeoColor to convert to GeoColor.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.ToHtml(Mapgenix.Canvas.GeoColor)">
            <summary>Returns an HTML color from a GeoColor.</summary>
            <returns>HTML color from a GeoColor.</returns>
            <param name="color">GeoColor to convert to GoeColor.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.ToWin32(Mapgenix.Canvas.GeoColor)">
            <summary>Returns a Win32 color from a GeoColor.</summary>
            <returns>Win32 color from a GeoColor.</returns>
            <param name="color">GeoColor to convert Win32 color.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.op_Equality(Mapgenix.Canvas.GeoColor,Mapgenix.Canvas.GeoColor)">
            <summary>Override of the == operator.</summary>
            <remarks>None</remarks>
            <returns>Equality of the two instances.</returns>
            <param name="geoColor1">First GeoColor to compare.</param>
            <param name="geoColor2">Second GeoColor to compare.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.op_Inequality(Mapgenix.Canvas.GeoColor,Mapgenix.Canvas.GeoColor)">
            <summary>Override of the != operator.</summary>
            <remarks>None</remarks>
            <returns>Inequality of the two instances.</returns>
            <param name="geoColor1">First GeoColor to compare.</param>
            <param name="geoColor2">Second GeoColor to compare.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.Equals(System.Object)">
            <summary>Override of the Equals method.</summary>
            <returns>Equals of an object.</returns>
            <remarks>None</remarks>
            <param name="obj">Object to check equality to the current instance.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoColor.GetHashCode">
            <summary>Override of the GetHashCode method.</summary>
            <returns>Hash code.</returns>
            <remarks>None</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.GeoDashCap">
            <summary>Types of graphic shape to use on both ends of each dash in a dashed line.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoDashCap.Flat">
            <summary>Square cap that squares off both ends of each dash.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoDashCap.Round">
            <summary>Circular cap that rounds off both ends of each dash.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoDashCap.Triangle">
            <summary>Triangular cap that points both ends of each dash.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.GeoFont">
            <summary>
            Font used to label features on a canvas.
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.GeoFont.#ctor">
            <overloads>Creates the GeoFont with default property values.</overloads>
            <remarks>None</remarks>
            <summary>Creates a GeoFont for labeling features on a canvas.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.GeoFont.#ctor(System.String,System.Single)">
            <summary>Creates a GeoFont for labeling features on a canvas.</summary>
            <overloads>Creates a GeoFont by specifying font name and font size.</overloads>
            <remarks>None</remarks>
            <param name="fontName">Name of the font.</param>
            <param name="size">Size of the font.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoFont.#ctor(System.String,System.Single,Mapgenix.Canvas.DrawingFontStyles)">
            <summary>Creates a GeoFont for labeling features on a canvas.</summary>
            <overloads>Creates a GeoFont by specifying font name, font size and font style.</overloads>
            <remarks>None</remarks>
            <param name="fontName">Name of the font.</param>
            <param name="size">Size of the font.</param>
            <param name="style">Style of the font.</param>
        </member>
        <member name="P:Mapgenix.Canvas.GeoFont.IsBold">
            <summary>Gets the bold property of the font.</summary>
            <value>Bold property of the font.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GeoFont.IsStrikeout">
            <summary>Gets the strikeout property of the font.</summary>
            <value>Strikeout property of the font.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GeoFont.IsItalic">
            <summary>Gets the italic property of the font.</summary>
            <value>Italic property of the font.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GeoFont.IsUnderline">
            <summary>Gets the underline property of the font.</summary>
            <value>Underline property of the font.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GeoFont.FontName">
            <summary>Gets the font name property of the font.</summary>
            <value>Font name property of the font.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GeoFont.Size">
            <summary>Gets the font size property of the font.</summary>
            <value>Font size property of the font.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GeoFont.Style">
            <summary>Gets the font style property of the font.</summary>
            <value>Font style property of the font.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GeoFont.Id">
            <summary>Gets the Id property of the font.</summary>
            <value>Id property of the font.</value>
            <remarks>None</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.GeoHatchStyle">
            <summary>Enumeration for the various kinds of hatch patterns used to fill areas using the GeoHatchBrush.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Horizontal">
            <summary>Horizontal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Vertical">
            <summary>Vertical pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.ForwardDiagonal">
            <summary>Forward Diagonal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.BackwardDiagonal">
            <summary>Backward Diagonal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.LargeGrid">
            <summary>Large Grid pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DiagonalCross">
            <summary>Diagonal Cross pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent05">
            <summary>05 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent10">
            <summary>10 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent20">
            <summary>20 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent25">
            <summary>25 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent30">
            <summary>30 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent40">
            <summary>40 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent50">
            <summary>50 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent60">
            <summary>60 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent70">
            <summary>70 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent75">
            <summary>75 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent80">
            <summary>80 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Percent90">
            <summary>90 Percent pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.LightDownwardDiagonal">
            <summary>Light Downward Diagonal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.LightUpwardDiagonal">
            <summary>Light Upward Diagonal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DarkDownwardDiagonal">
            <summary>Dark Downward Diagonal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DarkUpwardDiagonal">
            <summary>Dark Upward Diagonal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.WideDownwardDiagonal">
            <summary>Wide Downward Diagonal pattern fill.</summary>        
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.WideUpwardDiagonal">
            <summary>Wide Upward Diagonal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.LightVertical">
            <summary>Light Vertical pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.LightHorizontal">
            <summary>Light Horizontal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.NarrowVertical">
            <summary>Narrow Vertical pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.NarrowHorizontal">
            <summary>Narrow Horizontal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DarkVertical">
            <summary>Dark Vertical pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DarkHorizontal">
            <summary>Dark Horizontal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DashedDownwardDiagonal">
            <summary>Dashed Downward Diagonal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DashedUpwardDiagonal">
            <summary>Dashed Upward Diagonal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DashedHorizontal">
            <summary>Dashed Horizontal pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DashedVertical">
            <summary>Dashed Vertical pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.SmallConfetti">
            <summary>Small Confetti pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.LargeConfetti">
            <summary>Large Confetti pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.ZigZag">
            <summary>Zig Zag pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Wave">
            <summary>Wave pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DiagonalBrick">
            <summary>Diagonal Brick pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.HorizontalBrick">
            <summary>Horizontal Brick pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Weave">
            <summary>Weave pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Plaid">
            <summary>Plaid pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Divot">
            <summary>Divot pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DottedGrid">
            <summary>Dotted Grid pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.DottedDiamond">
            <summary>Dotted Diamond pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Shingle">
            <summary>Shingle pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Trellis">
            <summary>Trellis pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Sphere">
            <summary>Sphere pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.SmallGrid">
            <summary>Small Grid pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.SmallCheckerBoard">
            <summary>Small Checker Board pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.LargeCheckerBoard">
            <summary>Large Checker Board pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.OutlinedDiamond">
            <summary>Outlined Diamond pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.SolidDiamond">
            <summary>Solid Diamond pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Min">
            <summary>Min pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Max">
            <summary>Max pattern fill.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoHatchStyle.Cross">
            <summary>Cross pattern fill.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.GeoLinearGradientBrush">
            <summary>A <strong>BaseGeoBrush</strong> with a linear gradient.</summary>
            <remarks>
            	<para>Encapsulates both two-color gradients and custom multicolor gradients.</para>
            	<para></para>
            	<para>All linear gradients are defined along a line specified either by the width of a rectangle or by two points.</para>
            	<para></para>
            	<para>By default, a two-color linear gradient is an even horizontal linear blend from the starting color to the ending color along the specified line.</para>
            </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.GeoLinearGradientBrush.#ctor">
            <summary>Creates an instance of GeoLinearGradientBrush with default settings.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.GeoLinearGradientBrush.#ctor(Mapgenix.Canvas.GeoColor,Mapgenix.Canvas.GeoColor,Mapgenix.Canvas.GeoLinearGradientDirection)">
            <summary> Creates an instance of GeoLinearGradientBrush with a gradient start color and 
            gradient end color followed by the gradient direction enum.</summary>
            <param name="startColor">Starting <strong>GeoColor</strong> of the <strong>GeoLinearGradientBrush</strong>.</param>
            <param name="endColor">Ending <strong>GeoColor</strong> of the<strong>GeoLinearGradientBrush</strong>.</param>
            <param name="direction"><strong>GeoLinearGradientDirection</strong> enumeration of the <strong>GeoLinearGradientBrush</strong>.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoLinearGradientBrush.#ctor(Mapgenix.Canvas.GeoColor,Mapgenix.Canvas.GeoColor,System.Single)">
            <summary>Creates an instance of GeoLinearGradientBrush with a gradient start color and 
            gradient end color followed by the gradient direction angle.</summary>
            <param name="startColor">Starting <strong>GeoColor</strong> of the <strong>GeoLinearGradientBrush</strong>.</param>
            <param name="endColor">Ending <strong>GeoColor</strong> of the <strong>GeoLinearGradientBrush</strong>.</param>
            <param name="directionAngle">Direction angle value of the <strong>GeoLinearGradientBrush</strong>.</param>
        </member>
        <member name="P:Mapgenix.Canvas.GeoLinearGradientBrush.StartColor">
            <summary>Gets or sets the starting <strong>GeoColor</strong> of the gradient.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoLinearGradientBrush.EndColor">
            <summary>Gets or sets the ending <strong>GeoColor</strong> of the gradient.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoLinearGradientBrush.DirectionAngle">
            <summary>Gets or sets the direction angle of the <strong>GeoLinearGradientBrush</strong>.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoLinearGradientBrush.WrapMode">
            <summary>Gets or sets a <strong>GeoWrapMode</strong> that indicates the wrap
            mode for the <strong>GeoLinearGradientBrush</strong>.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.GeoLinearGradientDirection">
            <summary>Directions of a linear gradient.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoLinearGradientDirection.LeftToRight">
            <summary>Horizontal direction from left to right of the display.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoLinearGradientDirection.RightToLeft">
            <summary>Horizontal direction from right to left of the display.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoLinearGradientDirection.TopToBottom">
            <summary>Horizontal direction from top to bottom of the display.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoLinearGradientDirection.BottomToTop">
            <summary>Horizontal direction from bottom to top of the display.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoLinearGradientDirection.UpperLeftToLowerRight">
            <summary>Horizontal direction from upper left to lower right of the display.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoLinearGradientDirection.LowerRightToUpperLeft">
            <summary>Horizontal direction from lower right to upper left of the display.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoLinearGradientDirection.LowerLeftToUpperRight">
            <summary>Horizontal direction from lower left to upper right of the display.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoLinearGradientDirection.UpperRightToLowerLeft">
            <summary>Horizontal direction from upper right to lower left of the display.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.GeoWrapMode">
            <summary>Wrap mode for filling texture.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoWrapMode.Tile">
            <summary>Texture tiled to fill the entire area.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoWrapMode.Clamp">
            <summary>Texture not be tiled.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoWrapMode.TileFlipX">
            <summary>Texture reversed horizontally.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoWrapMode.TileFlipY">
            <summary>Texture reversed vertically.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.GeoWrapMode.TileFlipXY">
            <summary>Texture reversed horizontally and vertically.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.LineDashStyle">
            <summary>Styles of dashed lines.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.LineDashStyle.Solid">
            <summary>Solid line.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.LineDashStyle.Custom">
            <summary>User-defined custom dash style.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.LineDashStyle.DashDot">
            <summary>Line with repeating pattern of dash-dot.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.LineDashStyle.DashDotDot">
            <summary>Line with repeating pattern of dash-dot-dot.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.LineDashStyle.Dot">
            <summary>Line consisting of dots.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.LineDashStyle.Dash">
            <summary>Line consisting of dashes.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.PenBrushDrawingOrder">
            <summary>Drawing orders with pen and brush.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PenBrushDrawingOrder.BrushFirst">
            <summary>Fill brush draws first.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PenBrushDrawingOrder.PenFirst">
            <summary>Outline pen draws first.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.RandomColorType">
            <summary>Ramdom color type.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.RandomColorType.All">
            <summary>Random colors.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.RandomColorType.Pastel">
            <summary>Pastel colors.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.RandomColorType.Bright">
            <summary>Bright colors.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.ScreenPointF">
            <summary>Represents a single point in screen coordinates.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.ScreenPointF.#ctor(System.Single,System.Single)">
            <summary>Creates a screen point by passing in an X and a Y.</summary>
            <remarks>None</remarks>
            <param name="x">X (horizontal) value of a screen point.</param>
            <param name="y">Y (vertical) value of a screen point.</param>
        </member>
        <member name="P:Mapgenix.Canvas.ScreenPointF.X">
            <summary>Returns the X (horizontal) value of the screen point.</summary>
            <value>X (horizontal) value of the screen point.</value>
        </member>
        <member name="P:Mapgenix.Canvas.ScreenPointF.Y">
            <summary>Returns the Y (vertical) value of the screen point.</summary>
            <value>Y (vertical) value of the screen point.</value>
        </member>
        <member name="M:Mapgenix.Canvas.ScreenPointF.op_Equality(Mapgenix.Canvas.ScreenPointF,Mapgenix.Canvas.ScreenPointF)">
            <summary>Overrides of the == operator.</summary>
            <remarks>None</remarks>
            <returns>None</returns>
            <param name="screenPointF1">First screenPoint to compare with.</param>
            <param name="screenPointF2">Second screenPoint to compare width.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ScreenPointF.op_Inequality(Mapgenix.Canvas.ScreenPointF,Mapgenix.Canvas.ScreenPointF)">
            <summary>Overrides of the != operator.</summary>
            <remarks>None</remarks>
            <param name="screenPointF1">First GeoColor to compare with.</param>
            <param name="screenPointF2">Second GeoColor to compare with.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ScreenPointF.Equals(System.Object)">
            <summary>Overrides of the Equals method.</summary>
            <returns>Boolean result of Equals method.</returns>
            <remarks>None</remarks>
            <param name="obj">Object to check if it is equal to the current instance.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ScreenPointF.GetHashCode">
            <summary>Overrides the GetHashCode method.</summary>
            <returns>Hash code.</returns>
        </member>
        <member name="T:Mapgenix.Canvas.GeoHatchBrush">
            <summary>Brush for filling area based features with various patterns.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.GeoHatchBrush.#ctor(Mapgenix.Canvas.GeoHatchStyle,Mapgenix.Canvas.GeoColor)">
            <summary>Constructor of the class.</summary>
            <overloads>Provides a foreground color for pattern fill.</overloads>
            <returns>None</returns>
            <remarks>To specify only the foreground color of the pattern and leave the background transparent.</remarks>
            <param name="hatchStyle">Hatch pattern to fill the area.</param>
            <param name="foregroundColor">Foreground color for the pattern.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoHatchBrush.#ctor(Mapgenix.Canvas.GeoHatchStyle,Mapgenix.Canvas.GeoColor,Mapgenix.Canvas.GeoColor)">
            <summary>Constructor of the class.</summary>
            <overloads>Provides a foreground and background color for pattern fill.</overloads>
            <returns>None</returns>
            <remarks>To specify both the background and foreground color for the pattern.</remarks>
            <param name="hatchStyle">Hatch pattern to fill the area.</param>
            <param name="foregroundColor">Foreground color for the pattern.</param>
            <param name="backgroundColor">Background color for the pattern.</param>
        </member>
        <member name="P:Mapgenix.Canvas.GeoHatchBrush.HatchStyle">
            <summary>Gets and sets the pattern to use for the fill.</summary>
            <value>Pattern to use for the fill.</value>
        </member>
        <member name="P:Mapgenix.Canvas.GeoHatchBrush.ForegroundColor">
            <summary>Gets and sets the foreground color for the fill pattern.</summary>
            <value>Foreground color for the fill pattern.</value>
        </member>
        <member name="P:Mapgenix.Canvas.GeoHatchBrush.BackgroundColor">
            <summary>Gets and sets the background color for the fill pattern.</summary>
            <value>Background color for the fill pattern.</value>
        </member>
        <!-- El comentario XML con formato incorrecto se ha omitido para el miembro "T:Mapgenix.Canvas.GeoImage" -->
        <member name="M:Mapgenix.Canvas.GeoImage.#ctor">
            <overloads>To create an image without specifying a PathFileName.</overloads>
            <remarks>Set the PathFileName property.</remarks>
            <summary>To create a new GeoImage.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.GeoImage.#ctor(System.String)">
            <overloads>To create an image by specifying a PathFileName.</overloads>
            <summary>To create a GeoImage</summary>
            <remarks>When specifying the path and filename, it should be in the correct format; however, the file does not need to exist on the file system. 
            Streams supplied by the developer at runtime can be used. 
            Streamloading event is raised in case no file is found in the path specified. In that event handler, the stream needs to be supplied.</remarks>
            <param name="pathFileName">Path and filename of the image file. Note: it does not need to actually exist on the file system</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoImage.#ctor(System.IO.Stream)">
            <summary>To create a GeoImage.</summary>
            <overloads>Passes in a stream in TIFF format.</overloads>
            <returns>None</returns>
            <param name="imageStream">Stream in TIFF format.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoImage.#ctor(System.Int32,System.Int32)">
            <summary>To create a GeoImage</summary>
            <overloads>To create a GeoImage by specifying a width, height and a GeoCanvas.</overloads>
            <returns>None</returns>
            <param name="width">Width in pixels for the GeoImage.</param>
            <param name="height">Height in pixels for the GeoImage.</param>
        </member>
        <member name="P:Mapgenix.Canvas.GeoImage.PathFilename">
            <summary>Returns path and filename of the image to represent.</summary>
            <remarks>When specifying the path and filename, it should be in the correct format; however, the file does not need to exist on the file system. 
            Streams supplied by the developer at runtime can be used. 
            Streamloading event is raised in case no file is found in the path specified. In that event handler, the stream needs to be supplied.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GeoImage.CanvasImageFormat">
            <summary>Returns the image format.</summary>
            <returns>Image format.</returns>
            <remarks>None</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.GeoImage.Dispose">
            <summary>Dispose for the class.</summary>
            <overloads>Disposes the stream in the GeoImage and releases its resources.</overloads>
            <returns>None</returns>
        </member>
        <member name="E:Mapgenix.Canvas.GeoImage.StreamLoading">
            <summary>Passes one's own stream to represent the GeoImage.</summary>
            <remarks>When specifying the path and filename, it should be in the correct format; however, the file does not need to exist on the file system. 
            Streams supplied by the developer at runtime can be used. 
            Streamloading event is raised in case no file is found in the path specified. In that event handler, the stream needs to be supplied.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.GeoImage.OnStreamLoading(Mapgenix.Utils.StreamLoadingEventArgs)">
            <summary>Raises the StreamLoading event to specify one's own stream.</summary>
            <remarks>None</remarks>
            <param name="e">Event arguments for the StreamLoading event.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoImage.GetImageStream(Mapgenix.Canvas.BaseGeoCanvas)">
            <summary>Returns the stream of a GeoImage.</summary>
            <returns>Stream of a GeoImage.</returns>
            <remarks>Raises the event allowing to supply one's own stream.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.GeoImage.GetImageStreamCore(Mapgenix.Canvas.BaseGeoCanvas)">
            <summary>Returns the stream of a GeoImage.</summary>
            <returns>Stream of a GeoImage.</returns>
            <remarks>Raises the event allowing to supply one's own stream.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.GeoImage.GetWidth">
            <summary>Gets the width in pixel of the image.</summary>
            <returns>Width in pixel of the image.</returns>
            <remarks>None.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.GeoImage.GetHeight">
            <summary>Gets the height in pixel of the image.</summary>
            <returns>Height in pixel of the image.</returns>
            <remarks>None.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.GeoImage.Close">
            <summary>Closes the GeoImage.</summary>
            <returns>None</returns>
        </member>
        <member name="T:Mapgenix.Canvas.GeoPen">
            <summary>GeoPen for drawing lines on a canvas.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.GeoPen.#ctor">
            <summary>Creates a GeoPen.</summary>
            <overloads>Creates a GeoPen with default values.</overloads>
        </member>
        <member name="M:Mapgenix.Canvas.GeoPen.#ctor(Mapgenix.Canvas.BaseGeoBrush)">
            <summary>Creates a GeoPen.</summary>
            <overloads>Creates a GeoPen with a GeoBrush.</overloads>
            <remarks>None</remarks>
            <param name="brush">Brush to draw lines.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoPen.#ctor(Mapgenix.Canvas.GeoColor)">
            <summary>Creates a GeoPen.</summary>
            <overloads>Creates a GeoPen with a GeoColor.</overloads>
            <remarks>None</remarks>
            <param name="color">Color to draw lines.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoPen.#ctor(Mapgenix.Canvas.GeoColor,System.Single)">
            <summary>Creates a GeoPen.</summary>
            <overloads>Creates a GeoPen with a GeoColor and a line width.</overloads>
            <remarks>None</remarks>
            <param name="color">Color to draw lines.</param>
            <param name="width">Width of the lines to draw.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoPen.#ctor(Mapgenix.Canvas.BaseGeoBrush,System.Single)">
            <summary>Creates a GeoPen.</summary>
            <overloads>Creates a GeoPen with a GeoBrush and a line width.</overloads>
            <remarks>None</remarks>
            <param name="brush">Brush to draw the lines.</param>
            <param name="width">Width of the line to draw.</param>
        </member>
        <member name="P:Mapgenix.Canvas.GeoPen.Brush">
            <summary>Gets and sets the brush of the GeoPen.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoPen.Color">
            <summary>Gets and sets the GeoColor of the GeoPen.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoPen.DashCap">
            <summary>Gets and sets the dash cap of the GeoPen.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoPen.DashPattern">
            <summary>Gets the dash pattern of the GeoPen.</summary>
            <remarks>Assigning a value other than null sets the DashStyle property to Custom.
            The elements in the dashArray array set the length of each dash and space in the dash pattern. 
            The first element sets the length of a dash, the second element sets the length of a space, the third element sets the length of a dash, and so on. 
            The length of each dash and space in the dash pattern is the product of the element value in the array and the width of the GeoPen.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GeoPen.DashStyle">
            <summary>Gets and sets the dash style of the GeoPen.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoPen.EndCap">
            <summary>Gets and sets the end cap of the GeoPen.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoPen.LineJoin">
            <summary>Gets and sets the line join of the GeoPen.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoPen.MiterLimit">
            <summary>Gets and sets the miter limit of the GeoPen.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoPen.StartCap">
            <summary>Gets and sets the start cap of the GeoPen.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoPen.Width">
            <summary>Gets and sets the width of the GeoPen.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.GeoPen.Id">
            <summary>Gets the Id of the GeoPen.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.GeoPen.SetLineCap(Mapgenix.Canvas.DrawingLineCap,Mapgenix.Canvas.DrawingLineCap,Mapgenix.Canvas.GeoDashCap)">
            <summary>Sets the start, end and dash caps at one time.</summary>
            <remarks>None</remarks>
            <param name="startCap">Start cap to be used.</param>
            <param name="endCap">End cap to be used.</param>
            <param name="dashCap">Dash cap to be used.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoPen.CloneDeep">
            <summary>Creates a copy of GeoPen using the deep clone technique.</summary>
            <returns>A cloned GeoPen.</returns>
            <remarks>Deep cloning copies the cloned object as well as all the objects within it.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.GeoPen.CloneDeepCore">
            <summary>Creates a copy of GeoPen using the deep clone technique.</summary>
            <returns>A cloned GeoPen.</returns>
            <remarks>Deep cloning copies the cloned object as well as all the objects within it.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.GeoSolidBrush">
             <summary>
            GeoBrush of a single color tofill area shapes on a GeoCanvas.
             </summary>
        </member>
        <member name="M:Mapgenix.Canvas.GeoSolidBrush.#ctor">
            <summary>Creates a new GeoSolidBrush.</summary>
            <overloads>Creates a GeoSolidBrush in transparent.</overloads>
        </member>
        <member name="M:Mapgenix.Canvas.GeoSolidBrush.#ctor(Mapgenix.Canvas.GeoColor)">
            <summary>Creates a new GeoSolidBrush.</summary>
            <overloads>Creates a GeoSolidBrush by passing in a GeoColor.</overloads>
            <param name="color">Color of the GeoSolidBrush.</param>
        </member>
        <member name="P:Mapgenix.Canvas.GeoSolidBrush.Color">
            <summary>Gets or sets the color of the GeoSolidBrush.</summary>
            <decimalDegreesValue>Gets the color of the GeoSolidBrush.</decimalDegreesValue>
        </member>
        <member name="T:Mapgenix.Canvas.GeoTextureBrush">
            <summary>Brush to fill an area with a image texture.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.GeoTextureBrush.#ctor(Mapgenix.Canvas.GeoImage)">
            <summary>Constructor passing in an image.</summary>
            <overloads>Image for the texture.</overloads>
            <returns>None</returns>
            <remarks>To use the Tile wrap mode and to have image fill the entire shape.
            </remarks>
            <param name="image">Image for the texture.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoTextureBrush.#ctor(Mapgenix.Canvas.GeoImage,Mapgenix.Canvas.DrawingRectangleF)">
            <summary>Constructor passing in image and screen rectangle.</summary>
            <overloads>To pass the image with a screen rectangle to determine how much area to fill.</overloads>
            <returns>None</returns>
            <param name="image">Image to use as the texture.</param>
            <param name="rectangleF">Rectangle (in screen coordinates) for the area to use for the texture.</param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoTextureBrush.#ctor(Mapgenix.Canvas.GeoImage,Mapgenix.Canvas.GeoWrapMode)">
            <summary>Constructor passing in image and wrapmode.</summary>
            <overloads>Image and the wrap mode.</overloads>
            <returns>None</returns>
            <remarks>None</remarks>
            <param name="image">Image you want to use as the texture.</param>
            <param name="wrapMode">Wrap mode to determine the way the texture wraps when the area to fill is larger than the texture image.
            </param>
        </member>
        <member name="M:Mapgenix.Canvas.GeoTextureBrush.#ctor(Mapgenix.Canvas.GeoImage,Mapgenix.Canvas.GeoWrapMode,Mapgenix.Canvas.DrawingRectangleF)">
            <summary>Constructor of the class passing in an image, the wrapmode and a screen rectangle .</summary>
            <overloads>To pass in the image as well as a screen rectangle to determine how much of the area to filled according to the wrap mode.</overloads>
            <returns>None</returns>
            <remarks>None</remarks>
            <param name="image">Image to use as the texture.</param>
            <param name="wrapMode">Wrap mode to determine the way the texture wraps when the area to fill is larger than the image texture.</param>
            <param name="rectangleF">Rectangle (in screen coordinates) for the area to apply the texture.</param>
        </member>
        <member name="P:Mapgenix.Canvas.GeoTextureBrush.GeoImage">
            <summary>Gets and sets the GeoImage used for the texture fill.</summary>
            <value>Gets the GeoImage for the texture fill.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.GeoTextureBrush.DrawingRectangleF">
            <summary>Gets and sets the screen rectangle to fill the texture.</summary>
            <value>Screen rectangle to fill the texture.</value>
        </member>
        <member name="P:Mapgenix.Canvas.GeoTextureBrush.GeoWrapMode">
            <summary>Gets and sets the wrap mode to determine how an area is filled if the area is larger than the texture image.</summary>
            <value>Wrap mode to determine how an area is filled if the area is larger than the texture image.</value>
        </member>
        <member name="T:Mapgenix.Canvas.LabelDuplicateRule">
            <summary>Enumeration for the different labeling duplicate rules.</summary>
            <remarks>Duplication happens where labels with the same text are repeated on the map.
            A common case is for roads when each segment between two intersction is labeled being redundant.</remarks>
        </member>
        <member name="F:Mapgenix.Canvas.LabelDuplicateRule.OneDuplicateLabelPerQuadrant">
            <summary>Only one label with same text by quadrant.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.LabelDuplicateRule.NoDuplicateLabels">
            <summary>Only one label with same text in the entire map.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.LabelDuplicateRule.UnlimitedDuplicateLabels">
            <summary>Duplicated labels with same text allowed.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.LabelInformation">
            <summary>Location information of a piece of a label.</summary>
            <remarks>Used in the labeling logic, specifically for the labeling
            candidate. Represents an entire label or, in the case of label spline a single character in the label.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.LabelInformation.#ctor">
            <summary>Default constructor of the class.</summary>
            <remarks>Setting the various properties manually is necessary.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.LabelInformation.#ctor(Mapgenix.Shapes.PointShape,System.String,System.Double)">
            <summary>Constructor passing position in screen, text and rotation angle.</summary>
            <overloads>This constructor setting all the properties.</overloads>
            <remarks>None</remarks>
            <returns>None</returns>
            <param name="positionInScreenCoordinates">Position of the label to draw.</param>
            <param name="text">Ttext of the label.</param>
            <param name="rotationAngle">Angle of rotation for the label.</param>
        </member>
        <member name="P:Mapgenix.Canvas.LabelInformation.PositionInScreenCoordinates">
            <summary>Gets and sets the position of a piece of a label in screen coordinates.</summary>
            <value>Position of a piece of a label in screen coordinates.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelInformation.Text">
            <summary>Gets and sets the text of the label.</summary>
            <value>Text of the label.</value>
            <remarks>Text can be the entire label text or a single character.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelInformation.RotationAngle">
            <summary>Gets and sets the angle of rotation of label.</summary>
            <value>Angle of rotation of label.</value>
            <remarks>Rotation of the entire label text, a single character, or a set of characters.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.LabelingCandidate">
            <summary>A candidate for labeling.</summary>
            <remarks>Used in the internals of the labeling system for keeping track every potential label according to labeling rules.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.LabelingCandidate.#ctor">
            <summary>Default constructor of the class.</summary>
            <remarks>Setting the properties manually is necessary.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.LabelingCandidate.#ctor(System.String,Mapgenix.Shapes.PolygonShape,Mapgenix.Shapes.PointShape)">
            <summary>Constructor of the class.</summary>
            <overloads>Passes the text, area of the label and the center point.</overloads>
            <returns>None</returns>
            <param name="originalText">Text of the label before possible modification occurs.</param>
            <param name="simplePolygonInScreenCoordinates">Polygon (in screen coordinates) representing the area to be labeled.</param>
            <param name="centerPointInScreenCoordinates">Center of the polygon (in screen coordinates) representing the area to be labeled.</param>
        </member>
        <member name="M:Mapgenix.Canvas.LabelingCandidate.#ctor(System.String,Mapgenix.Shapes.PolygonShape,Mapgenix.Shapes.PointShape,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.LabelInformation})">
            <summary>Constructor of the class.</summary>
            <overloads>Passes the text, area of the label, center point and label information.</overloads>
            <returns>None</returns>
            <remarks>None</remarks>
            <param name="originalText">Text of the label before possible modification occurs.</param>
            <param name="simplePolygonInScreenCoordinates">Polygon (in screen coordinates) representing the area to be labeled.</param>
            <param name="centerPointInScreenCoordinates">Center of the polygon (in screen coordinates) representing the area to be labeled.</param>
            <param name="labelInformation">Labeling information for the labeling candidate.</param>
        </member>
        <member name="P:Mapgenix.Canvas.LabelingCandidate.OriginalText">
            <summary>Gets and sets the original text of the label.</summary>
            <value>Original text of the label.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelingCandidate.ScreenArea">
            <summary>Gets and sets the screen area encompassing the label.</summary>
            <value>Screen area encompassing the label.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelingCandidate.CenterPoint">
            <summary>Gets and sets the center point for the center of the label.</summary>
            <value>Center point for the center of the label.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelingCandidate.LabelInformation">
            <summary>Gets and sets the label information for the label.</summary>
            <value>Label information for this label.</value>
            <remarks>None</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.LabelOverlappingRule">
            <summary>Rules of label overlapping.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.LabelOverlappingRule.NoOverlapping">
            <summary>No label overlapping allowed.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.LabelOverlappingRule.AllowOverlapping">
            <summary>Label Overlapping allowed.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.LineStyle">
            <summary>Style used to draw line based features.</summary>
            <remarks>Set an inner,outer and center pen for line features such as roads. The outer pen draws first, inner second and center last.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.LineStyle.#ctor">
            <summary>Constructor of the class.</summary>
            <returns>None</returns>
        </member>
        <member name="M:Mapgenix.Canvas.LineStyle.#ctor(Mapgenix.Canvas.GeoPen)">
            <summary>Constructor of the class.</summary>
            <returns>None</returns>
            <overloads>Pass in a single outer pen.</overloads>
            <remarks>Use this when no additional pens to draw the feature is needed.</remarks>
            <param name="outerPen">Outer pen to draw the feature.</param>
        </member>
        <member name="M:Mapgenix.Canvas.LineStyle.#ctor(Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.GeoPen)">
            <summary>Constructor of the class.</summary>
            <returns>None</returns>
            <overloads>Pass in an outer and inner pen. common for drawing roads, for example.</overloads>
            <param name="outerPen">Outer pen to draw the feature.</param>
            <param name="innerPen">Inner pen to draw the feature.</param>
        </member>
        <member name="M:Mapgenix.Canvas.LineStyle.#ctor(Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.GeoPen)">
            <summary>Constructor of the class.</summary>
            <returns>None</returns>
            <overloads>Pass in an outer, inner and center line pen. common for drawing highways, for example.</overloads>
            <param name="outerPen">Outer pen to draw the feature.</param>
            <param name="innerPen">Inner pen to draw the feature.</param>
            <param name="centerPen">Center pen to draw the feature.</param>
        </member>
        <member name="P:Mapgenix.Canvas.LineStyle.XOffsetInPixel">
            <summary>Gets and sets the X offset in pixel unit for the features to draw.</summary>
            <value>X offset in pixel unit for the features to draw.</value>
            <remarks>Combining with a Y offset, it allows effects such as drop shadows.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LineStyle.YOffsetInPixel">
            <summary>Gets and sets the Y offset in pixel unit for the features to draw.</summary>
            <value>Y offset in pixel unit for the features to draw.</value>
            <remarks>Combining with a X offset, it allows effects such as drop shadows.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LineStyle.CustomLineStyles">
            <summary>Returns a collection of line styles to stack multiple line styles on top of each other.</summary>
            <value>Collection of line styles.</value>
            <remarks>Use these stacks to create drop shadow effects, multiple colored outlines, etc.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LineStyle.OuterPen">
            <summary>Gets and sets the outer pen for the line.</summary>
            <value>Gets the outer pen for the line.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LineStyle.InnerPen">
            <summary>Gets and sets the onner pen for the line.</summary>
            <value>Gets the inner pen for the line.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LineStyle.CenterPen">
            <summary>Gets and sets the center pen for the line.</summary>
            <value>Gets the center pen for the line.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LineStyle.OuterPenDrawingLevel">
            <summary>Gets and sets the drawing level for the outer pen.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.LineStyle.InnerPenDrawingLevel">
            <summary>Gets and sets the drawing level for the inner pen.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.LineStyle.CenterPenDrawingLevel">
            <summary>Gets and sets the drawing level for the center pen.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.LineStyle.DrawCore(System.Collections.Generic.IEnumerable{Mapgenix.Shapes.Feature},Mapgenix.Canvas.BaseGeoCanvas,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Draws the features on the canvas passed in.</summary>
            <remarks>Called from the concrete public method Draw. 
            When overriding this method, consider each feature and its column data values.If column data for a
            feature is needed, be sure to override GetRequiredColumnNamesCore and add the columns to the collection.</remarks>
            <returns>None</returns>
            <param name="features">Features to draw on the canvas.</param>
            <param name="canvas">Canvas to draw the features on.</param>
            <param name="labelsInThisLayer">Labels to draw in the current layer only.</param>
            <param name="labelsInAllLayers">Labels to drawn in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.LineStyle.DrawSampleCore(Mapgenix.Canvas.BaseGeoCanvas,Mapgenix.Canvas.DrawingRectangleF)">
            <summary>Draws a sample feature on the canvas passed in.</summary>
            <remarks>Virtual method called from the concrete public method Draw. Can be used to
            display a legend or other sample area.</remarks>
            <returns>None</returns>
            <param name="canvas">Canvas to draw the features on.</param>
        </member>
        <member name="T:Mapgenix.Canvas.PdfGeoCanvas">
            <summary>Canvas for the drawing of layers on PDF. </summary>
            <remarks>
            	<para>The first call is always BeginDrawing by passing in an image along with its world extent.</para>
            </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.DrawAreaCore(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF[]},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an area (polygons, circles, ellipses etc) on the canvas.</summary>
            <overloads>
            GeoPen, GeoBrush and the DrawingLevel to draw on.
            </overloads>
            <remarks>
            	<para>Gives flexibility on how to draw area based shapes with a GeoBrush to
                fill in an area, a GeoPen for the outline using.</para>
            	<para>DrawingLevel allows to specify the level to draw on when drawing multiple areas for drop shadow effect for example.</para>
            </remarks>
            <param name="screenPoints">AreaShape in well-known binary format.</param>
            <param name="outlinePen"> Outline GeoPen used to draw the AreaShape.</param>
            <param name="fillBrush"> Fill GeoBrush used to draw the AreaShape. </param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>        
            <param name="xOffset"> X offset in screen coordinates for the feature to be drawn.</param>
            <param name="yOffset"> Y offset in screen coordinates for the feature to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder used when drawing the area based feature.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.DrawLineCore(System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single)">
            <summary>Draws a line based shape on the canvas.</summary>
            <remarks>
            	<para>Used to draw a line on the GeoCanvas using a specified GeoPen.</para>
            	<para>The DrawingLevel allows to specify the level to draw you will draw on when
                drawing multiple lines. For example for drawing a road.</para>
            </remarks>
            <param name="screenPoints">LineShape in well-known binary format.</param>
            <param name="linePen">GeoPen that will be used to draw the LineShape.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen draws on.</param>
            <param name="xOffset">X offset in screen coordinate for the feature to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinate for the feature to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.DrawEllipseCore(Mapgenix.Canvas.ScreenPointF,System.Single,System.Single,Mapgenix.Canvas.GeoPen,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,Mapgenix.Canvas.PenBrushDrawingOrder)">
            <summary>Draws an ellipse on the canvas.</summary>
            <overloads>
            Allows you to pass in a GeoPen and the DrawingLevel.
            </overloads>
            <remarks>
            	<para>Provides various overloads for control on the drawing of the ellipse. GeoBrush to fill in the
                area of the ellipse. GeoPen for the outline of the ellipse. You can also call a overload that will allow you to specify
                both a GeoPen and a GeoBrush.</para>
            	<para>The DrawingLevel allows to specify the drawing level.</para>
            </remarks>
            <param name="screenPoint">Center point in well-known binary format.</param>
            <param name="outlinePen">Outline GeoPen used to draw the point.</param>
            <param name="width">Width of the ellipse to be drawn.</param>
            <param name="height">Height of the ellipse to be drawn.</param>
            <param name="fillBrush">Fill GeoBrush used to draw the point.</param>
            <param name="drawingLevel">DrawingLevel the GeoPen or GeoBrush will draw on.</param>
            <param name="xOffset">X offset in screen coordinates for the ellipse to be drawn.</param>
            <param name="yOffset">Y offset in screen coodinates for the ellipse to be drawn.</param>
            <param name="penBrushDrawingOrder">PenBrushDrawingOrder for drawing the ellipse.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.DrawScreenImageWithoutScalingCore(Mapgenix.Canvas.GeoImage,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an unscaled image on the canvas.</summary>
            <remarks>
            	<para>Drawing an image unscaled is faster than scaling it.</para>
            	<para>The X &amp; Y in screen coordinates is where the center of the image will be
                drawn.</para>
            </remarks>
            <param name="image">Image to draw unscaled.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image to draw.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates for the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates for the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to draw.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.DrawScreenImageCore(Mapgenix.Canvas.GeoImage,System.Single,System.Single,System.Single,System.Single,Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>Draws an image based on screen coordinates on the canvas.</summary>
            <remarks>Drawing a scaled image is slower than at original size.</remarks>
            <param name="image">Image to draw.</param>
            <param name="centerXInScreen">X coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="centerYInScreen">Y coordinate of the center point (in screen coordinates) of the image.</param>
            <param name="widthInScreen">Width of the image.</param>
            <param name="heightInScreen">Height of the image.</param>
            <param name="drawingLevel">DrawingLevel the image draws on.</param>
            <param name="xOffset">X offset in screen coordinates of the image to be drawn.</param>
            <param name="yOffset">Y offset in screen coordinates of the image to be drawn.</param>
            <param name="rotateAngle">Rotation angle of the image to be drawn.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.DrawTextCore(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.BaseGeoBrush,Mapgenix.Canvas.GeoPen,System.Collections.Generic.IEnumerable{Mapgenix.Canvas.ScreenPointF},Mapgenix.Canvas.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>
            	<para>Draws text with brush and font.</para>
            </summary>
            <param name="text">Text to write on the map.</param>
            <param name="font">Font of the text.</param>
            <param name="fillBrush">Color fill of the text.</param>
            <param name="haloPen">Pen for halo effect on the text.</param>
            <param name="textPathInScreen">Path of the text to write on the map.</param>
            <param name="drawingLevel">Drawing level of the text</param>
            <param name="xOffset">X offset in world coordinates of the text.</param>
            <param name="yOffset">Y offset in world coordinates of the text.</param>
            <param name="rotateAngle">Rotation angle of the text.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.MeasureTextCore(System.String,Mapgenix.Canvas.GeoFont)">
            <summary>Returns the rectangle containing a text.</summary>
            <returns>A rectangle containing a text taking into account the font.</returns>
            <remarks>Typically used for labeling logic to determine the overlapping of labels.</remarks>
            <param name="text">Text to measure.</param>
            <param name="font">Font of the text to measure.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.BeginDrawing(System.Object,Mapgenix.Shapes.RectangleShape,Mapgenix.Shapes.GeographyUnit)">
            <summary>Begins the drawing on the canvas.</summary>
            <remarks>
            First method to call before doing any drawing on the canvas.
            Sets IsDrawing property to true. After finishing drawing,
            call EndDrawing to commit the changes to the image.
            </remarks>
            <param name="nativeImage">Image the canvas draws on.</param>
            <param name="worldExtent">World extent of the canvas.</param>
            <param name="drawingMapUnit">Map unit of the canvas.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.EndDrawing">
            <summary>Ends drawing and commits the drawing on canvas.</summary>
            <remarks>Last method to call after finished drawing. Commits the
            changes to the image passed in BeginDrawing. Sets IsDrawing to false. 
            Finally puts the canvas into invalid state.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.ToNativeImageCore(Mapgenix.Canvas.GeoImage)">
            <summary>Converts an object to a GeoImage.</summary>
            <param name="nativeImage">Target object to convert.</param>
            <returns>GeoImage containing.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.ToGeoImageCore(System.Object)">
            <summary>Converts an object to a GeoImage.</summary>
            <param name="nativeImage">Target object to convert.</param>
            <returns>GeoImage containing.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.GetStreamFromGeoImage(Mapgenix.Canvas.GeoImage)">
            <summary>Returns stream representing the GeoImage in TIFF format.</summary>
            <returns>Stream that represents the GeoImage in TIFF format.</returns>
            <remarks>Allows to get the stream out of a GeoImage. The stream is a
            memory stream and the bytes are in TIFF format. Can be saved in the desired format.</remarks>
            <param name="image">GeoImage to convert to a stream.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.ConvertGeoImageToMemoryStream(Mapgenix.Canvas.GeoImage)">
            <summary>Converts GeoImage to memory stream.</summary>
            <returns>Memory stream with the bytes formatted.</returns>
            <param name="image">GeoImage to convert to a memory stream.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.ConvertGeoImageToMemoryStream(Mapgenix.Canvas.GeoImage,System.Drawing.Imaging.ImageFormat)">
            <summary>Converts GeoImage to memory stream.</summary>
            <overloads>Saves the bytes to a memory stream in the format specified.</overloads>
            <returns>Memory stream with the bytes formatted according to the image format specified.</returns>
            <param name="image">GeoImage to convert to a memory stream.</param>
            <param name="imageFormat">Image format the stream to be in.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.CreateGeoImage(System.Int32,System.Int32)">
            <summary>Returns a GeoImage based height and width.</summary>
            <returns>Returns a GeoImage based on height and width.</returns>
            <remarks>Use this static member to create a GeoCanvas.</remarks>
            <param name="width">Width of the GeoImage.</param>
            <param name="height">Height of the GeoImage.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.GetCanvasWidthCore(System.Object)">
            <summary>Gets the canvas width of a native image object.</summary>
            <param name="nativeImage">Native image used to get the canvas width.</param>
            <returns>Canvas width.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.GetCanvasHeightCore(System.Object)">
            <summary>Gets the canvas height of a native image object.</summary>
            <param name="nativeImage">Native image will be used to get the canvas height.</param>
            <returns>Canvas height.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PdfGeoCanvas.FlushCore">
            <summary>Flushes drawing and commits the drawing on the canvas.</summary>
            <remarks>Method to call when drawing finished. It commits the
            image changes to the image passed in on BeginDrawing. Also it sets IsDrawing to false. Finally it sets GeoCanvas to invalid state, 
            not allowing further drawing.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.ApplyUntilZoomLevel">
            <summary>Enumeration for the zoom levels to allow its styles to be applied to other zoom levels.</summary>
            <remarks>Used on a ZoomLevel to allow its styles to be applied to other zoom levels.</remarks>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.None">
            <summary>Default; the apply-until-zoom-level feature is not enabled.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level01">
            <summary>The zoom level's styles are applied to zoom level 1.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level02">
            <summary>The zoom level's styles are applied to zoom level 2.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level03">
            <summary>The zoom level's styles are applied to zoom level 3.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level04">
            <summary>The zoom level's styles are applied to zoom level 4.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level05">
            <summary>The zoom level's styles are applied to zoom level 5.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level06">
            <summary>The zoom level's styles are applied to zoom level 6.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level07">
            <summary>The zoom level's styles are applied to zoom level 7.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level08">
            <summary>The zoom level's styles are applied to zoom level 8.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level09">
            <summary>The zoom level's styles are applied to zoom level 9.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level10">
            <summary>The zoom level's styles are applied to zoom level 10.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level11">
            <summary>The zoom level's styles are applied to zoom level 11.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level12">
            <summary>The zoom level's styles are applied to zoom level 12.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level13">
            <summary>The zoom level's styles are applied to zoom level 13.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level14">
            <summary>The zoom level's styles are applied to zoom level 14.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level15">
            <summary>The zoom level's styles are applied to zoom level 15.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level16">
            <summary>The zoom level's styles are applied to zoom level 16.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level17">
            <summary>The zoom level's styles are applied to zoom level 17.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level18">
            <summary>The zoom level's styles are applied to zoom level 18.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level19">
            <summary>The zoom level's styles are applied to zoom level 19.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.ApplyUntilZoomLevel.Level20">
            <summary>The zoom level's styles are applied to zoom level 20.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.PanDirection">
            <summary>Panning directions.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PanDirection.Up">
            <summary>Pans up.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PanDirection.UpperRight">
            <summary>Pans upper right.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PanDirection.Right">
            <summary>Pans right.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PanDirection.LowerRight">
            <summary>Pans lower left.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PanDirection.Down">
            <summary>Pans down.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PanDirection.LowerLeft">
            <summary>Pans lower left.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PanDirection.Left">
            <summary>Pans left.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PanDirection.UpperLeft">
            <summary>Pans upper left.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.PointPlacement">
            <summary>Label placements for labeling point features.</summary>
            
        </member>
        <member name="F:Mapgenix.Canvas.PointPlacement.UpperLeft">
            <summary>Upper left of the point.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointPlacement.UpperCenter">
            <summary>Upper center of the point.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointPlacement.UpperRight">
            <summary>Upper right of the point.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointPlacement.CenterRight">
            <summary>Center right of the point.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointPlacement.Center">
            <summary>Center of the point.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointPlacement.CenterLeft">
            <summary>Center left of the point.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointPlacement.LowerLeft">
            <summary>Lower left of the point.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointPlacement.LowerCenter">
            <summary>Lower center of the point.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointPlacement.LowerRight">
            <summary>Lower right of the point.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.PointStyle">
            <summary>Style for drawing point based features</summary>
            <remarks>There are 3 main types: bitmap, character, and symbol. 
            The bitmap type represents point with a bitmap. The character type chooses a font and an
            index in the font to represent a point. The symbol type has a collection of simple geometric symbols such as triangles, circles, squares 
            to represent points.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.PointStyle.#ctor">
            <summary>Constructor of the class.</summary>
            <overloads>Default constructor. Set the properties manually.</overloads>
            <returns>None</returns>
        </member>
        <member name="M:Mapgenix.Canvas.PointStyle.#ctor(Mapgenix.Canvas.GeoImage)">
            <summary>Constructor of the class.</summary>
            <overloads>For bitmap based points.</overloads>
            <returns>None</returns>
            <remarks>PointStyle gets set to Bitmap.</remarks>
            <param name="image">GeoImage of the image to display the point.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PointStyle.#ctor(Mapgenix.Canvas.GeoFont,System.Int32,Mapgenix.Canvas.GeoSolidBrush)">
            <summary>Constructor of the class.</summary>
            <overloads>For character based points.</overloads>
            <returns>None</returns>
            <remarks>PointStyle gets set to Character.</remarks>
            <param name="characterFont">Font from which the character will be selected.</param>
            <param name="characterIndex">Index of the character in the font.</param>
            <param name="characterSolidBrush">SolidBrush to draw the character.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PointStyle.#ctor(Mapgenix.Canvas.PointSymbolType,Mapgenix.Canvas.GeoSolidBrush,System.Int32)">
            <summary>Constructor of the class.</summary>
            <overloads>For symbol-based points (squares, circles, triangles etc) with a fill.</overloads>
            <returns>None</returns>
            <remarks>PointStyle gets set to Symbol.</remarks>
            <param name="symbolType">Type of symbol (square, circle, triangle etc)</param>
            <param name="symbolSolidBrush">SolidBrush to fill the inside of the symbol.</param>
            <param name="symbolSize">Size of the symbol.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PointStyle.#ctor(Mapgenix.Canvas.PointSymbolType,Mapgenix.Canvas.GeoSolidBrush,Mapgenix.Canvas.GeoPen,System.Int32)">
            <summary>Constructor of the class.</summary>
            <overloads>For symbol-based points (square, circle, triangle etc) with  fill and outline.</overloads>
            <returns>None</returns>
            <remarks>PointStyle gets set to Symbol.</remarks>
            <param name="symbolType">Type of symbol.</param>
            <param name="symbolSolidBrush">SolidBrush to fill the inside of the symbol.</param>
            <param name="symbolPen">Pen to draw the outline of the symbol.</param>
            <param name="symbolSize">Size of the symbol.</param>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.XOffsetInPixel">
            <summary>Gets and sets the X offset in pixel unit for the features to draw.</summary>
            <value>X offset in pixel unit for the features to draw.</value>
            <remarks>Combining with a Y offset, it allows effects such as drop shadows.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.YOffsetInPixel">
            <summary>Gets and sets the Y offset in pixel unit for the features to draw.</summary>
            <value>Y offset in pixel unit for the features to draw.</value>
            <remarks>Combining with a X offset, it allows effects such as drop shadows.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.CustomPointStyles">
            <summary>Returns a collection of point styles to stack multiple point styles on top of each other.</summary>
            <value>Collection of point styles.</value>
            <remarks>Use these stacks to create drop shadow effects, multiple colored outlines, etc.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.PointType">
            <summary>Gets and sets the type of point to draw.</summary>
            <value>Type of point to draw.</value>
            <remarks>There are 3 main types: bitmap, character, and symbol. 
            The bitmap type represents point with a bitmap. The character type chooses a font and an
            index in the font to represent a point. The symbol type has a collection of simple geometric symbols such as triangles, circles, squares 
            to represent points.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.RotationAngle">
            <summary>Gets and sets the rotation angle of the point style.</summary>
            <value>Rotation angle of the point style.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.Image">
            <summary>Gets and sets the image when PointType property is Bitmap.</summary>
            <value>Image when PointType property is Bitmap.</value>
            <remarks>Uses a GeoImage either referencing a file or supplying a stream.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.ImageScale">
            <summary>Gets and sets the scale of the image to draw.</summary>
            <value>Gets the scale of the image to draw.</value>
            <remarks>Allows to scale the image up and down.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.CharacterFont">
            <summary>Gets and sets the font for the character if the PointType is Character.</summary>
            <value>Font for the character if the PointType is Character.</value>
            <remarks>Allows to set the font from which to select a character index.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.CharacterIndex">
            <summary>Gets and sets the index position of the character to use from the selected font in CharacterFont property.</summary>
            <value>Index position of the character to use from the selected font in CharacterFont property.</value>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.CharacterSolidBrush">
            <summary>Gets and sets the SolidBrush to color the font character for the point.</summary>
            <value>SolidBrush used to color the font character for the point.</value>
            <remarks>For a brush other than the SolidBrush, look in custom property of the class.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.SymbolType">
            <summary>Gets and sets the type of symbol to use if the PointType is Symbol.</summary>
            <value>Type of symbol to use if the PointType is Symbol.</value>
            <remarks>The symbols are simple geometric objects used for abstract representations on a map.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.SymbolSolidBrush">
            <summary>Gets and sets the SolidBrush used to color the interior of the Symbol.</summary>
            <remarks>To draw the interior of the symbol. It is only used if the
            PointType is Symbol. For brush other than the SolidBrush, look in
            the custom property of the class.</remarks>
            <value>SolidBrush used to color the interior of the Symbol.</value>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.SymbolPen">
            <summary>Gets and sets the SolidBrush to draw the outline of the Symbol.</summary>
            <value>SolidBrush to draw the outline of the Symbol.</value>
            <remarks>Used to draw the outline of the Symbol. By default the pen is transparent.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.SymbolSize">
            <summary>Gets and sets the size of the symbol if the PointType is Symbol.</summary>
            <value>Size of the symbol if the PointType is Symbol.</value>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.PointStyleCustom">
            <summary>Gets the custom properties of the PointStyle.</summary>
            <value>Custom properties of the PointStyle.</value>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyle.DrawingLevel">
            <summary>Gets and sets the drawing level of the style.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.PointStyle.DrawCore(System.Collections.Generic.IEnumerable{Mapgenix.Shapes.Feature},Mapgenix.Canvas.BaseGeoCanvas,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Draws the features on the canvas passed in.</summary>
            <remarks>Called from the concrete public method Draw. 
            When overriding this method, consider each feature and its column data values.If column data for a
            feature is needed, be sure to override GetRequiredColumnNamesCore and add the columns to the collection.</remarks>
            <returns>None</returns>
            <param name="features">Features to draw on the canvas.</param>
            <param name="canvas">Canvas to draw the features on.</param>
            <param name="labelsInThisLayer">Labels to draw in the current layer only.</param>
            <param name="labelsInAllLayers">Labels to drawn in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.PointStyle.DrawSampleCore(Mapgenix.Canvas.BaseGeoCanvas,Mapgenix.Canvas.DrawingRectangleF)">
            <summary>Draws a sample feature on the canvas passed in.</summary>
            <remarks>Virtual method called from the concrete public method Draw. Can be used to
            display a legend or other sample area.</remarks>
            <returns>None</returns>
            <param name="canvas">Canvas to draw the features on.</param>
        </member>
        <member name="T:Mapgenix.Canvas.PointStyleCustom">
            <summary>Represents the custom drawing options for point styles.</summary>
            <remarks>Allows to set the CustomBrush to use custom brushes to achieve effects such as linear gradients and bitmap fills.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.PointStyleCustom.#ctor">
            <summary>Default constructor of the class.</summary>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.PointStyleCustom.CustomBrush">
            <summary>Gets and sets a custom brush.</summary>
            <value>Custom brush.</value>
            <remarks>Allows to use custom brushes to achieve effects such as linear gradients and bitmap fills.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.PointSymbolType">
            <summary>Types of PointSymbols.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointSymbolType.Circle">
            <summary>Circle.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointSymbolType.Square">
            <summary>Square.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointSymbolType.Triangle">
            <summary>Triangle.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointSymbolType.Cross">
            <summary>Equal-legged cross.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointSymbolType.Diamond">
            <summary>Diamond.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointSymbolType.Diamond2">
            <summary>Variation of a diamond.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointSymbolType.Star">
            <summary>Star.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointSymbolType.Star2">
            <summary>Variation of a star.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.PointType">
            <summary>Types of Point.</summary>
            <remarks>Depending on the type, there are different properties that need to be set on the PointStyle.</remarks>
        </member>
        <member name="F:Mapgenix.Canvas.PointType.Symbol">
            <summary>Symbol type.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointType.Bitmap">
            <summary>Bitmap type.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PointType.Character">
            <summary>Font character type.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.PolygonLabelingLocationMode">
            <summary>Labeling Location Modes for labeling of polygon.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PolygonLabelingLocationMode.Default">
            <summary>Centroid of polygon.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PolygonLabelingLocationMode.Centroid">
            <summary>Centroid of polygon.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.PolygonLabelingLocationMode.BoundingBoxCenter">
            <summary>Boundingbox center of polygon.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.BaseLabelStyle">
            <summary>Abstract class encapsulating the labeling drawing and position logic.</summary>
            <remarks>Is inherited by other styles for labeling such as LabelStyle.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.#ctor">
            <summary>Default constructor of the class.</summary>
            <returns>None</returns>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.LabelPositions">
            <summary>Returns a value representing a keyValuepair (feature id and label position of a features).</summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.PolygonLabelingLocationMode">
            <summary>Gets and sets the mode determining a polygon labeling location.</summary>
            <value>Mode determining a polygon labeling location.</value>
            <remarks>The two ways to establish a polygon's labeling location area:
            1) Polygon's centroid 2) Polygon's boungdingbox center.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.XOffsetInPixel">
            <summary>Gets and sets the X offset in pixel for drawing labels.</summary>
            <value>X pixel offset in pixel for drawing each labels.</value>
            <remarks>Useful to adjust the position of a label, for example, in relation to the point it represents.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.YOffsetInPixel">
            <summary>Gets and sets the Y offset in pixel for drawing labels.</summary>
            <value>Y pixel offset in pixel for drawing each labels.</value>
            <remarks>Useful to adjust the position of a label, for example, in relation to the point it represents.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.GridSize">
            <summary>Gets and sets the grid size used for deterministic labeling.</summary>
            <value>Grid size for deterministic labeling.</value>
            <remarks>Grid size determines how many labels will be considered as candidates for drawing by grid. The
            smaller the grid size, the higher the density of candidates. The smaller the grid, 
            the more the drawing speed performance is negatively impacted.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.CustomTextStyles">
            <summary>Returns a collection of label styles to stack multiple label styles on top of each other.</summary>
            <value>collection of label styles.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.RotationAngle">
            <summary>Gets and sets the rotation angle of the label being positioned.</summary>
            <value>Rotation angle of the item being positioned.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.FittingLineInScreen">
            <summary>Gets and sets whether the labeler intends to fit the label on the visible part of a line on the screen.</summary>
            <value>Whether the labeler intends to fit the label on the visible part of the line or not.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.TextFormat">
            <summary>Gets and sets the format for the text of the label.</summary>
            <value>Format for the text of the label.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.NumericFormat">
            <summary>Gets and sets the numeric format for the text of the label.</summary>
            <value>Numeric format for the text of the label.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.DateFormat">
            <summary>Gets and sets the date format for the text of the label.</summary>
            <value>Date format for the text of the label.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.TextSolidBrush">
            <summary>Gets and sets the SolidBrush to draw the text of the label.</summary>
            <value>This property gets the SolidBrush that will be used to draw the text.</value>
            <remarks>To draw a solid color. For other brushes, use Advanced property.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.Font">
            <summary>Gets and sets the font to draw the text of the label.</summary>
            <value>Font to draw the text of the label.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.HaloPen">
            <summary>Gets and sets a pen to draw a halo around the text of the label.</summary>
            <value>Pen to draw a halo around the text of the label</value>
            <remarks>Halo effect makes the text stand out.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.TextColumnName">
            <summary>Gets and sets the column name in the data to get the text from.</summary>
            <value>Column name in the data to get the text from.</value>
            <remarks>To retrieve text from a feature specifying the name of the column that contains the text to draw.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.Mask">
            <summary>Gets and sets the AreaStyle to draw a mask behind the text.</summary>
            <value>AreaStyle to draw a mask behind the text.</value>
            <remarks>Halo and mask are similar in their effect of making highlight the text.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.MaskMargin">
            <summary>Gets and sets the margin around the text for the mask.</summary>
            <value>Margin around the text for the mask.</value>
            <remarks>Determines how much larger the mask is than the text.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.Advanced">
            <summary>Gets the custom properties of LabelStyle.</summary>
            <value>Gets he custom properties of LabelStyle.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.DuplicateRule">
            <summary>Gets and sets the rule determining how duplication of labels is handled.</summary>
            <value>Rule determining how duplication of labels is handled.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.OverlappingRule">
            <summary>Gets and sets the rule determining how overlapping labels are handled.</summary>
            <value>Rule determining how overlapping labels are handled.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.AllowSpline">
            <summary>Gets and sets whether line labels spline around curved lines.</summary>
            <value>Whether line labels spline around curved lines.</value>
            <remarks>Useful for curved streets.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.AllowLineCarriage">
            <summary>Gets and sets whether the labeler allows carriage returns.</summary>
            <value>Whether the labeler allows carriage returns.</value>
            <remarks>Allows the labeler to split long labels into multiple lines.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.SuppressPartialLabels">
            <summary>Gets and sets whether a partial label in the current extent is drawn or not.</summary>
            <remarks>Provides a solution to the "cut off" label issue when multiple tiles exist.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.ForceLineCarriage">
            <summary>Gets and sets whether the labeler  forces carriage returns.</summary>
            <value>Whether the labeler forces carriage returns.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.FittingPolygon">
            <summary>Gets and sets whether the labeler intends to fit the label within the boundary of polygon.</summary>
            <value>Whether the labeler intends to fit the label within the boundary of polygon.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.LabelAllPolygonParts">
            <summary>Gets and sets whether the labeler labels every part of a multi-part polygon.</summary>
            <value>Whether the labeler labels every part of a multi-part polygon.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.LabelAllLineParts">
            <summary>Gets and sets whether the labeler lebels every part of a multi-part line.</summary>
            <value>Whether the labeler labels every part of a multi-part line.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.ForceHorizontalLabelForLine">
            <summary>Gets and sets whether labeling for lines is horizontal.</summary>
            <value>Whether labeling for lines is horizontal.</value>
            <remarks>Normally lines are labeled in the direction of the line.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.FittingPolygonFactor">
            <summary>Gets and sets the factor keeping the label inside of the polygon.</summary>
            <value>Factor keeping the label inside of the polygon.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.TextLineSegmentRatio">
            <summary>Gets and sets the ratio label length / line length.</summary>
            <value>Ratio label length / line length.</value>
            <remarks>Allows to suppress labels to avoid label length exceeding greatly the line length.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.BestPlacement">
            <summary>Gets and sets whether the labeler changes the label position to avoid overlapping for point-based features.</summary>
            <value>Whether the labeler changes the label position to avoid overlapping for point-based features.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.PointPlacement">
            <summary>Gets and sets the location of the label for point features in relation to the point.</summary>
            <value>Location of the label for point features in relation to the point.</value>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.SplineType">
            <summary>Gets or sets the SplineType for labeling.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.BaseLabelStyle.DrawingLevel">
            <summary>Gets or sets the DrawingLavel for the label.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.DrawCore(System.Collections.Generic.IEnumerable{Mapgenix.Shapes.Feature},Mapgenix.Canvas.BaseGeoCanvas,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Draws the labels of the features on the canvas passed in.</summary>
            <remarks>Called from the concrete public method Draw. 
            When overriding this method, consider each feature and its column data values.If column data for a
            feature is needed, be sure to override GetRequiredColumnNamesCore and add the columns to the collection.</remarks>
            <returns>None</returns>
            <param name="features">Features to draw on the canvas.</param>
            <param name="canvas">Canvas to draw the features on.</param>
            <param name="labelsInThisLayer">Labels to draw in the current layer only.</param>
            <param name="labelsInAllLayers">Labels to drawn in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.GetRequiredColumnNamesCore">
            <summary>Returns the column data required for the style to draw.</summary>
            <remarks>Abstract method called from the concrete public method GetRequiredFieldNames.</remarks>
            <returns>Returns a collection of column names required by the style.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.FilterFeatures(System.Collections.Generic.IEnumerable{Mapgenix.Shapes.Feature},Mapgenix.Canvas.BaseGeoCanvas)">
            <summary>Filters the features based on the grid size for deterministic labeling.</summary>
            <returns>Features that will be considered for labeling.</returns>
            <remarks>As a concrete public method that wraps a Core method, Mapgenix reserves the right
            to add events and other logic returned by the Core version of the method. </remarks>
            <param name="features">Features to be filtered.</param>
            <param name="canvas">Canvas used for calculating font sizes.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.FilterFeaturesCore(System.Collections.Generic.IEnumerable{Mapgenix.Shapes.Feature},Mapgenix.Canvas.BaseGeoCanvas)">
            <summary>Filters the features based on the grid size for deterministic labeling.</summary>
            <returns>Features that will be considered for labeling.</returns>
            <param name="features">Features to be filtered.</param>
            <param name="canvas">Canvas used for calculating font sizes.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.GetLabelingCandidates(Mapgenix.Shapes.Feature,Mapgenix.Canvas.BaseGeoCanvas)">
            <returns>Collection of labeling candidates.</returns>
            <summary>Determines whether the specified feature is good candidate to be labeled according to the labeling properties.</summary>
            <remarks>As a concrete public method that wraps a Core method, Mapgenix reserves the right
            to add events and other logic returned by the Core version of the method. </remarks>
            <param name="feature">Feature as a labeling candidate.</param>
            <param name="canvas">Canvas used to determine font size, etc.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.GetLabelingCandidateCore(Mapgenix.Shapes.Feature,Mapgenix.Canvas.BaseGeoCanvas)">
            <returns>Collection of labeling candidates.</returns>
            <summary>Determines whether the specified feature is good candidate to be labeled according to the labeling properties.</summary>
            <param name="feature">Feature as a labeling candidate.</param>
            <param name="canvas">Canvas used to determine font size, etc.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.CheckDuplicate(Mapgenix.Canvas.LabelingCandidate,Mapgenix.Canvas.BaseGeoCanvas,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Determines whether the label is suppressed because when duplicated.</summary>
            <returns>Whether the label is suppressed because when duplicated.</returns>
            <remarks>As a concrete public method that wraps a Core method, Mapgenix reserves the right
            to add events and other logic returned by the Core version of the method.</remarks>
            <param name="labelingCandidate">Labeling candidate that will be checked to determine if it is a duplicate.</param>
            <param name="canvas">Canvas used for calculations.</param>
            <param name="labelsInThisLayer">Labels to draw in the current layer only.</param>
            <param name="labelsInAllLayers">Labels to draw in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.CheckDuplicateCore(Mapgenix.Canvas.LabelingCandidate,Mapgenix.Canvas.BaseGeoCanvas,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Determines whether the label is suppressed because when duplicated.</summary>
            <returns>Whether the label is suppressed because when duplicated.</returns>
            <param name="labelingCandidate">Labeling candidate that will be checked to determine if it is a duplicate.</param>
            <param name="canvas">Canvas used for calculations.</param>
            <param name="labelsInThisLayer">Labels to draw in the current layer only.</param>
            <param name="labelsInAllLayers">Labels to draw in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.CheckOverlapping(Mapgenix.Canvas.LabelingCandidate,Mapgenix.Canvas.BaseGeoCanvas,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Determines whether the label overlaps over labels.</summary>
            <returns>Whether the label overlaps over labels.</returns>
            <remarks>As a concrete public method that wraps a Core method, Mapgenix reserves the right
            to add events and other logic returned by the Core version of the method.</remarks>
            <param name="labelingCandidate">Labeling candidate to chech it is overlapping.</param>
            <param name="canvas">Canvas used for calculations.</param>
            <param name="labelsInThisLayer">Labels drawn in the current layer only.</param>
            <param name="labelsInAllLayers">Labels drawn in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.CheckOverlappingCore(Mapgenix.Canvas.LabelingCandidate,Mapgenix.Canvas.BaseGeoCanvas,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Determines whether the label overlaps over labels.</summary>
            <returns>Whether the label overlaps over labels.</returns>
            <param name="labelingCandidate">Labeling candidate to chech it is overlapping.</param>
            <param name="canvas">Canvas used for calculations.</param>
            <param name="labelsInThisLayer">Labels drawn in the current layer only.</param>
            <param name="labelsInAllLayers">Labels drawn in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseLabelStyle.ConvertToScreenShape(Mapgenix.Shapes.Feature,Mapgenix.Canvas.BaseGeoCanvas)">
            <summary>Converts the shape of a feature in world coordinates to screen coordinates.</summary>
            <returns>Shape in screen coordinates.</returns>
            <param name="feature">Feature which shape is to be converted from world coordinates to screen coordinates.</param>
            <param name="canvas">Canvas for doing the conversion.</param>
        </member>
        <member name="T:Mapgenix.Canvas.Properties.ExceptionDescription">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.CheckIsOpenedWhenCloneDeep">
            <summary>
              Looks up a localized string similar to You can not CloneDeep because the object is open or drawing, please close or end drawing first..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.ColorDoesNotExist">
            <summary>
              Looks up a localized string similar to The color you have provided does not exist..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.CurrentExtentNotAssigned">
            <summary>
              Looks up a localized string similar to The CurrentExtent property must be set before calling this method. If you want to use a custom extent, please use the static method.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.DefaultAndCustomStyleDuplicate">
            <summary>
              Looks up a localized string similar to You are trying to use both a default style and the custom styles collection.  You may only use one or the other..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.DoubleOutOfRange">
            <summary>
              Looks up a localized string similar to The input double value is out of range..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.EnumerationOutOfRange">
            <summary>
              Looks up a localized string similar to The value for the enumeration is not on of the valid values..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.FeatureIsNotValid">
            <summary>
              Looks up a localized string similar to The Feature you provided is not valid..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.GdipLoadImageFromFileError">
            <summary>
              Looks up a localized string similar to GDI+ threw a status error code..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.GeocanvasIsNotInDrawing">
            <summary>
              Looks up a localized string similar to The GeoCanvas is currently not drawing.  Please call the BeginDraw method before calling this method..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.HtmlColorIsInvalid">
            <summary>
              Looks up a localized string similar to The input string HtmlColor is invalid..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.ImageInPointStyleCanNotBeNull">
            <summary>
              Looks up a localized string similar to The image property can&apos;t be null..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.ImageScaleShouldBiggerThanZero">
            <summary>
              Looks up a localized string similar to The ImageScaled property must be larger than 0..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.IsNotSupportedNowForProjection">
            <summary>
              Looks up a localized string similar to  is not supported now for projection..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.KeyColorIsNotSupported">
            <summary>
              Looks up a localized string similar to Do not support KeyColor in the specify GeoCanvas..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.NumberShouldBeByte">
            <summary>
              Looks up a localized string similar to The number should be between 0 and 255.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.ParameterIsEmpty">
            <summary>
              Looks up a localized string similar to The parameter you supplied may not be empty..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.ParameterIsNull">
            <summary>
              Looks up a localized string similar to The parameter you supplied may not be null..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.ProjectionInitializationError">
            <summary>
              Looks up a localized string similar to Projection initialization failed..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.ProjectionIsNotOpen">
            <summary>
              Looks up a localized string similar to The projection is not open.  Please open it before calling this method..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.ShapeIsInvalidForOperation">
            <summary>
              Looks up a localized string similar to The shape you provided does not pass our simple validation..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.TargetShapeIsNotValidType">
            <summary>
              Looks up a localized string similar to Target Shape Is Not Valid Type..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.TheValueShouldBeGreaterThanZero">
            <summary>
              Looks up a localized string similar to The value should be greater than zero..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.WkbIsInvalid">
            <summary>
              Looks up a localized string similar to The format of the well known binary is incorrect..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.WkbIsNotValidForDrawing">
            <summary>
              Looks up a localized string similar to The well known binary is not valid for drawing..
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.ExceptionDescription.WorldExtentIsNotValid">
            <summary>
              Looks up a localized string similar to The world extent is not valid..
            </summary>
        </member>
        <member name="T:Mapgenix.Canvas.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.Resources.ESPG">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.Resources.ESRI">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.Resources.ESRIExtra">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.Resources.LoadingTile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.Properties.Resources.NoImageTile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Mapgenix.Canvas.SimpleCandidate">
            <summary>For storing label information used in the PositionStyle.</summary>
            <remarks>Used in PositionStyle for storing simple label information.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.SimpleCandidate.#ctor">
            <summary>Constructor of the class.</summary>
            <overloads>Default constructor. Setting manually the properties is necessary.</overloads>
            <returns>None</returns>
            <remarks>None/// </remarks>
        </member>
        <member name="M:Mapgenix.Canvas.SimpleCandidate.#ctor(System.String,Mapgenix.Shapes.PolygonShape)">
            <summary>Constructor of the class.</summary>
            <overloads>Passes in the original text and a simple polygon in screen coordinates.</overloads>
            <returns>None</returns>
            <remarks>None</remarks>
            <param name="originalText">Text of the label.</param>
            <param name="simplePolygonInScreenCoordinate">Polygon in screen coordinates representing the area of the label.</param>
        </member>
        <member name="P:Mapgenix.Canvas.SimpleCandidate.OriginalText">
            <summary>Gets and sets the text of the label.</summary>
            <value>Text of the label.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.SimpleCandidate.SimplePolygonInScreenCoordinate">
            <summary>Gets and sets the polygon in screen coordinates representing the area of the label.</summary>
            <value>Polygon in screen coordinates representing the area of the label.</value>
            <remarks>None</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.MapResizeMode">
            <summary>Modes for resizing map.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.MapResizeMode.PreserveScale">
            <summary>Preserves scale of the map.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.MapResizeMode.PreserveScaleAndCenter">
            <summary>Preserves scale and center of the map.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.MapResizeMode.PreserveExtent">
            <summary>Preserves extent of the map.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.SplineType">
            <summary>Spline types of labeling line based features.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.SplineType.Default">
            <summary>Default SplineType in LabelStyle.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.SplineType.None">
            <summary>No spline. Better performance.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.SplineType.StandardSplining">
            <summary>Standard splining. Recommended for latin based languages.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.SplineType.ForceSplining">
            <summary>Force splining. Recommned for character based languages such as Chinese or Japonese. </summary>
        </member>
        <member name="T:Mapgenix.Canvas.StandardColors">
            <summary>
            Predefined set of standard colors.
            </summary>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ActiveBorder">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ActiveCaption">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ActiveCaptionText">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.AppWorkspace">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Control">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ControlDark">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ControlDarkDark">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ControlLight">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ControlLightLight">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ControlText">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Desktop">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.GrayText">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Highlight">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.HighlightText">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.HotTrack">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.InactiveBorder">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.InactiveCaption">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.InactiveCaptionText">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Info">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.InfoText">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Menu">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MenuText">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ScrollBar">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Window">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.WindowFrame">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.WindowText">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Transparent">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.AliceBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.AntiqueWhite">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Aqua">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Aquamarine">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Azure">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Beige">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Bisque">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Black">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.BlanchedAlmond">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Blue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.BlueViolet">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Brown">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.BurlyWood">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.CadetBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Chartreuse">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Chocolate">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Coral">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.CornflowerBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Cornsilk">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Crimson">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Cyan">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkCyan">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkGoldenrod">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkGray">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkKhaki">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkMagenta">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkOliveGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkOrange">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkOrchid">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkRed">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkSalmon">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkSeaGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkSlateBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkSlateGray">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkTurquoise">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DarkViolet">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DeepPink">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DeepSkyBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DimGray">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.DodgerBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Firebrick">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.FloralWhite">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ForestGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Fuchsia">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Gainsboro">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.GhostWhite">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Gold">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Goldenrod">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Gray">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Green">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.GreenYellow">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Honeydew">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.HotPink">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.IndianRed">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Indigo">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Ivory">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Khaki">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Lavender">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LavenderBlush">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LawnGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LemonChiffon">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightCoral">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightCyan">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightGoldenrodYellow">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightGray">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightPink">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightSalmon">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightSeaGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightSkyBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightSlateGray">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightSteelBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LightYellow">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Lime">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.LimeGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Linen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Magenta">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Maroon">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MediumAquamarine">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MediumBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MediumOrchid">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MediumPurple">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MediumSeaGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MediumSlateBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MediumSpringGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MediumTurquoise">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MediumVioletRed">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MidnightBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MintCream">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MistyRose">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Moccasin">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.NavajoWhite">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Navy">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.OldLace">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Olive">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.OliveDrab">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Orange">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.OrangeRed">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Orchid">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.PaleGoldenrod">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.PaleGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.PaleTurquoise">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.PaleVioletRed">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.PapayaWhip">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.PeachPuff">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Peru">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Pink">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Plum">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.PowderBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Purple">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Red">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.RosyBrown">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.RoyalBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.SaddleBrown">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Salmon">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.SandyBrown">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.SeaGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.SeaShell">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Sienna">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Silver">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.SkyBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.SlateBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.SlateGray">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Snow">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.SpringGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.SteelBlue">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Tan">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Teal">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Thistle">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Tomato">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Turquoise">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Violet">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Wheat">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.White">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.WhiteSmoke">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.Yellow">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.YellowGreen">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ButtonFace">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ButtonHighlight">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.ButtonShadow">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.GradientActiveCaption">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.GradientInactiveCaption">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MenuBar">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.StandardColors.MenuHighlight">
            <summary>Gets the color based on the GDI+ version of the color.</summary>
            <remarks>Exposes the colors shipping with GDI+.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.BaseStyle">
            <summary>Abstract class as the root for all styles used for drawing features.</summary>
            <remarks>In order to extend one's own style, it is suggested to first consider extending an existoing concrete style. 
            The most important method to override is DrawCore.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseStyle.#ctor">
            <summary>Default constructor called by sub classes.</summary>
            <returns>None</returns>
        </member>
        <member name="P:Mapgenix.Canvas.BaseStyle.Name">
            <summary>Gets and sets the name of the style.</summary>
            <value>Name of the style.</value>
            <remarks>This property is not used internally. It can be used by the developper, for example to generate a legend.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseStyle.IsActive">
            <summary>Gets and sets the active status of the style.</summary>
            <value>Active status of the style.</value>
            <remarks>If the style is not active, it does not draw.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.BaseStyle.RequiredColumnNames">
            <summary>Gets a collection of fields required for the style.</summary>
            <value>Collection of fields required for the style.</value>
            <remarks>Gets a collection of fields required for the style.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseStyle.CloneDeep">
            <summary>Creates a copy of style using the deep clone technique.</summary>
            <returns>Cloned style.</returns>
            <remarks>Deep cloning copies the cloned object and all the objects within it.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseStyle.CloneDeepCore">
            <summary>Create a copy of style using the deep clone technique.</summary>
            <returns>A cloned style.</returns>
            <remarks>Deep cloning copies the cloned object and all the objects within it.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseStyle.Draw(System.Collections.Generic.IEnumerable{Mapgenix.Shapes.Feature},Mapgenix.Canvas.BaseGeoCanvas,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Draws the features on the canvas passed in.</summary>
            <returns>None</returns>
            <remarks>
            	<para>Concrete wrapper of the abstract method DrawCore.<br/><br/>
                As a concrete public method that wraps a Core method, Mapgenix reserves the right
                to add events and other logic returned by the Core version of the method. </para>
            </remarks>
            <param name="features">Features to draw on the canvas.</param>
            <param name="canvas">Canvas to draw the features on.</param>
            <param name="labelsInThisLayer">Labels to draw in the current layer only.</param>
            <param name="labelsInAllLayers">Labels to draw in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseStyle.Draw(System.Collections.Generic.IEnumerable{Mapgenix.Shapes.BaseShape},Mapgenix.Canvas.BaseGeoCanvas,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Draws the shapes on the canvas passed in.</summary>
            <returns>None</returns>
            <remarks>
            	<para>Concrete wrapper of the abstract method DrawCore.<br/><br/>
                As a concrete public method that wraps a Core method, Mapgenix reserves the right
                to add events and other logic returned by the Core version of the method.</para>
            </remarks>
            <param name="shapes">Shapes to draw on the canvas.</param>
            <param name="canvas">Canvas to draw the shapes on.</param>
            <param name="labelsInThisLayer">Labels to draw in the current layer only.</param>
            <param name="labelsInAllLayers">Labels to draw in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseStyle.DrawCore(System.Collections.Generic.IEnumerable{Mapgenix.Shapes.Feature},Mapgenix.Canvas.BaseGeoCanvas,System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Draws the features on the canvas passed in.</summary>
            <remarks>Abstract method called from the concrete public method Draw.</remarks>
            <returns>None</returns>
            <param name="features">Features to draw on the canvas.</param>
            <param name="canvas">Canvas to draw the features on.</param>
            <param name="labelsInThisLayer">Labels to draw in the current layer only.</param>
            <param name="labelsInAllLayers">Labels to draw in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.BaseStyle.GetRequiredColumnNames">
             <summary>Returns the column data required for the style to draw.</summary>
             <returns>Collection of column names requiered by the style.</returns>
             <remarks>As a concrete public method that wraps a Core method, Mapgenix reserves the right
            to add events and other logic returned by the Core version of the method.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseStyle.GetRequiredColumnNamesCore">
            <summary>Returns the column data required for the style to draw.</summary>
            <remarks>Abstract method called from the concrete public method GetRequiredFieldNames.</remarks>
            <returns>Returns a collection of column names required by the style.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.BaseStyle.DrawSample(Mapgenix.Canvas.BaseGeoCanvas,Mapgenix.Canvas.DrawingRectangleF)">
            <summary>Draws a sample feature on the canvas passed in.</summary>
            <returns>None</returns>
            <remarks>Concrete wrapper for the abstract method DrawSampleCore.
                Can be used to display a legend or other sample area.
                As a concrete public method that wraps a Core method, Mapgenix reserves the right
                to add events and other logic returned by the Core version of the method.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.BaseStyle.DrawSampleCore(Mapgenix.Canvas.BaseGeoCanvas,Mapgenix.Canvas.DrawingRectangleF)">
            <summary>Draws a sample feature on the canvas passed in.</summary>
            <remarks>Virtual method called from the concrete public method Draw. 
            Can be used to display a legend or other sample area.</remarks>
            <returns>None</returns>
            <param name="canvas">Canvas you want to draw the features on.</param>
            <param name="drawingExtent">Extent of the drawing.</param>
        </member>
        <member name="T:Mapgenix.Canvas.LabelStyle">
            <summary>Class used to label features on the map.</summary>
            <remarks>Used for labeling feature based layers on the map. Many properties are available to control the appearance and behavior
            of the label on the map.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.LabelStyle.#ctor">
            <summary>Constructor of the class.</summary>
            <overloads>
            This is the default constructor for the class. If you use this constructor, you
            should set the required properties manually.</overloads>
            <returns>None</returns>
        </member>
        <member name="M:Mapgenix.Canvas.LabelStyle.#ctor(System.String,Mapgenix.Canvas.GeoFont,Mapgenix.Canvas.GeoSolidBrush)">
            <summary>Constructor of the class.</summary>
            <returns>None</returns>
            <overloads>To pass in the minimum required fields for labeling. Explore other properties for more control on labeling.</overloads>
            <param name="textColumnName">Name of the column containing the text to label.</param>
            <param name="textFont">Font of the label.</param>
            <param name="textSolidBrush">GeoSolidBrush of the label.</param>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.PolygonLabelingLocationMode">
            <summary>Gets and sets the mode determining a polygon labeling location.</summary>
            <value>Mode determining a polygon labeling location.</value>
            <remarks>The two ways to establish a polygon's labeling location area:
            1) Polygon's centroid 2) Polygon's boungdingbox center.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.XOffsetInPixel">
            <summary>Gets and sets the X offset in pixel for drawing labels.</summary>
            <value>X pixel offset in pixel for drawing each labels.</value>
            <remarks>Useful to adjust the position of a label, for example, in relation to the point it represents.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.YOffsetInPixel">
            <summary>Gets and sets the Y offset in pixel for drawing labels.</summary>
            <value>Y pixel offset in pixel for drawing each labels.</value>
            <remarks>Useful to adjust the position of a label, for example, in relation to the point it represents.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.GridSize">
            <summary>Gets and sets the grid size used for deterministic labeling.</summary>
            <value>Grid size for deterministic labeling.</value>
            <remarks>Grid size determines how many labels will be considered as candidates for drawing by grid. The
            smaller the grid size, the higher the density of candidates. The smaller the grid, 
            the more the drawing speed performance is negatively impacted.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.FittingLineInScreen">
            <summary>Gets and sets whether the labeler intends to fit the label on the visible part of a line on the screen.</summary>
            <value>Whether the labeler intends to fit the label on the visible part of the line or not.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.CustomTextStyles">
            <summary>Returns a collection of label styles to stack multiple label styles on top of each other.</summary>
            <value>collection of label styles.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.RotationAngle">
            <summary>Gets and sets the rotation angle of the label being positioned.</summary>
            <value>Rotation angle of the item being positioned.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.TextFormat">
            <summary>Gets and sets the format for the text of the label.</summary>
            <value>Format for the text of the label.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.NumericFormat">
            <summary>Gets and sets the numeric format for the text of the label.</summary>
            <value>Numeric format for the text of the label.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.DateFormat">
            <summary>Gets and sets the date format for the text of the label.</summary>
            <value>Date format for the text of the label.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.TextSolidBrush">
            <summary>Gets and sets the SolidBrush to draw the text of the label.</summary>
            <value>This property gets the SolidBrush that will be used to draw the text.</value>
            <remarks>To draw a solid color. For other brushes, use Advanced property.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.Font">
            <summary>Gets and sets the font to draw the text of the label.</summary>
            <value>Font to draw the text of the label.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.HaloPen">
            <summary>Gets and sets a pen to draw a halo around the text of the label.</summary>
            <value>Pen to draw a halo around the text of the label</value>
            <remarks>Halo effect makes the text stand out.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.TextColumnName">
            <summary>Gets and sets the column name in the data to get the text from.</summary>
            <value>Column name in the data to get the text from.</value>
            <remarks>To retrieve text from a feature specifying the name of the column that contains the text to draw.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.Mask">
            <summary>Gets and sets the AreaStyle to draw a mask behind the text.</summary>
            <value>AreaStyle to draw a mask behind the text.</value>
            <remarks>Halo and mask are similar in their effect of making highlight the text.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.MaskMargin">
            <summary>Gets and sets the margin around the text for the mask.</summary>
            <value>Margin around the text for the mask.</value>
            <remarks>Determines how much larger the mask is than the text.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.Advanced">
            <summary>Gets the custom properties of LabelStyle.</summary>
            <value>Gets he custom properties of LabelStyle.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.DuplicateRule">
            <summary>Gets and sets the rule determining how duplication of labels is handled.</summary>
            <value>Rule determining how duplication of labels is handled.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.OverlappingRule">
            <summary>Gets and sets the rule determining how overlapping labels are handled.</summary>
            <value>Rule determining how overlapping labels are handled.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.AllowLineCarriage">
            <summary>Gets and sets whether the labeler allows carriage returns.</summary>
            <value>Whether the labeler allows carriage returns.</value>
            <remarks>Allows the labeler to split long labels into multiple lines.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.ForceLineCarriage">
            <summary>Gets and sets whether the labeler  forces carriage returns.</summary>
            <value>Whether the labeler forces carriage returns.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.FittingPolygon">
            <summary>Gets and sets whether the labeler intends to fit the label within the boundary of polygon.</summary>
            <value>Whether the labeler intends to fit the label within the boundary of polygon.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.LabelAllPolygonParts">
            <summary>Gets and sets whether the labeler labels every part of a multi-part polygon.</summary>
            <value>Whether the labeler labels every part of a multi-part polygon.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.LabelAllLineParts">
            <summary>Gets and sets whether the labeler lebels every part of a multi-part line.</summary>
            <value>Whether the labeler labels every part of a multi-part line.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.ForceHorizontalLabelForLine">
            <summary>Gets and sets whether labeling for lines is horizontal.</summary>
            <value>Whether labeling for lines is horizontal.</value>
            <remarks>Normally lines are labeled in the direction of the line.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.FittingPolygonFactor">
            <summary>Gets and sets the factor keeping the label inside of the polygon.</summary>
            <value>Factor keeping the label inside of the polygon.</value>
            <remarks>None</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.SuppressPartialLabels">
            <summary>Gets and sets whether a partial label in the current extent is drawn or not.</summary>
            <remarks>Provides a solution to the "cut off" label issue when multiple tiles exist.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.TextLineSegmentRatio">
            <summary>Gets and sets the ratio label length / line length.</summary>
            <value>Ratio label length / line length.</value>
            <remarks>Allows to suppress labels to avoid label length exceeding greatly the line length.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.BestPlacement">
            <summary>Gets and sets whether the labeler changes the label position to avoid overlapping for point-based features.</summary>
            <value>Whether the labeler changes the label position to avoid overlapping for point-based features.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.PointPlacement">
            <summary>Gets and sets the location of the label for point features in relation to the point.</summary>
            <value>Location of the label for point features in relation to the point.</value>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.SplineType">
            <summary>Gets or sets the SplineType for labeling.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.DrawingLevel">
            <summary>Gets or sets the DrawingLavel for the label.</summary>
        </member>
        <member name="P:Mapgenix.Canvas.LabelStyle.LabelPositions">
            <summary>Returns a value representing a keyValuepair (feature id and label position of a features).</summary>
        </member>
        <!-- El comentario XML con formato incorrecto se ha omitido para el miembro "M:Mapgenix.Canvas.LabelStyle.DrawSampleCore(Mapgenix.Canvas.BaseGeoCanvas,Mapgenix.Canvas.DrawingRectangleF)" -->
        <!-- El comentario XML con formato incorrecto se ha omitido para el miembro "T:Mapgenix.Canvas.LabelStyleCustom" -->
        <member name="P:Mapgenix.Canvas.LabelStyleCustom.TextCustomBrush">
            <summary>Gets and sets a custom  brush.</summary>
            <value>Custom brush.</value>
            <remarks>Allows  to use custom brushes to achieve effects such as linear gradients and bitmap fills.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.TileImageFormat">
            <summary>Formats of the map image tile.</summary>
            <remarks>Recommendation: 
            -With low bandwidth network use JPEG image format.
            -To overlay on top of other images, use PNG image format which supports transparency.
            </remarks>
        </member>
        <member name="F:Mapgenix.Canvas.TileImageFormat.Png">
            <summary>Image in PNG image format.</summary>
        </member>
        <member name="F:Mapgenix.Canvas.TileImageFormat.Jpeg">
            <summary>Image in JPEG image format.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.UnsafeHelper">
            <summary>
            Static class as a wrapper for unsafe native methods
            </summary>
        </member>
        <member name="M:Mapgenix.Canvas.UnsafeHelper.IsKeyPressed(System.Windows.Forms.Keys)">
            <summary>Returns a boolean value for a specified key pressed or not.</summary>
            <param name="keys">Enum for the key.</param>
            <returns>Boolean value representing if a specified key is pressed or not.</returns>
            <remarks>It will call User32.dll API GetAsyncKeyState internally.</remarks>
        </member>
        <member name="T:Mapgenix.Canvas.WorldLabelingCandidate">
            <summary>Labeling candidate with center point information in world coordinates.</summary>
            <remarks>Used in the labeling system keeping track of every potential label according to labeling rules.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.WorldLabelingCandidate.#ctor">
            <summary>Default constructor of the class.</summary>
            <returns>None</returns>
            <remarks>Properties need to be set manually.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.WorldLabelingCandidate.#ctor(System.String)">
            <summary>Constructor of the class.</summary>
            <overloads>Passes in the text of the label.</overloads>
            <returns>None</returns>
            <remarks>None</remarks>
            <param name="originalText">Text of the label before possible modification occurs.</param>
        </member>
        <member name="M:Mapgenix.Canvas.WorldLabelingCandidate.#ctor(System.String,Mapgenix.Shapes.PointShape)">
            <summary>Constructor of the class.</summary>
            <overloads>Passes in the text of the label and the center point in world coordinates.</overloads>
            <returns>None</returns>
            <remarks>None</remarks>
            <param name="originalText">Text of the label before possible modification occurs.</param>
            <param name="centerPointInWorldCoordinates">Center of the polygon (in world coordinates) representing the area to be labeled.</param>
        </member>
        <member name="P:Mapgenix.Canvas.WorldLabelingCandidate.CenterPointInWorldCoordinates">
            <summary>Gets or sets the center point position in world coordinates.</summary>
        </member>
        <member name="T:Mapgenix.Canvas.ZoomLevel">
            <summary>Zoom level based on map scale to control drawing of features.</summary>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevel.#ctor">
            <summary>Constructor of the class.</summary>
            <overloads>Default constructor. Set the properties manually.</overloads>
            <returns>None</returns>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevel.#ctor(System.Double)">
            <summary>Constructor of the class.</summary>
            <overloads>Provides the scale for this ZoomLevel.</overloads>
            <returns>None</returns>
            <param name="scale">Scale for the ZoomLevel.</param>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevel.IsActive">
            <summary>Gets and sets whether the ZoomLevel is active and should draw.</summary>
            <value>Whether the ZoomLevel is active and draws.</value>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevel.Scale">
            <summary>Gets and sets the scale for the ZoomLevel.</summary>
            <value>Scale for the ZoomLevel.</value>
            <remarks>The definition of scale is: The ratio or relationship between a distance or area on a map and the corresponding distance or area
            on the ground, commonly expressed as a fraction or ratio. A map scale of 1/100,000 or 1:100,000 means that one unit of measure on the map
            equals 100,000 of the same unit on the earth.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevel.DefaultAreaStyle">
            <summary>Gets and sets the default AreaStyle for the zoom level.</summary>
            <value>Default AreaStyle for the zoom level.</value>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevel.DefaultLineStyle">
            <summary>Gets and sets the default LineStyle for the zoom level.</summary>
            <value>Default LineStyle for the zoom level.</value>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevel.DefaultPointStyle">
            <summary>Gets and sets the default PointStyle for the zoom level.</summary>
            <value>Default PointStyle for the zoom level.</value>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevel.DefaultTextStyle">
            <summary>Gets and sets the default LabelStyle (TextStyle) for the zoom level.</summary>
            <value>Default LabelStyle for the zoom level.</value>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevel.ApplyUntilZoomLevel">
            <summary>Gets and sets the zoom level until which this zoom level's styles applies.</summary>
            <value>Zoom level until which this zoom level's styles applies.</value>
            <remarks>Zoom level 01 is at the world level. Zoom level 20 is at the street level.
            Use this property, for example, to avoid drawing local street at high zoom levels.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevel.Name">
            <summary>Gets and sets the name of the ZoomLevel.</summary>
            <value>Name of the ZoomLevel.</value>
            <remarks>Usefull for legend etc.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevel.CustomStyles">
            <summary>Gets a collection of custom styles for the zoom level.</summary>
            <value>Collection of custom styles for the zoom level.</value>
            <remarks>It recommended to use DefaultAreaStyle, DefaultLineStyle etc it you need to draw only one style.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevel.GetRequiredColumnNames">
            <summary>Returns the column data for each feature that is required for the styles to draw.</summary>
            <returns>Collection containing the required column names.</returns>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevel.Draw(Mapgenix.Canvas.BaseGeoCanvas,System.Collections.Generic.IEnumerable{Mapgenix.Shapes.Feature},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Draws a collection of features of the ZoomLevel.</summary>
            <returns>None</returns>
            <remarks>
            	<para>Concrete wrapper of abstract method DrawCore.<br/><br/>
                As a concrete public method that wraps a Core method, Mapegenix reserves the right
                to add events and other logic returned by the Core version of the method.</para>
            </remarks>
            <param name="canvas">Canvas used to draw the features.</param>
            <param name="features">Collection of features to draw.</param>
            <param name="currentLayerLabels">Collection of labels in the current layer.</param>
            <param name="allLayerLabels">Collection of labels in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevel.Draw(Mapgenix.Canvas.BaseGeoCanvas,System.Collections.Generic.IEnumerable{Mapgenix.Shapes.BaseShape},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Draws a collection of shapes of the ZoomLevel.</summary>
            <returns>None</returns>
            <remarks>
            	<para>Concrete wrapper of abstract method DrawCore.<br/><br/>
                As a concrete public method that wraps a Core method, Mapegenix reserves the right
                to add events and other logic returned by the Core version of the method.</para>
            </remarks>
            <param name="canvas">Canvas used to draw the features.</param>
            <param name="shapes">Collection of shapes to draw.</param>
            <param name="currentLayerLabels">Collection of labels in the current layer.</param>
            <param name="allLayerLabels">Collection of labels in all layers.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevel.DrawCore(Mapgenix.Canvas.BaseGeoCanvas,System.Collections.Generic.IEnumerable{Mapgenix.Shapes.Feature},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate},System.Collections.ObjectModel.Collection{Mapgenix.Canvas.SimpleCandidate})">
            <summary>Draws the features on the canvas passed in.</summary>
            <remarks>Called from the concrete public method Draw. 
            When overriding this method, consider each feature and its column data values.If column data for a
            feature is needed, be sure to override GetRequiredColumnNamesCore and add the columns to the collection.</remarks>
            <returns>None</returns>
            <param name="canvas">Canvas to draw the features on.</param>
            <param name="features">Features to draw on the canvas.</param>
            <param name="labelsInThisLayer">Labels to draw in the current layer only.</param>
            <param name="labelsInAllLayers">Labels to drawn in all layers.</param>
        </member>
        <member name="T:Mapgenix.Canvas.ZoomLevelSet">
            <summary>Collection of ZoomLevels.</summary>
            <remarks>Each ZoomLevel has a different scale. It stores Styles determining how the features draw.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.Name">
            <summary>Gets and sets the name of the ZoomSet.</summary>
            <value>Name of the ZoomSet.</value>
            <remarks>Usefull for legend, for example.</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.CustomZoomLevels">
            <summary>Gets the custom zoom levels of the zoomLevelSet.</summary>
            <remarks>None</remarks>
            <value>Custom zoom levels of the zoomLevelSet.</value>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel01">
            <summary>Gets the ZoomLevel for Level01.</summary>
            <decimalDegreesValue>ZoomLevel for Level01.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel02">
            <summary>Gets the ZoomLevel for Level02.</summary>
            <decimalDegreesValue>ZoomLevel for Level012.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel03">
            <summary>Gets the ZoomLevel for Level03.</summary>
            <decimalDegreesValue>ZoomLevel for Level03.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel04">
            <summary>Gets the ZoomLevel for Level04.</summary>
            <decimalDegreesValue>ZoomLevel for Level04.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel05">
            <summary>Gets the ZoomLevel for Level05.</summary>
            <decimalDegreesValue>ZoomLevel for Level05.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel06">
            <summary>Gets the ZoomLevel for Level06.</summary>
            <decimalDegreesValue>ZoomLevel for Level06.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel07">
            <summary>Gets the ZoomLevel for Level07.</summary>
            <decimalDegreesValue>ZoomLevel for Level07.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel08">
            <summary>Gets the ZoomLevel for Level08.</summary>
            <decimalDegreesValue>ZoomLevel for Level08.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel09">
            <summary>Gets the ZoomLevel for Level09.</summary>
            <decimalDegreesValue>ZoomLevel for Level09.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel10">
            <summary>Gets the ZoomLevel for Level10.</summary>
            <decimalDegreesValue>ZoomLevel for Level10.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel11">
            <summary>Gets the ZoomLevel for Level11.</summary>
            <decimalDegreesValue>ZoomLevel for Level11.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel12">
            <summary>Gets the ZoomLevel for Level12.</summary>
            <decimalDegreesValue>ZoomLevel for Level12.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel13">
            <summary>Gets the ZoomLevel for Level13.</summary>
            <decimalDegreesValue>ZoomLevel for Level13.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel14">
            <summary>Gets the ZoomLevel for Level14.</summary>
            <decimalDegreesValue>ZoomLevel for Level14.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel15">
            <summary>Gets the ZoomLevel for Level15.</summary>
            <decimalDegreesValue>ZoomLevel for Level15.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel16">
            <summary>Gets the ZoomLevel for Level16.</summary>
            <decimalDegreesValue>ZoomLevel for Level16.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel17">
            <summary>Gets the ZoomLevel for Level17.</summary>
            <decimalDegreesValue>ZoomLevel for Level17.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel18">
            <summary>Gets the ZoomLevel for Level18.</summary>
            <decimalDegreesValue>ZoomLevel for Level18.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel19">
            <summary>Gets the ZoomLevel for Level19.</summary>
            <decimalDegreesValue>ZoomLevel for Level19.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="P:Mapgenix.Canvas.ZoomLevelSet.ZoomLevel20">
            <summary>Gets the ZoomLevel for Level20.</summary>
            <decimalDegreesValue>ZoomLevel for Level20.</decimalDegreesValue>
            <remarks>Corresponds to the standard zoom levels of Google Maps from 01 (world level) to 20 (street level)</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevelSet.GetZoomLevel(Mapgenix.Shapes.RectangleShape,System.Double,Mapgenix.Shapes.GeographyUnit)">
            <summary>Returns the active ZoomLevel based on an extent, a map unit and a screen width.</summary>
            <returns>Active ZoomLevel based on an extent, a map unit and a screen width.</returns>
            <param name="extent">World extent of the map.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="mapUnit">Unit of the map.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevelSet.GetZoomLevel(Mapgenix.Shapes.RectangleShape,System.Double,Mapgenix.Shapes.GeographyUnit,System.Single)">
            <summary>Returns the active ZoomLevel based on an extent, a map unit and a screen width.</summary>
            <returns>Active ZoomLevel based on an extent, a map unit and a screen width.</returns>
            <param name="extent">World extent of the map.</param>
            <param name="screenWidth">Width of the map in screen coordinates.</param>
            <param name="mapUnit">Unit of the map.</param>
            <param name="dpi">Dpi (Dot per inch)</param>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevelSet.GetZoomLevelForDrawing(Mapgenix.Shapes.RectangleShape,System.Double,Mapgenix.Shapes.GeographyUnit,System.Single)">
            <summary>Returns the active ZoomLevel based on an extent, a map unit and a canvas width.</summary>
            <returns>Active ZoomLevel based on an extent, map unit and a canvas width.</returns>
            <param name="extent">World extent of the map.</param>
            <param name="screenWidth">Width of the canvas in pixels.</param>
            <param name="mapUnit">Unit of the map.</param>
            <param name="dpi">Dpi (Dot per inch).</param>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevelSet.GetZoomLevelForDrawing(Mapgenix.Shapes.RectangleShape,System.Double,Mapgenix.Shapes.GeographyUnit)">
            <summary>Returns the active ZoomLevel based on an extent, a map unit and a canvas width.</summary>
            <returns>Active ZoomLevel based on an extent, map unit and a canvas width.</returns>
            <param name="extent">World extent of the map.</param>
            <param name="screenWidth">Width of the canvas in pixels.</param>
            <param name="mapUnit">Unit of the map.</param>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevelSet.GetZoomLevels">
            <summary>Returns collection of zoomLevels in the zoomLevelSet.</summary>
            <returns>Collection of zoomlevels in the zoomLevelSet.</returns>
            <remarks>None.</remarks>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevelSet.GetLowerZoomLevelScale(System.Double,Mapgenix.Canvas.ZoomLevelSet)">
            <summary>Gets the lower zoom level based on a scale.</summary>
            <param name="currentScale">Current scale.</param>
            <param name="zoomLevelSet">Zoom level set</param>
            <returns></returns>
        </member>
        <member name="M:Mapgenix.Canvas.ZoomLevelSet.GetHigherZoomLevelScale(System.Double,Mapgenix.Canvas.ZoomLevelSet)">
            <summary>Gets the higher zoom level based on a scale.</summary>
            <param name="currentScale">Current scale.</param>
            <param name="zoomLevelSet">Zoom level set</param>
            <returns></returns>
        </member>
    </members>
</doc>

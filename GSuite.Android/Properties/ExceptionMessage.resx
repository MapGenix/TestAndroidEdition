<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DoubleOutOfRange" xml:space="preserve">
    <value>The input double value is out of range.</value>
  </data>
  <data name="DrawModeIsInvalid" xml:space="preserve">
    <value>The DrawMode is invalid, please set the DrawMode with a proper value.</value>
  </data>
  <data name="EnumerationIsInvalid" xml:space="preserve">
    <value>Enum is out of range.</value>
  </data>
  <data name="EpsgProjectionNameInvalid" xml:space="preserve">
    <value>The projection name needs have "EPSG:" as prefix.</value>
  </data>
  <data name="EvaluationExpired" xml:space="preserve">
    <value>The evaluation has expired. </value>
  </data>
  <data name="EvaluationNotInstalled" xml:space="preserve">
    <value>The evaluation edition has not been installed.</value>
  </data>
  <data name="EvaluationWatermark" xml:space="preserve">
    <value>Eval {0} days</value>
  </data>
  <data name="GeocanvasIsNotInDrawing" xml:space="preserve">
    <value>The GeoCanvas is currently not drawing.  Please call the BeginDraw method before calling this method.</value>
  </data>
  <data name="MapUnitIsInvalid" xml:space="preserve">
    <value>The map unit is invalid, please set the MapUnit with a proper value.</value>
  </data>
  <data name="MouseCoordinateTypeIsInValid" xml:space="preserve">
    <value>The mouse coordinate type is invalid, please set the MapCoordinateType with a proper value.</value>
  </data>
  <data name="OverlayDrawTypeIsInvalid" xml:space="preserve">
    <value>The OverlayDrawType is invalid, please set the OverlayDrawType with a proper value.</value>
  </data>
  <data name="OverlayIsNotInMap" xml:space="preserve">
    <value>Overlay is not added in the map right now, please add it into the Map.Overlays collection first.</value>
  </data>
  <data name="PanDirectionIsInvalid" xml:space="preserve">
    <value>The pan direction is invalid, please set the PanDirection with a proper value.</value>
  </data>
  <data name="ParameterIsEmpty" xml:space="preserve">
    <value>The parameter you supplied may not be empty.</value>
  </data>
  <data name="ParameterIsNull" xml:space="preserve">
    <value>The parameter you supplied may not be null.</value>
  </data>
  <data name="ParametersCannotBeBothNull" xml:space="preserve">
    <value>Parameters cannot be both null.</value>
  </data>
  <data name="RefreshModeIsInvalid" xml:space="preserve">
    <value>The refresh mode is invalid.</value>
  </data>
  <data name="ScaleIsOutOfRange" xml:space="preserve">
    <value>The specified scale is out of range.</value>
  </data>
  <data name="SizeIsNotValid" xml:space="preserve">
    <value>The Size's width and height should be greater than zero.</value>
  </data>
  <data name="String" xml:space="preserve">
    <value>Please contact Mapgenix for</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>purchasing option or an</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>extension to the trial</value>
  </data>
  <data name="TextWrappingIsInvalid" xml:space="preserve">
    <value>The text wrapping setting is invalid, please set the TextWrapping with a proper value.</value>
  </data>
  <data name="TheValueShouldBeGreaterOrEqualToZero" xml:space="preserve">
    <value>The value should be greater or equal to zero.</value>
  </data>
  <data name="TheValueShouldBeGreaterThanZero" xml:space="preserve">
    <value>The value should be greater than zero.</value>
  </data>
  <data name="TheValueShouldNotBeNaN" xml:space="preserve">
    <value>The value should not be NaN, please set it with a proper value.</value>
  </data>
  <data name="TileTypeIsInvalid" xml:space="preserve">
    <value>The TileType is invalid, please set the TileType with a proper value.</value>
  </data>
  <data name="TrackModeIsInvalid" xml:space="preserve">
    <value>The track mode setting is invalid, please set the TrackMode with a proper value.</value>
  </data>
  <data name="Unlicensed" xml:space="preserve">
    <value>Unlicensed</value>
  </data>
  <data name="UnlicensedForRuntime" xml:space="preserve">
    <value>Unlicensed For Runtime</value>
  </data>
  <data name="ZoomLevelIdIsInvalid" xml:space="preserve">
    <value>The value should be greater than zero, less than ZoomLevelScales.Count.</value>
  </data>
</root>
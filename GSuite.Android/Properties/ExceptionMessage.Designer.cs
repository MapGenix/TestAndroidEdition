//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mapgenix.GSuite.Android.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessage {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessage() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mapgenix.GSuite.Wpf.Properties.ExceptionMessage", typeof(ExceptionMessage).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input double value is out of range..
        /// </summary>
        internal static string DoubleOutOfRange {
            get {
                return ResourceManager.GetString("DoubleOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DrawMode is invalid, please set the DrawMode with a proper value..
        /// </summary>
        internal static string DrawModeIsInvalid {
            get {
                return ResourceManager.GetString("DrawModeIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enum is out of range..
        /// </summary>
        internal static string EnumerationIsInvalid {
            get {
                return ResourceManager.GetString("EnumerationIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The projection name needs have &quot;EPSG:&quot; as prefix..
        /// </summary>
        internal static string EpsgProjectionNameInvalid {
            get {
                return ResourceManager.GetString("EpsgProjectionNameInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The evaluation has expired. .
        /// </summary>
        internal static string EvaluationExpired {
            get {
                return ResourceManager.GetString("EvaluationExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The evaluation edition has not been installed..
        /// </summary>
        internal static string EvaluationNotInstalled {
            get {
                return ResourceManager.GetString("EvaluationNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Eval {0} days.
        /// </summary>
        internal static string EvaluationWatermark {
            get {
                return ResourceManager.GetString("EvaluationWatermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The GeoCanvas is currently not drawing.  Please call the BeginDraw method before calling this method..
        /// </summary>
        internal static string GeocanvasIsNotInDrawing {
            get {
                return ResourceManager.GetString("GeocanvasIsNotInDrawing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The map unit is invalid, please set the MapUnit with a proper value..
        /// </summary>
        internal static string MapUnitIsInvalid {
            get {
                return ResourceManager.GetString("MapUnitIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mouse coordinate type is invalid, please set the MapCoordinateType with a proper value..
        /// </summary>
        internal static string MouseCoordinateTypeIsInValid {
            get {
                return ResourceManager.GetString("MouseCoordinateTypeIsInValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The OverlayDrawType is invalid, please set the OverlayDrawType with a proper value..
        /// </summary>
        internal static string OverlayDrawTypeIsInvalid {
            get {
                return ResourceManager.GetString("OverlayDrawTypeIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlay is not added in the map right now, please add it into the Map.Overlays collection first..
        /// </summary>
        internal static string OverlayIsNotInMap {
            get {
                return ResourceManager.GetString("OverlayIsNotInMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pan direction is invalid, please set the PanDirection with a proper value..
        /// </summary>
        internal static string PanDirectionIsInvalid {
            get {
                return ResourceManager.GetString("PanDirectionIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter you supplied may not be empty..
        /// </summary>
        internal static string ParameterIsEmpty {
            get {
                return ResourceManager.GetString("ParameterIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter you supplied may not be null..
        /// </summary>
        internal static string ParameterIsNull {
            get {
                return ResourceManager.GetString("ParameterIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters cannot be both null..
        /// </summary>
        internal static string ParametersCannotBeBothNull {
            get {
                return ResourceManager.GetString("ParametersCannotBeBothNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The refresh mode is invalid..
        /// </summary>
        internal static string RefreshModeIsInvalid {
            get {
                return ResourceManager.GetString("RefreshModeIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified scale is out of range..
        /// </summary>
        internal static string ScaleIsOutOfRange {
            get {
                return ResourceManager.GetString("ScaleIsOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Size&apos;s width and height should be greater than zero..
        /// </summary>
        internal static string SizeIsNotValid {
            get {
                return ResourceManager.GetString("SizeIsNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please contact Mapgenix for.
        /// </summary>
        internal static string String {
            get {
                return ResourceManager.GetString("String", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to purchasing option or an.
        /// </summary>
        internal static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to extension to the trial.
        /// </summary>
        internal static string String2 {
            get {
                return ResourceManager.GetString("String2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text wrapping setting is invalid, please set the TextWrapping with a proper value..
        /// </summary>
        internal static string TextWrappingIsInvalid {
            get {
                return ResourceManager.GetString("TextWrappingIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value should be greater or equal to zero..
        /// </summary>
        internal static string TheValueShouldBeGreaterOrEqualToZero {
            get {
                return ResourceManager.GetString("TheValueShouldBeGreaterOrEqualToZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value should be greater than zero..
        /// </summary>
        internal static string TheValueShouldBeGreaterThanZero {
            get {
                return ResourceManager.GetString("TheValueShouldBeGreaterThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value should not be NaN, please set it with a proper value..
        /// </summary>
        internal static string TheValueShouldNotBeNaN {
            get {
                return ResourceManager.GetString("TheValueShouldNotBeNaN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TileType is invalid, please set the TileType with a proper value..
        /// </summary>
        internal static string TileTypeIsInvalid {
            get {
                return ResourceManager.GetString("TileTypeIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The track mode setting is invalid, please set the TrackMode with a proper value..
        /// </summary>
        internal static string TrackModeIsInvalid {
            get {
                return ResourceManager.GetString("TrackModeIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlicensed.
        /// </summary>
        internal static string Unlicensed {
            get {
                return ResourceManager.GetString("Unlicensed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlicensed For Runtime.
        /// </summary>
        internal static string UnlicensedForRuntime {
            get {
                return ResourceManager.GetString("UnlicensedForRuntime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value should be greater than zero, less than ZoomLevelScales.Count..
        /// </summary>
        internal static string ZoomLevelIdIsInvalid {
            get {
                return ResourceManager.GetString("ZoomLevelIdIsInvalid", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The world extent is not valid..
        /// </summary>
        internal static string WorldExtentIsNotValid
        {
            get
            {
                return ResourceManager.GetString("WorldExtentIsNotValid", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The CurrentExtent property must be set before calling this method. If you want to use a custom extent, please use the static method.
        /// </summary>
        internal static string CurrentExtentNotAssigned
        {
            get
            {
                return ResourceManager.GetString("CurrentExtentNotAssigned", resourceCulture);
            }
        }
        // <summary>
        ///   Looks up a localized string similar to The value for the enumeration is not on of the valid values..
        /// </summary>
        internal static string EnumerationOutOfRange
        {
            get
            {
                return ResourceManager.GetString("EnumerationOutOfRange", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The map unit you are using is not compatable with the GoogleLayer .  Make sure you are using Meters and that your projection is 90013 to ensure compatability..
        /// </summary>
        internal static string GeographicUnitNotValidWithGoogle
        {
            get
            {
                return ResourceManager.GetString("GeographicUnitNotValidWithGoogle", resourceCulture);
            }
        }

    }
}

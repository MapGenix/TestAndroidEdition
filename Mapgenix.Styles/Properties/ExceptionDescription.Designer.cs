//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mapgenix.Styles.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionDescription {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionDescription() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mapgenix.Styles.Properties.ExceptionDescription", typeof(ExceptionDescription).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class breaks you have provided are invalid..
        /// </summary>
        internal static string ClassBreaksIsValid {
            get {
                return ResourceManager.GetString("ClassBreaksIsValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input double value is out of range..
        /// </summary>
        internal static string DoubleOutOfRange {
            get {
                return ResourceManager.GetString("DoubleOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value for the enumeration is not on of the valid values..
        /// </summary>
        internal static string EnumerationOutOfRange {
            get {
                return ResourceManager.GetString("EnumerationOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The feature is invalid in in this style..
        /// </summary>
        internal static string FeatureIsInvalidInThisStyle {
            get {
                return ResourceManager.GetString("FeatureIsInvalidInThisStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested column name is not in the Feature..
        /// </summary>
        internal static string FieldNameIsNotInFeature {
            get {
                return ResourceManager.GetString("FieldNameIsNotInFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The GeoCanvas is currently not drawing.  Please call the BeginDraw method before calling this method..
        /// </summary>
        internal static string GeocanvasIsNotInDrawing {
            get {
                return ResourceManager.GetString("GeocanvasIsNotInDrawing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ImageScaled property must be larger than 0..
        /// </summary>
        internal static string ImageScaleShouldBiggerThanZero {
            get {
                return ResourceManager.GetString("ImageScaleShouldBiggerThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter you supplied may not be empty..
        /// </summary>
        internal static string ParameterIsEmpty {
            get {
                return ResourceManager.GetString("ParameterIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter you supplied may not be null..
        /// </summary>
        internal static string ParameterIsNull {
            get {
                return ResourceManager.GetString("ParameterIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field type should be numeric..
        /// </summary>
        internal static string TheFieldTtypeShouldBeNumeric {
            get {
                return ResourceManager.GetString("TheFieldTtypeShouldBeNumeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value should be greater than zero..
        /// </summary>
        internal static string TheValueShouldBeGreaterThanZero {
            get {
                return ResourceManager.GetString("TheValueShouldBeGreaterThanZero", resourceCulture);
            }
        }
    }
}
